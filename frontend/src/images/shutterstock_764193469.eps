%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 170903_Cars and trucks top view isolated on transparent background.eps
%%Creator: Adobe Illustrator(R) 21.1
%%For: Валерия
%%CreationDate: 9/3/2017
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.1.0 x326 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">С‚РµРјРЅР°СЏ Р±РѕР»СЊС€Р°СЏ РєР»РµС‚РєР°</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2017-09-03T16:29:02+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2017-09-03T16:29:02+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2017-09-03T16:29:02+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9Q4qgtW/3nX/AFx+o4ql&#xA;WKp5Zf7yx/LFXXv+8snyxVI8VTXSf952/wBc/qGKo3FWO4qjtJ/vn/1f44qmmKpJf/71yfMfqGKu&#xA;sP8AeuP5n9RxVO8VSvVv75P9X+OKoHFWRYqgtW/3nX/XH6jiqVYqnll/vLH8sVde/wC8snyxVI8V&#xA;TXSf952/1z+oYqjcVY7iqO0n++f/AFf44qmmKpJf/wC9cnzH6hirrD/euP5n9RxVO8VSvVv75P8A&#xA;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&#xA;u+i90/JnTGuPIWnXlR6sisjOa1IRyAD8sx8GKIlOQHqMpfeXaazJLhhG/SIQ/wByGfTanE8TLGXj&#xA;ciivxBp70rmS4L57/O+VZmsgCS5nnDuwALVZBU0yyI3dp2fnOPGZHcDJCx5HjEh8Qx238gaUij15&#xA;pZm70IRfuoT+OYMu0pnkAHocXsppx9UpS+Q/Qi5PKOnFaRSSRkbDcMPuI/jko9p5BzALj5/YzSy+&#xA;mU4n4Efd+llP/OO0ajV/M1q1Hk/cojkbVR5BX2zLmbo94t1eun+7IG0Y5ZQH9WMYRH2B7cdJnps6&#xA;1+nIOmeW/mqbvT9C1dDPzuUEUqyoOIqGjI29sxtRijKeOxzlXw4ZM8ciBKu79ISzRfyb8p6lFFql&#xA;wLmeTUVW6FqrhI09YepwUIOe3Kn2s5XL7Q6wSOHGBcPTsCSa2v8AAc4aLEfXLrv802u/yY8qCEIL&#xA;a5s6DirrI1f+SgcZH/RH2ji3mNv6UK/U1S7K00+XPyKH/K5INK/MDXdKUtJZ6Za21vDUCpLVlZiN&#xA;hUvI2b3Sz8cY80wOLJxyPziB9gDWY+GJQjyjwj7yftL179K238r/AHD+ubhx3zj+adJNa0EEfBLM&#xA;pp3oXUEH7szMPK3M0Y3x/wDDYpPqPnHTrG6ktfRlkkiPFioULWnapr+GWU9Jqu3cWGZhwyJj7qbh&#xA;822rUMkDoD3Uhv8AmnDwOvx+1uEmpQkPkf1Mh/KuEP8AmzdwqQhaD4a9K+iGP8cry/QXH7RH7/N/&#xA;mfcHvv6Jm/nX8cwnToHFWEfmGvLT9TTkF5WRXkxoBUkVJ8MnFiVPyNF6PlHSouaycIFHOM8lNCd1&#xA;PcZGZ3LFPcirDfzRt/X0jTx6scXC/hesjcQeIb4V8WPYZZjNFae2Wb87OB6U5RoafNRkGxjPn7/e&#xA;aD/XH6mwxYyebeQLR4vMvmqdnjZZ5bYqiSIzrxEo+NFJZK9uXXNN2jK4QHdxfocKbOc1TBhf5q2j&#xA;3Oj6YqPGnp6nBITLIkdQqSbLzI5Nvso3zZdmSqcv6h/Qyi9Kt/7iP/UX9WbmHIOeOSaXX/HBm/4w&#xA;t+rJhS+eda/8mxD/AMYD/wAmM1Haf+L5f60f9677s7+9wf1J/wC6miV8heU1fmthRgag+rN/zXmj&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:95a14d1a-1ae2-c54a-98ca-c1cf2b274be9</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:95a14d1a-1ae2-c54a-98ca-c1cf2b274be9</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:0432cb38-e016-47c7-aab1-5203ff948cad</stRef:instanceID>
            <stRef:documentID>xmp.did:d93f5236-556e-9147-aca9-bc75783898f2</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:03801174072068118083E88E7F9AD91A</stEvt:instanceID>
                  <stEvt:when>2016-04-29T12:15:42+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:07801174072068118083E88E7F9AD91A</stEvt:instanceID>
                  <stEvt:when>2016-04-29T17:34:06+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c040bc5e-bd36-3547-8370-a359fd58b026</stEvt:instanceID>
                  <stEvt:when>2016-04-29T17:42:53+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d93f5236-556e-9147-aca9-bc75783898f2</stEvt:instanceID>
                  <stEvt:when>2017-08-25T15:11:09+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:95a14d1a-1ae2-c54a-98ca-c1cf2b274be9</stEvt:instanceID>
                  <stEvt:when>2017-09-03T16:29:02+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.87451 .87451 .87451 rgb
f
22.5 22.5 mo
0 22.5 li
0 0 li
22.5 0 li
22.5 22.5 li
cp
.976471 .976471 .976471 rgb
f
44.9999 44.9999 mo
22.5 44.9999 li
22.5 22.5 li
44.9999 22.5 li
44.9999 44.9999 li
f
67.5 22.5 mo
45 22.5 li
45 0 li
67.5 0 li
67.5 22.5 li
cp
f
90 44.9999 mo
67.5 44.9999 li
67.5 22.5 li
90 22.5 li
90 44.9999 li
f
112.5 22.5 mo
90 22.5 li
90 0 li
112.5 0 li
112.5 22.5 li
cp
f
135 45 mo
112.5 45 li
112.5 22.5 li
135 22.5 li
135 45 li
cp
f
157.5 22.5 mo
135 22.5 li
135 0 li
157.5 0 li
157.5 22.5 li
cp
f
180 44.9999 mo
157.5 44.9999 li
157.5 22.5 li
180 22.5 li
180 44.9999 li
f
202.5 22.5 mo
180 22.5 li
180 0 li
202.5 0 li
202.5 22.5 li
cp
f
225 44.9999 mo
202.5 44.9999 li
202.5 22.5 li
225 22.5 li
225 44.9999 li
f
247.5 22.5 mo
225 22.5 li
225 0 li
247.5 0 li
247.5 22.5 li
cp
f
270 44.9999 mo
247.5 44.9999 li
247.5 22.5 li
270 22.5 li
270 44.9999 li
f
292.5 22.5 mo
270 22.5 li
270 0 li
292.5 0 li
292.5 22.5 li
cp
f
315 45 mo
292.5 45 li
292.5 22.5 li
315 22.5 li
315 45 li
cp
f
337.5 22.5 mo
315 22.5 li
315 0 li
337.5 0 li
337.5 22.5 li
cp
f
360 45 mo
337.5 45 li
337.5 22.5 li
360 22.5 li
360 45 li
cp
f
382.5 22.5 mo
360 22.5 li
360 0 li
382.5 0 li
382.5 22.5 li
cp
f
405 44.9999 mo
382.5 44.9999 li
382.5 22.5 li
405 22.5 li
405 44.9999 li
f
427.5 22.5 mo
405 22.5 li
405 0 li
427.5 0 li
427.5 22.5 li
f
450 44.9999 mo
427.5 44.9999 li
427.5 22.5 li
450 22.5 li
450 44.9999 li
f
22.5 67.5 mo
0 67.5 li
0 44.9999 li
22.5 44.9999 li
22.5 67.5 li
f
44.9999 90 mo
22.5 90 li
22.5 67.5 li
44.9999 67.5 li
44.9999 90 li
f
67.5 67.5 mo
44.9999 67.5 li
44.9999 44.9999 li
67.5 44.9999 li
67.5 67.5 li
f
90 90 mo
67.5 90 li
67.5 67.5 li
90 67.5 li
90 90 li
f
112.5 67.5 mo
90 67.5 li
90 45 li
112.5 45 li
112.5 67.5 li
cp
f
135 90 mo
112.5 90 li
112.5 67.5 li
135 67.5 li
135 90 li
f
157.5 67.5 mo
135 67.5 li
135 44.9999 li
157.5 44.9999 li
157.5 67.5 li
f
180 90 mo
157.5 90 li
157.5 67.5 li
180 67.5 li
180 90 li
f
202.5 67.5 mo
180 67.5 li
180 44.9999 li
202.5 44.9999 li
202.5 67.5 li
f
225 90 mo
202.5 90 li
202.5 67.5 li
225 67.5 li
225 90 li
f
247.5 67.5 mo
225 67.5 li
225 44.9999 li
247.5 44.9999 li
247.5 67.5 li
f
270 90 mo
247.5 90 li
247.5 67.5 li
270 67.5 li
270 90 li
f
292.5 67.5 mo
270 67.5 li
270 44.9999 li
292.5 44.9999 li
292.5 67.5 li
f
315 90 mo
292.5 90 li
292.5 67.5 li
315 67.5 li
315 90 li
f
337.5 67.5 mo
315 67.5 li
315 45 li
337.5 45 li
337.5 67.5 li
cp
f
360 90 mo
337.5 90 li
337.5 67.5 li
360 67.5 li
360 90 li
f
382.5 67.5 mo
360 67.5 li
360 44.9999 li
382.5 44.9999 li
382.5 67.5 li
f
405 90 mo
382.5 90 li
382.5 67.5 li
405 67.5 li
405 90 li
f
427.5 67.5 mo
405 67.5 li
405 44.9999 li
427.5 44.9999 li
427.5 67.5 li
f
450 90 mo
427.5 90 li
427.5 67.5 li
450 67.5 li
450 90 li
cp
f
22.5 112.5 mo
0 112.5 li
0 90 li
22.5 90 li
22.5 112.5 li
f
44.9999 135 mo
22.5 135 li
22.5 112.5 li
44.9999 112.5 li
44.9999 135 li
f
67.5 112.5 mo
44.9999 112.5 li
44.9999 90 li
67.5 90 li
67.5 112.5 li
f
90 135 mo
67.5 135 li
67.5 112.5 li
90 112.5 li
90 135 li
f
112.5 112.5 mo
90 112.5 li
90 90 li
112.5 90 li
112.5 112.5 li
f
135 135 mo
112.5 135 li
112.5 112.5 li
135 112.5 li
135 135 li
f
157.5 112.5 mo
135 112.5 li
135 90 li
157.5 90 li
157.5 112.5 li
f
180 135 mo
157.5 135 li
157.5 112.5 li
180 112.5 li
180 135 li
f
202.5 112.5 mo
180 112.5 li
180 90 li
202.5 90 li
202.5 112.5 li
f
225 135 mo
202.5 135 li
202.5 112.5 li
225 112.5 li
225 135 li
f
247.5 112.5 mo
225 112.5 li
225 90 li
247.5 90 li
247.5 112.5 li
f
270 135 mo
247.5 135 li
247.5 112.5 li
270 112.5 li
270 135 li
f
292.5 112.5 mo
270 112.5 li
270 90 li
292.5 90 li
292.5 112.5 li
f
315 135 mo
292.5 135 li
292.5 112.5 li
315 112.5 li
315 135 li
f
337.5 112.5 mo
315 112.5 li
315 90 li
337.5 90 li
337.5 112.5 li
f
360 135 mo
337.5 135 li
337.5 112.5 li
360 112.5 li
360 135 li
f
382.5 112.5 mo
360 112.5 li
360 90 li
382.5 90 li
382.5 112.5 li
f
405 135 mo
382.5 135 li
382.5 112.5 li
405 112.5 li
405 135 li
f
427.5 112.5 mo
405 112.5 li
405 90 li
427.5 90 li
427.5 112.5 li
f
450 135 mo
427.5 135 li
427.5 112.5 li
450 112.5 li
450 135 li
cp
f
22.5 157.5 mo
0 157.5 li
0 135 li
22.5 135 li
22.5 157.5 li
f
44.9999 180 mo
22.5 180 li
22.5 157.5 li
44.9999 157.5 li
44.9999 180 li
f
67.5 157.5 mo
44.9999 157.5 li
44.9999 135 li
67.5 135 li
67.5 157.5 li
f
90 180 mo
67.5 180 li
67.5 157.5 li
90 157.5 li
90 180 li
f
112.5 157.5 mo
90 157.5 li
90 135 li
112.5 135 li
112.5 157.5 li
f
135 180 mo
112.5 180 li
112.5 157.5 li
135 157.5 li
135 180 li
f
157.5 157.5 mo
135 157.5 li
135 135 li
157.5 135 li
157.5 157.5 li
f
180 180 mo
157.5 180 li
157.5 157.5 li
180 157.5 li
180 180 li
f
202.5 157.5 mo
180 157.5 li
180 135 li
202.5 135 li
202.5 157.5 li
f
225 180 mo
202.5 180 li
202.5 157.5 li
225 157.5 li
225 180 li
f
247.5 157.5 mo
225 157.5 li
225 135 li
247.5 135 li
247.5 157.5 li
f
270 180 mo
247.5 180 li
247.5 157.5 li
270 157.5 li
270 180 li
f
292.5 157.5 mo
270 157.5 li
270 135 li
292.5 135 li
292.5 157.5 li
f
315 180 mo
292.5 180 li
292.5 157.5 li
315 157.5 li
315 180 li
f
337.5 157.5 mo
315 157.5 li
315 135 li
337.5 135 li
337.5 157.5 li
f
360 180 mo
337.5 180 li
337.5 157.5 li
360 157.5 li
360 180 li
f
382.5 157.5 mo
360 157.5 li
360 135 li
382.5 135 li
382.5 157.5 li
f
405 180 mo
382.5 180 li
382.5 157.5 li
405 157.5 li
405 180 li
f
427.5 157.5 mo
405 157.5 li
405 135 li
427.5 135 li
427.5 157.5 li
f
450 180 mo
427.5 180 li
427.5 157.5 li
450 157.5 li
450 180 li
f
22.5 202.5 mo
0 202.5 li
0 180 li
22.5 180 li
22.5 202.5 li
cp
f
44.9999 225 mo
22.5 225 li
22.5 202.5 li
44.9999 202.5 li
44.9999 225 li
f
67.5 202.5 mo
45 202.5 li
45 180 li
67.5 180 li
67.5 202.5 li
cp
f
90 225 mo
67.5 225 li
67.5 202.5 li
90 202.5 li
90 225 li
cp
f
112.5 202.5 mo
90 202.5 li
90 180 li
112.5 180 li
112.5 202.5 li
cp
f
135 225 mo
112.5 225 li
112.5 202.5 li
135 202.5 li
135 225 li
f
157.5 202.5 mo
135 202.5 li
135 180 li
157.5 180 li
157.5 202.5 li
cp
f
180 225 mo
157.5 225 li
157.5 202.5 li
180 202.5 li
180 225 li
f
202.5 202.5 mo
180 202.5 li
180 180 li
202.5 180 li
202.5 202.5 li
cp
f
225 225 mo
202.5 225 li
202.5 202.5 li
225 202.5 li
225 225 li
f
247.5 202.5 mo
225 202.5 li
225 180 li
247.5 180 li
247.5 202.5 li
cp
f
270 225 mo
247.5 225 li
247.5 202.5 li
270 202.5 li
270 225 li
f
292.5 202.5 mo
270 202.5 li
270 180 li
292.5 180 li
292.5 202.5 li
cp
f
315 225 mo
292.5 225 li
292.5 202.5 li
315 202.5 li
315 225 li
f
337.5 202.5 mo
315 202.5 li
315 180 li
337.5 180 li
337.5 202.5 li
cp
f
360 225 mo
337.5 225 li
337.5 202.5 li
360 202.5 li
360 225 li
f
382.5 202.5 mo
360 202.5 li
360 180 li
382.5 180 li
382.5 202.5 li
f
405 225 mo
382.5 225 li
382.5 202.5 li
405 202.5 li
405 225 li
f
427.5 202.5 mo
405 202.5 li
405 180 li
427.5 180 li
427.5 202.5 li
f
450 225 mo
427.5 225 li
427.5 202.5 li
450 202.5 li
450 225 li
cp
f
22.5 247.5 mo
0 247.5 li
0 225 li
22.5 225 li
22.5 247.5 li
f
44.9999 270 mo
22.5 270 li
22.5 247.5 li
44.9999 247.5 li
44.9999 270 li
f
67.5 247.5 mo
44.9999 247.5 li
44.9999 225 li
67.5 225 li
67.5 247.5 li
f
90 270 mo
67.5 270 li
67.5 247.5 li
90 247.5 li
90 270 li
f
112.5 247.5 mo
90 247.5 li
90 225 li
112.5 225 li
112.5 247.5 li
f
135 270 mo
112.5 270 li
112.5 247.5 li
135 247.5 li
135 270 li
f
157.5 247.5 mo
135 247.5 li
135 225 li
157.5 225 li
157.5 247.5 li
f
180 270 mo
157.5 270 li
157.5 247.5 li
180 247.5 li
180 270 li
f
202.5 247.5 mo
180 247.5 li
180 225 li
202.5 225 li
202.5 247.5 li
f
225 270 mo
202.5 270 li
202.5 247.5 li
225 247.5 li
225 270 li
f
247.5 247.5 mo
225 247.5 li
225 225 li
247.5 225 li
247.5 247.5 li
f
270 270 mo
247.5 270 li
247.5 247.5 li
270 247.5 li
270 270 li
f
292.5 247.5 mo
270 247.5 li
270 225 li
292.5 225 li
292.5 247.5 li
f
315 270 mo
292.5 270 li
292.5 247.5 li
315 247.5 li
315 270 li
f
337.5 247.5 mo
315 247.5 li
315 225 li
337.5 225 li
337.5 247.5 li
f
360 270 mo
337.5 270 li
337.5 247.5 li
360 247.5 li
360 270 li
f
382.5 247.5 mo
360 247.5 li
360 225 li
382.5 225 li
382.5 247.5 li
f
405 270 mo
382.5 270 li
382.5 247.5 li
405 247.5 li
405 270 li
f
427.5 247.5 mo
405 247.5 li
405 225 li
427.5 225 li
427.5 247.5 li
f
450 270 mo
427.5 270 li
427.5 247.5 li
450 247.5 li
450 270 li
f
22.5 292.5 mo
0 292.5 li
0 270 li
22.5 270 li
22.5 292.5 li
f
44.9999 315 mo
22.5 315 li
22.5 292.5 li
44.9999 292.5 li
44.9999 315 li
f
67.5 292.5 mo
44.9999 292.5 li
44.9999 270 li
67.5 270 li
67.5 292.5 li
f
90 315 mo
67.5 315 li
67.5 292.5 li
90 292.5 li
90 315 li
cp
f
112.5 292.5 mo
90 292.5 li
90 270 li
112.5 270 li
112.5 292.5 li
f
135 315 mo
112.5 315 li
112.5 292.5 li
135 292.5 li
135 315 li
f
157.5 292.5 mo
135 292.5 li
135 270 li
157.5 270 li
157.5 292.5 li
f
180 315 mo
157.5 315 li
157.5 292.5 li
180 292.5 li
180 315 li
f
202.5 292.5 mo
180 292.5 li
180 270 li
202.5 270 li
202.5 292.5 li
f
225 315 mo
202.5 315 li
202.5 292.5 li
225 292.5 li
225 315 li
f
247.5 292.5 mo
225 292.5 li
225 270 li
247.5 270 li
247.5 292.5 li
f
270 315 mo
247.5 315 li
247.5 292.5 li
270 292.5 li
270 315 li
f
292.5 292.5 mo
270 292.5 li
270 270 li
292.5 270 li
292.5 292.5 li
f
315 315 mo
292.5 315 li
292.5 292.5 li
315 292.5 li
315 315 li
f
337.5 292.5 mo
315 292.5 li
315 270 li
337.5 270 li
337.5 292.5 li
f
360 315 mo
337.5 315 li
337.5 292.5 li
360 292.5 li
360 315 li
f
382.5 292.5 mo
360 292.5 li
360 270 li
382.5 270 li
382.5 292.5 li
f
405 315 mo
382.5 315 li
382.5 292.5 li
405 292.5 li
405 315 li
f
427.5 292.5 mo
405 292.5 li
405 270 li
427.5 270 li
427.5 292.5 li
f
450 315 mo
427.5 315 li
427.5 292.5 li
450 292.5 li
450 315 li
cp
f
22.5 337.5 mo
0 337.5 li
0 315 li
22.5 315 li
22.5 337.5 li
cp
f
44.9999 360 mo
22.5 360 li
22.5 337.5 li
44.9999 337.5 li
44.9999 360 li
f
67.5 337.5 mo
44.9999 337.5 li
44.9999 315 li
67.5 315 li
67.5 337.5 li
f
90 360 mo
67.5 360 li
67.5 337.5 li
90 337.5 li
90 360 li
cp
f
112.5 337.5 mo
90 337.5 li
90 315 li
112.5 315 li
112.5 337.5 li
f
135 360 mo
112.5 360 li
112.5 337.5 li
135 337.5 li
135 360 li
f
157.5 337.5 mo
135 337.5 li
135 315 li
157.5 315 li
157.5 337.5 li
cp
f
180 360 mo
157.5 360 li
157.5 337.5 li
180 337.5 li
180 360 li
f
202.5 337.5 mo
180 337.5 li
180 315 li
202.5 315 li
202.5 337.5 li
f
225 360 mo
202.5 360 li
202.5 337.5 li
225 337.5 li
225 360 li
f
247.5 337.5 mo
225 337.5 li
225 315 li
247.5 315 li
247.5 337.5 li
f
270 360 mo
247.5 360 li
247.5 337.5 li
270 337.5 li
270 360 li
f
292.5 337.5 mo
270 337.5 li
270 315 li
292.5 315 li
292.5 337.5 li
f
315 360 mo
292.5 360 li
292.5 337.5 li
315 337.5 li
315 360 li
f
337.5 337.5 mo
315 337.5 li
315 315 li
337.5 315 li
337.5 337.5 li
f
360 360 mo
337.5 360 li
337.5 337.5 li
360 337.5 li
360 360 li
f
382.5 337.5 mo
360 337.5 li
360 315 li
382.5 315 li
382.5 337.5 li
f
405 360 mo
382.5 360 li
382.5 337.5 li
405 337.5 li
405 360 li
f
427.5 337.5 mo
405 337.5 li
405 315 li
427.5 315 li
427.5 337.5 li
f
450 360 mo
427.5 360 li
427.5 337.5 li
450 337.5 li
450 360 li
cp
f
22.5 382.5 mo
0 382.5 li
0 360 li
22.5 360 li
22.5 382.5 li
f
44.9999 405 mo
22.5 405 li
22.5 382.5 li
44.9999 382.5 li
44.9999 405 li
f
67.5 382.5 mo
44.9999 382.5 li
44.9999 360 li
67.5 360 li
67.5 382.5 li
f
90 405 mo
67.5 405 li
67.5 382.5 li
90 382.5 li
90 405 li
cp
f
112.5 382.5 mo
90 382.5 li
90 360 li
112.5 360 li
112.5 382.5 li
f
135 405 mo
112.5 405 li
112.5 382.5 li
135 382.5 li
135 405 li
f
157.5 382.5 mo
135 382.5 li
135 360 li
157.5 360 li
157.5 382.5 li
f
180 405 mo
157.5 405 li
157.5 382.5 li
180 382.5 li
180 405 li
f
202.5 382.5 mo
180 382.5 li
180 360 li
202.5 360 li
202.5 382.5 li
f
225 405 mo
202.5 405 li
202.5 382.5 li
225 382.5 li
225 405 li
f
247.5 382.5 mo
225 382.5 li
225 360 li
247.5 360 li
247.5 382.5 li
f
270 405 mo
247.5 405 li
247.5 382.5 li
270 382.5 li
270 405 li
f
292.5 382.5 mo
270 382.5 li
270 360 li
292.5 360 li
292.5 382.5 li
f
315 405 mo
292.5 405 li
292.5 382.5 li
315 382.5 li
315 405 li
f
337.5 382.5 mo
315 382.5 li
315 360 li
337.5 360 li
337.5 382.5 li
f
360 405 mo
337.5 405 li
337.5 382.5 li
360 382.5 li
360 405 li
f
382.5 382.5 mo
360 382.5 li
360 360 li
382.5 360 li
382.5 382.5 li
f
405 405 mo
382.5 405 li
382.5 382.5 li
405 382.5 li
405 405 li
f
427.5 382.5 mo
405 382.5 li
405 360 li
427.5 360 li
427.5 382.5 li
f
450 405 mo
427.5 405 li
427.5 382.5 li
450 382.5 li
450 405 li
cp
f
22.5 427.5 mo
0 427.5 li
0 405 li
22.5 405 li
22.5 427.5 li
f
44.9999 450 mo
22.5 450 li
22.5 427.5 li
44.9999 427.5 li
44.9999 450 li
f
67.5 427.5 mo
44.9999 427.5 li
44.9999 405 li
67.5 405 li
67.5 427.5 li
f
90 450 mo
67.5 450 li
67.5 427.5 li
90 427.5 li
90 450 li
cp
f
112.5 427.5 mo
90 427.5 li
90 405 li
112.5 405 li
112.5 427.5 li
f
135 450 mo
112.5 450 li
112.5 427.5 li
135 427.5 li
135 450 li
f
157.5 427.5 mo
135 427.5 li
135 405 li
157.5 405 li
157.5 427.5 li
f
180 450 mo
157.5 450 li
157.5 427.5 li
180 427.5 li
180 450 li
f
202.5 427.5 mo
180 427.5 li
180 405 li
202.5 405 li
202.5 427.5 li
f
225 450 mo
202.5 450 li
202.5 427.5 li
225 427.5 li
225 450 li
f
247.5 427.5 mo
225 427.5 li
225 405 li
247.5 405 li
247.5 427.5 li
f
270 450 mo
247.5 450 li
247.5 427.5 li
270 427.5 li
270 450 li
f
292.5 427.5 mo
270 427.5 li
270 405 li
292.5 405 li
292.5 427.5 li
f
315 450 mo
292.5 450 li
292.5 427.5 li
315 427.5 li
315 450 li
f
337.5 427.5 mo
315 427.5 li
315 405 li
337.5 405 li
337.5 427.5 li
f
360 450 mo
337.5 450 li
337.5 427.5 li
360 427.5 li
360 450 li
f
382.5 427.5 mo
360 427.5 li
360 405 li
382.5 405 li
382.5 427.5 li
cp
f
405 450 mo
382.5 450 li
382.5 427.5 li
405 427.5 li
405 450 li
f
427.5 427.5 mo
405 427.5 li
405 405 li
427.5 405 li
427.5 427.5 li
f
450 450 mo
427.5 450 li
427.5 427.5 li
450 427.5 li
450 450 li
cp
f
161.453 47.6914 mo
159.297 47.6914 li
158.556 47.6914 157.953 47.5296 157.5 47.2139 cv
157.5 44.9999 li
156.508 44.9999 li
156.508 44.9738 156.507 44.9474 156.507 44.9209 cv
156.507 35.0694 li
156.507 34.0026 156.849 33.2303 157.5 32.7763 cv
157.5 44.9999 li
159.384 44.9999 li
159.512 45.1015 159.69 45.1514 159.913 45.1514 cv
160.914 45.1514 li
161.137 45.1514 161.315 45.1015 161.443 44.9999 cv
164.222 44.9999 li
164.194 46.7576 163.216 47.6914 161.453 47.6914 cv
.729412 .74902 .760784 rgb
f
164.222 44.9999 mo
161.443 44.9999 li
161.601 44.8742 161.684 44.6693 161.684 44.3818 cv
161.684 42.8428 li
161.684 42.6503 161.78 42.5351 161.991 42.5351 cv
163.916 42.5351 li
164.108 42.5351 164.223 42.6503 164.223 42.8428 cv
164.223 44.9209 li
164.223 44.9474 164.223 44.9738 164.222 44.9999 cv
159.384 44.9999 mo
157.5 44.9999 li
157.5 32.7763 li
157.953 32.4606 158.556 32.2988 159.297 32.2988 cv
161.453 32.2988 li
163.242 32.2988 164.223 33.2607 164.223 35.0694 cv
164.223 37.1475 li
164.223 37.3399 164.108 37.455 163.916 37.455 cv
161.991 37.455 li
161.78 37.455 161.684 37.3399 161.684 37.1475 cv
161.684 35.6074 li
161.684 35.1075 161.414 34.8379 160.914 34.8379 cv
159.913 34.8379 li
159.394 34.8379 159.144 35.1075 159.144 35.6074 cv
159.144 44.3818 li
159.144 44.6693 159.226 44.8742 159.384 44.9999 cv
.811765 .827451 .839216 rgb
f
157.5 47.2139 mo
156.865 46.7712 156.524 46.026 156.508 44.9999 cv
157.5 44.9999 li
157.5 47.2139 li
f
175.23 47.6914 mo
173.19 47.6914 li
173.017 47.6914 172.921 47.5947 172.883 47.4219 cv
172.418 44.9999 li
174.989 44.9999 li
175.5 47.3643 li
175.538 47.5762 175.461 47.6914 175.23 47.6914 cv
168.091 47.6914 mo
166.033 47.6914 li
165.821 47.6914 165.725 47.5762 165.783 47.3643 cv
166.293 44.9999 li
168.847 44.9999 li
168.399 47.4219 li
168.361 47.5947 168.265 47.6914 168.091 47.6914 cv
.729412 .74902 .760784 rgb
f
174.989 44.9999 mo
172.418 44.9999 li
172.344 44.6133 li
168.919 44.6133 li
168.847 44.9999 li
166.293 44.9999 li
168.977 32.5674 li
169.015 32.375 169.13 32.2988 169.304 32.2988 cv
171.978 32.2988 li
172.151 32.2988 172.267 32.375 172.305 32.5674 cv
174.989 44.9999 li
170.631 35.666 mo
169.4 42.3809 li
171.863 42.3809 li
170.631 35.666 li
.811765 .827451 .839216 rgb
f
179.542 47.6914 mo
177.54 47.6914 li
177.348 47.6914 177.232 47.5762 177.232 47.3838 cv
177.232 44.9999 li
179.85 44.9999 li
179.85 47.3838 li
179.85 47.5762 179.734 47.6914 179.542 47.6914 cv
184.446 44.9999 mo
181.827 44.9999 li
181.177 42.5351 li
180 42.5351 li
180 39.9951 li
181.754 39.9951 li
182.254 39.9951 182.524 39.7255 182.524 39.2256 cv
182.524 35.6074 li
182.524 35.1075 182.254 34.8379 181.754 34.8379 cv
180 34.8379 li
180 32.2988 li
182.37 32.2988 li
184.179 32.2988 185.141 33.2607 185.141 35.0694 cv
185.141 39.7636 li
185.141 41.0527 184.66 41.8994 183.736 42.3037 cv
184.446 44.9999 li
.729412 .74902 .760784 rgb
f
179.85 44.9999 mo
177.232 44.9999 li
177.232 32.6064 li
177.232 32.414 177.348 32.2988 177.54 32.2988 cv
180 32.2988 li
180 34.8379 li
179.85 34.8379 li
179.85 39.9951 li
180 39.9951 li
180 42.5351 li
179.85 42.5351 li
179.85 44.9999 li
.811765 .827451 .839216 rgb
f
184.794 47.6914 mo
182.793 47.6914 li
182.601 47.6914 182.505 47.5947 182.466 47.4219 cv
181.827 44.9999 li
184.446 44.9999 li
185.064 47.3447 li
185.122 47.5762 185.006 47.6914 184.794 47.6914 cv
f
200.91 44.9999 mo
198.338 44.9999 li
198.264 44.6133 li
194.839 44.6133 li
194.768 44.9999 li
192.213 44.9999 li
194.897 32.5674 li
194.936 32.375 195.051 32.2988 195.224 32.2988 cv
197.898 32.2988 li
198.072 32.2988 198.187 32.375 198.226 32.5674 cv
200.91 44.9999 li
196.552 35.666 mo
195.32 42.3809 li
197.783 42.3809 li
196.552 35.666 li
.729412 .74902 .760784 rgb
f
201.15 47.6914 mo
199.111 47.6914 li
198.938 47.6914 198.841 47.5947 198.803 47.4219 cv
198.338 44.9999 li
200.91 44.9999 li
201.42 47.3643 li
201.458 47.5762 201.381 47.6914 201.15 47.6914 cv
194.012 47.6914 mo
191.953 47.6914 li
191.741 47.6914 191.645 47.5762 191.703 47.3643 cv
192.213 44.9999 li
194.768 44.9999 li
194.32 47.4219 li
194.281 47.5947 194.185 47.6914 194.012 47.6914 cv
.811765 .827451 .839216 rgb
f
210.869 47.6914 mo
208.964 47.6914 li
208.79 47.6914 208.675 47.6143 208.618 47.4414 cv
207.743 44.9999 li
211.177 44.9999 li
211.177 47.3838 li
211.177 47.5762 211.061 47.6914 210.869 47.6914 cv
205.27 47.6914 mo
203.269 47.6914 li
203.076 47.6914 202.96 47.5762 202.96 47.3838 cv
202.96 44.9999 li
205.578 44.9999 li
205.578 47.3838 li
205.578 47.5762 205.481 47.6914 205.27 47.6914 cv
.729412 .74902 .760784 rgb
f
211.177 44.9999 mo
207.743 44.9999 li
205.674 39.2256 li
205.578 39.2256 li
205.578 44.9999 li
202.96 44.9999 li
202.96 32.6064 li
202.96 32.414 203.076 32.2988 203.269 32.2988 cv
205.173 32.2988 li
205.347 32.2988 205.462 32.375 205.519 32.5488 cv
208.444 40.7256 li
208.56 40.7256 li
208.56 32.6064 li
208.56 32.414 208.656 32.2988 208.868 32.2988 cv
210.869 32.2988 li
211.061 32.2988 211.177 32.414 211.177 32.6064 cv
211.177 44.9999 li
.811765 .827451 .839216 rgb
f
218.027 47.6914 mo
213.41 47.6914 li
213.198 47.6914 213.102 47.5947 213.102 47.3838 cv
213.102 44.9999 li
215.719 44.9999 li
215.719 45.1514 li
217.489 45.1514 li
217.712 45.1514 217.89 45.1015 218.018 44.9999 cv
220.798 44.9999 li
220.77 46.7576 219.809 47.6914 218.027 47.6914 cv
.729412 .74902 .760784 rgb
f
220.798 44.9999 mo
218.018 44.9999 li
218.176 44.8742 218.258 44.6693 218.258 44.3818 cv
218.258 35.6269 li
218.258 35.1075 217.989 34.8379 217.489 34.8379 cv
215.719 34.8379 li
215.719 44.9999 li
213.102 44.9999 li
213.102 32.6064 li
213.102 32.414 213.198 32.2988 213.41 32.2988 cv
218.027 32.2988 li
219.836 32.2988 220.798 33.2793 220.798 35.0879 cv
220.798 44.9209 li
220.798 44.9474 220.798 44.9738 220.798 44.9999 cv
.811765 .827451 .839216 rgb
f
232.306 44.9999 mo
229.689 44.9999 li
229.689 34.8379 li
227.457 34.8379 li
227.265 34.8379 227.149 34.7226 227.149 34.5302 cv
227.149 32.6064 li
227.149 32.414 227.265 32.2988 227.457 32.2988 cv
234.538 32.2988 li
234.75 32.2988 234.846 32.414 234.846 32.6064 cv
234.846 34.5302 li
234.846 34.7226 234.75 34.8379 234.538 34.8379 cv
232.306 34.8379 li
232.306 44.9999 li
.729412 .74902 .760784 rgb
f
231.998 47.6914 mo
229.997 47.6914 li
229.805 47.6914 229.689 47.5947 229.689 47.3838 cv
229.689 44.9999 li
232.306 44.9999 li
232.306 47.3838 li
232.306 47.5947 232.21 47.6914 231.998 47.6914 cv
.811765 .827451 .839216 rgb
f
243.599 44.9999 mo
240.98 44.9999 li
240.33 42.5351 li
239.003 42.5351 li
239.003 44.9999 li
236.386 44.9999 li
236.386 32.6064 li
236.386 32.414 236.501 32.2988 236.693 32.2988 cv
241.523 32.2988 li
243.332 32.2988 244.294 33.2607 244.294 35.0694 cv
244.294 39.7636 li
244.294 41.0527 243.813 41.8994 242.89 42.3037 cv
243.599 44.9999 li
239.003 34.8379 mo
239.003 39.9951 li
240.907 39.9951 li
241.407 39.9951 241.677 39.7255 241.677 39.2256 cv
241.677 35.6074 li
241.677 35.1075 241.407 34.8379 240.907 34.8379 cv
239.003 34.8379 li
.729412 .74902 .760784 rgb
f
243.947 47.6914 mo
241.946 47.6914 li
241.754 47.6914 241.658 47.5947 241.619 47.4219 cv
240.98 44.9999 li
243.599 44.9999 li
244.217 47.3447 li
244.274 47.5762 244.159 47.6914 243.947 47.6914 cv
238.694 47.6914 mo
236.693 47.6914 li
236.501 47.6914 236.386 47.5762 236.386 47.3838 cv
236.386 44.9999 li
239.003 44.9999 li
239.003 47.3838 li
239.003 47.5762 238.887 47.6914 238.694 47.6914 cv
.811765 .827451 .839216 rgb
f
251.145 47.6914 mo
248.989 47.6914 li
248.402 47.6914 247.905 47.5901 247.5 47.3915 cv
247.5 44.9999 li
246.219 44.9999 li
246.219 44.9738 246.219 44.9474 246.219 44.9209 cv
246.219 32.6836 li
246.219 32.4717 246.392 32.2988 246.604 32.2988 cv
247.5 32.2988 li
247.5 44.9999 li
249.076 44.9999 li
249.204 45.1015 249.382 45.1514 249.605 45.1514 cv
250.605 45.1514 li
250.829 45.1514 251.007 45.1015 251.135 44.9999 cv
253.914 44.9999 li
253.887 46.7576 252.927 47.6914 251.145 47.6914 cv
.729412 .74902 .760784 rgb
f
253.914 44.9999 mo
251.135 44.9999 li
251.293 44.8742 251.375 44.6693 251.375 44.3818 cv
251.375 32.6836 li
251.375 32.4717 251.549 32.2988 251.76 32.2988 cv
253.53 32.2988 li
253.742 32.2988 253.915 32.4717 253.915 32.6836 cv
253.915 44.9209 li
253.915 44.9474 253.915 44.9738 253.914 44.9999 cv
249.076 44.9999 mo
247.5 44.9999 li
247.5 32.2988 li
248.45 32.2988 li
248.662 32.2988 248.836 32.4717 248.836 32.6836 cv
248.836 44.3818 li
248.836 44.6693 248.918 44.8742 249.076 44.9999 cv
.811765 .827451 .839216 rgb
f
247.5 47.3915 mo
246.676 46.987 246.238 46.1788 246.219 44.9999 cv
247.5 44.9999 li
247.5 47.3915 li
f
260.785 47.6914 mo
258.631 47.6914 li
256.848 47.6914 255.869 46.7576 255.84 44.9999 cv
258.717 44.9999 li
258.845 45.1015 259.023 45.1514 259.246 45.1514 cv
260.247 45.1514 li
260.47 45.1514 260.648 45.1015 260.776 44.9999 cv
263.556 44.9999 li
263.528 46.7576 262.549 47.6914 260.785 47.6914 cv
.729412 .74902 .760784 rgb
f
263.556 44.9999 mo
260.776 44.9999 li
260.934 44.8742 261.017 44.6693 261.017 44.3818 cv
261.017 42.8428 li
261.017 42.6503 261.112 42.5351 261.324 42.5351 cv
263.248 42.5351 li
263.44 42.5351 263.557 42.6503 263.557 42.8428 cv
263.557 44.9209 li
263.557 44.9474 263.556 44.9738 263.556 44.9999 cv
258.717 44.9999 mo
255.84 44.9999 li
255.84 44.9738 255.84 44.9474 255.84 44.9209 cv
255.84 35.0694 li
255.84 33.2607 256.821 32.2988 258.631 32.2988 cv
260.785 32.2988 li
262.575 32.2988 263.557 33.2607 263.557 35.0694 cv
263.557 37.1475 li
263.557 37.3399 263.44 37.455 263.248 37.455 cv
261.324 37.455 li
261.112 37.455 261.017 37.3399 261.017 37.1475 cv
261.017 35.6074 li
261.017 35.1075 260.747 34.8379 260.247 34.8379 cv
259.246 34.8379 li
258.727 34.8379 258.477 35.1075 258.477 35.6074 cv
258.477 44.3818 li
258.477 44.6693 258.559 44.8742 258.717 44.9999 cv
.811765 .827451 .839216 rgb
f
267.714 47.6914 mo
265.866 47.6914 li
265.616 47.6914 265.481 47.5566 265.481 47.3066 cv
265.481 44.9999 li
268.099 44.9999 li
268.099 47.3066 li
268.099 47.5566 267.964 47.6914 267.714 47.6914 cv
272.998 44.9999 mo
270.215 44.9999 li
270 44.4926 li
270 34.7587 li
271.062 32.587 li
271.158 32.3946 271.293 32.2988 271.504 32.2988 cv
273.524 32.2988 li
273.813 32.2988 273.929 32.4912 273.794 32.7598 cv
270.522 39.4756 li
272.998 44.9999 li
.729412 .74902 .760784 rgb
f
268.099 44.9999 mo
265.481 44.9999 li
265.481 32.6836 li
265.481 32.4326 265.616 32.2988 265.866 32.2988 cv
267.714 32.2988 li
267.964 32.2988 268.099 32.4326 268.099 32.6836 cv
268.099 38.6485 li
270 34.7587 li
270 44.4926 li
268.811 41.6885 li
268.099 43.0547 li
268.099 44.9999 li
.811765 .827451 .839216 rgb
f
273.717 47.6914 mo
271.678 47.6914 li
271.446 47.6914 271.312 47.5947 271.234 47.4024 cv
270.215 44.9999 li
272.998 44.9999 li
274.006 47.2491 li
274.141 47.499 274.024 47.6914 273.717 47.6914 cv
f
283.492 44.9999 mo
280.635 44.9999 li
280.793 44.8742 280.876 44.6693 280.876 44.3818 cv
280.876 41.8233 li
276.315 40.3223 li
275.969 40.206 275.796 39.9756 275.796 39.6103 cv
275.796 35.0694 li
275.796 33.2607 276.777 32.2988 278.566 32.2988 cv
280.722 32.2988 li
282.53 32.2988 283.492 33.2607 283.492 35.0694 cv
283.492 37.1084 li
283.492 37.3008 283.396 37.417 283.185 37.417 cv
281.184 37.417 li
280.991 37.417 280.876 37.3008 280.876 37.1084 cv
280.876 35.6074 li
280.876 35.1075 280.626 34.8379 280.106 34.8379 cv
279.183 34.8379 li
278.701 34.8379 278.413 35.1075 278.413 35.6074 cv
278.413 38.2627 li
282.992 39.7636 li
283.319 39.8985 283.492 40.1104 283.492 40.4756 cv
283.492 44.9209 li
283.492 44.9474 283.492 44.9738 283.492 44.9999 cv
278.662 44.9999 mo
275.797 44.9999 li
275.796 44.9738 275.796 44.9474 275.796 44.9209 cv
275.796 42.9004 li
275.796 42.6884 275.911 42.5928 276.104 42.5928 cv
278.105 42.5928 li
278.316 42.5928 278.413 42.6884 278.413 42.9004 cv
278.413 44.3818 li
278.413 44.6693 278.501 44.8742 278.662 44.9999 cv
.729412 .74902 .760784 rgb
f
280.722 47.6914 mo
278.566 47.6914 li
276.804 47.6914 275.825 46.7576 275.797 44.9999 cv
278.662 44.9999 li
278.791 45.1015 278.967 45.1514 279.183 45.1514 cv
280.106 45.1514 li
280.33 45.1514 280.507 45.1015 280.635 44.9999 cv
283.492 44.9999 li
283.464 46.7576 282.504 47.6914 280.722 47.6914 cv
.811765 .827451 .839216 rgb
f
174.223 27.1475 mo
174.223 27.3398 174.108 27.4551 173.916 27.4551 cv
171.991 27.4551 li
171.78 27.4551 171.684 27.3398 171.684 27.1475 cv
171.684 25.6074 li
171.684 25.1074 171.414 24.8379 170.914 24.8379 cv
169.913 24.8379 li
169.394 24.8379 169.144 25.1074 169.144 25.6074 cv
169.144 34.3818 li
169.144 34.9014 169.413 35.1514 169.913 35.1514 cv
170.914 35.1514 li
171.414 35.1514 171.684 34.9014 171.684 34.3818 cv
171.684 32.8428 li
171.684 32.6504 171.78 32.5352 171.991 32.5352 cv
173.916 32.5352 li
174.108 32.5352 174.223 32.6504 174.223 32.8428 cv
174.223 34.9209 li
174.223 36.7295 173.242 37.6914 171.453 37.6914 cv
169.297 37.6914 li
167.489 37.6914 166.507 36.7295 166.507 34.9209 cv
166.507 25.0693 li
166.507 23.2607 167.489 22.2988 169.297 22.2988 cv
171.453 22.2988 li
173.242 22.2988 174.223 23.2607 174.223 25.0693 cv
174.223 27.1475 li
cp
.2 .243137 .258824 rgb
f
180.631 25.666 mo
179.4 32.3809 li
181.863 32.3809 li
180.631 25.666 li
cp
183.19 37.6914 mo
183.017 37.6914 182.921 37.5947 182.883 37.4219 cv
182.344 34.6133 li
178.919 34.6133 li
178.399 37.4219 li
178.361 37.5947 178.265 37.6914 178.091 37.6914 cv
176.033 37.6914 li
175.821 37.6914 175.725 37.5762 175.783 37.3643 cv
178.977 22.5674 li
179.015 22.375 179.13 22.2988 179.304 22.2988 cv
181.978 22.2988 li
182.151 22.2988 182.267 22.375 182.305 22.5674 cv
185.5 37.3643 li
185.538 37.5762 185.461 37.6914 185.23 37.6914 cv
183.19 37.6914 li
cp
f
191.754 29.9951 mo
192.254 29.9951 192.524 29.7256 192.524 29.2256 cv
192.524 25.6074 li
192.524 25.1074 192.254 24.8379 191.754 24.8379 cv
189.85 24.8379 li
189.85 29.9951 li
191.754 29.9951 li
cp
195.141 29.7637 mo
195.141 31.0527 194.66 31.8994 193.736 32.3037 cv
195.064 37.3447 li
195.122 37.5762 195.006 37.6914 194.794 37.6914 cv
192.793 37.6914 li
192.601 37.6914 192.505 37.5947 192.466 37.4219 cv
191.177 32.5352 li
189.85 32.5352 li
189.85 37.3838 li
189.85 37.5762 189.734 37.6914 189.542 37.6914 cv
187.541 37.6914 li
187.348 37.6914 187.232 37.5762 187.232 37.3838 cv
187.232 22.6064 li
187.232 22.4141 187.348 22.2988 187.541 22.2988 cv
192.37 22.2988 li
194.179 22.2988 195.141 23.2607 195.141 25.0693 cv
195.141 29.7637 li
cp
f
206.552 25.666 mo
205.32 32.3809 li
207.783 32.3809 li
206.552 25.666 li
cp
209.111 37.6914 mo
208.938 37.6914 208.841 37.5947 208.803 37.4219 cv
208.264 34.6133 li
204.839 34.6133 li
204.32 37.4219 li
204.281 37.5947 204.185 37.6914 204.012 37.6914 cv
201.953 37.6914 li
201.741 37.6914 201.645 37.5762 201.703 37.3643 cv
204.897 22.5674 li
204.936 22.375 205.051 22.2988 205.224 22.2988 cv
207.898 22.2988 li
208.072 22.2988 208.188 22.375 208.226 22.5674 cv
211.42 37.3643 li
211.458 37.5762 211.381 37.6914 211.15 37.6914 cv
209.111 37.6914 li
cp
f
220.869 22.2988 mo
221.061 22.2988 221.177 22.4141 221.177 22.6064 cv
221.177 37.3838 li
221.177 37.5762 221.061 37.6914 220.869 37.6914 cv
218.964 37.6914 li
218.791 37.6914 218.675 37.6143 218.618 37.4414 cv
215.674 29.2256 li
215.578 29.2256 li
215.578 37.3838 li
215.578 37.5762 215.481 37.6914 215.27 37.6914 cv
213.269 37.6914 li
213.076 37.6914 212.96 37.5762 212.96 37.3838 cv
212.96 22.6064 li
212.96 22.4141 213.076 22.2988 213.269 22.2988 cv
215.173 22.2988 li
215.347 22.2988 215.462 22.375 215.52 22.5488 cv
218.444 30.7256 li
218.56 30.7256 li
218.56 22.6064 li
218.56 22.4141 218.656 22.2988 218.868 22.2988 cv
220.869 22.2988 li
cp
f
227.489 35.1514 mo
227.989 35.1514 228.258 34.9014 228.258 34.3818 cv
228.258 25.627 li
228.258 25.1074 227.989 24.8379 227.489 24.8379 cv
225.719 24.8379 li
225.719 35.1514 li
227.489 35.1514 li
cp
223.102 22.6064 mo
223.102 22.4141 223.198 22.2988 223.41 22.2988 cv
228.027 22.2988 li
229.836 22.2988 230.798 23.2793 230.798 25.0879 cv
230.798 34.9209 li
230.798 36.7295 229.836 37.6914 228.027 37.6914 cv
223.41 37.6914 li
223.198 37.6914 223.102 37.5947 223.102 37.3838 cv
223.102 22.6064 li
cp
f
244.538 22.2988 mo
244.75 22.2988 244.846 22.4141 244.846 22.6064 cv
244.846 24.5303 li
244.846 24.7227 244.75 24.8379 244.538 24.8379 cv
242.306 24.8379 li
242.306 37.3838 li
242.306 37.5947 242.21 37.6914 241.998 37.6914 cv
239.997 37.6914 li
239.805 37.6914 239.689 37.5947 239.689 37.3838 cv
239.689 24.8379 li
237.457 24.8379 li
237.265 24.8379 237.149 24.7227 237.149 24.5303 cv
237.149 22.6064 li
237.149 22.4141 237.265 22.2988 237.457 22.2988 cv
244.538 22.2988 li
cp
f
250.907 29.9951 mo
251.407 29.9951 251.677 29.7256 251.677 29.2256 cv
251.677 25.6074 li
251.677 25.1074 251.407 24.8379 250.907 24.8379 cv
249.003 24.8379 li
249.003 29.9951 li
250.907 29.9951 li
cp
254.294 29.7637 mo
254.294 31.0527 253.813 31.8994 252.89 32.3037 cv
254.217 37.3447 li
254.274 37.5762 254.159 37.6914 253.947 37.6914 cv
251.946 37.6914 li
251.754 37.6914 251.658 37.5947 251.619 37.4219 cv
250.33 32.5352 li
249.003 32.5352 li
249.003 37.3838 li
249.003 37.5762 248.887 37.6914 248.694 37.6914 cv
246.693 37.6914 li
246.501 37.6914 246.386 37.5762 246.386 37.3838 cv
246.386 22.6064 li
246.386 22.4141 246.501 22.2988 246.693 22.2988 cv
251.523 22.2988 li
253.332 22.2988 254.294 23.2607 254.294 25.0693 cv
254.294 29.7637 li
cp
f
263.53 22.2988 mo
263.742 22.2988 263.915 22.4717 263.915 22.6836 cv
263.915 34.9209 li
263.915 36.7295 262.953 37.6914 261.145 37.6914 cv
258.989 37.6914 li
257.181 37.6914 256.219 36.7295 256.219 34.9209 cv
256.219 22.6836 li
256.219 22.4717 256.392 22.2988 256.604 22.2988 cv
258.45 22.2988 li
258.662 22.2988 258.836 22.4717 258.836 22.6836 cv
258.836 34.3818 li
258.836 34.9014 259.104 35.1514 259.605 35.1514 cv
260.605 35.1514 li
261.106 35.1514 261.375 34.9014 261.375 34.3818 cv
261.375 22.6836 li
261.375 22.4717 261.549 22.2988 261.76 22.2988 cv
263.53 22.2988 li
cp
f
273.557 27.1475 mo
273.557 27.3398 273.44 27.4551 273.248 27.4551 cv
271.324 27.4551 li
271.112 27.4551 271.017 27.3398 271.017 27.1475 cv
271.017 25.6074 li
271.017 25.1074 270.747 24.8379 270.247 24.8379 cv
269.246 24.8379 li
268.727 24.8379 268.477 25.1074 268.477 25.6074 cv
268.477 34.3818 li
268.477 34.9014 268.746 35.1514 269.246 35.1514 cv
270.247 35.1514 li
270.747 35.1514 271.017 34.9014 271.017 34.3818 cv
271.017 32.8428 li
271.017 32.6504 271.112 32.5352 271.324 32.5352 cv
273.248 32.5352 li
273.44 32.5352 273.557 32.6504 273.557 32.8428 cv
273.557 34.9209 li
273.557 36.7295 272.575 37.6914 270.785 37.6914 cv
268.631 37.6914 li
266.821 37.6914 265.84 36.7295 265.84 34.9209 cv
265.84 25.0693 li
265.84 23.2607 266.821 22.2988 268.631 22.2988 cv
270.785 22.2988 li
272.575 22.2988 273.557 23.2607 273.557 25.0693 cv
273.557 27.1475 li
cp
f
281.678 37.6914 mo
281.446 37.6914 281.312 37.5947 281.234 37.4023 cv
278.811 31.6885 li
278.099 33.0547 li
278.099 37.3066 li
278.099 37.5566 277.964 37.6914 277.714 37.6914 cv
275.866 37.6914 li
275.616 37.6914 275.481 37.5566 275.481 37.3066 cv
275.481 22.6836 li
275.481 22.4326 275.616 22.2988 275.866 22.2988 cv
277.714 22.2988 li
277.964 22.2988 278.099 22.4326 278.099 22.6836 cv
278.099 28.6484 li
281.062 22.5869 li
281.158 22.3945 281.293 22.2988 281.504 22.2988 cv
283.524 22.2988 li
283.813 22.2988 283.929 22.4912 283.794 22.7598 cv
280.522 29.4756 li
284.006 37.249 li
284.141 37.499 284.024 37.6914 283.717 37.6914 cv
281.678 37.6914 li
cp
f
290.722 22.2988 mo
292.53 22.2988 293.492 23.2607 293.492 25.0693 cv
293.492 27.1084 li
293.492 27.3008 293.396 27.417 293.185 27.417 cv
291.184 27.417 li
290.991 27.417 290.876 27.3008 290.876 27.1084 cv
290.876 25.6074 li
290.876 25.1074 290.626 24.8379 290.106 24.8379 cv
289.183 24.8379 li
288.701 24.8379 288.413 25.1074 288.413 25.6074 cv
288.413 28.2627 li
292.992 29.7637 li
293.319 29.8984 293.492 30.1104 293.492 30.4756 cv
293.492 34.9209 li
293.492 36.7295 292.53 37.6914 290.722 37.6914 cv
288.566 37.6914 li
286.777 37.6914 285.796 36.7295 285.796 34.9209 cv
285.796 32.9004 li
285.796 32.6885 285.911 32.5928 286.104 32.5928 cv
288.105 32.5928 li
288.316 32.5928 288.413 32.6885 288.413 32.9004 cv
288.413 34.3818 li
288.413 34.9014 288.701 35.1514 289.183 35.1514 cv
290.106 35.1514 li
290.606 35.1514 290.876 34.9014 290.876 34.3818 cv
290.876 31.8232 li
286.315 30.3223 li
285.969 30.2061 285.796 29.9756 285.796 29.6104 cv
285.796 25.0693 li
285.796 23.2607 286.777 22.2988 288.566 22.2988 cv
290.722 22.2988 li
cp
f
405.761 434.832 mo
405.507 434.832 405.254 434.831 405 434.829 cv
405 427.5 li
385.709 427.5 li
385.626 426.946 385.582 426.361 385.582 425.748 cv
385.136 420.559 384.914 413.421 384.839 405 cv
405 405 li
405 382.5 li
384.907 382.5 li
384.953 378.393 385.014 374.163 385.084 369.851 cv
382.5 370.122 li
382.5 367.49 li
382.79 367.344 383.111 367.248 383.451 367.212 cv
385.131 367.036 li
385.17 364.709 385.212 362.361 385.256 360 cv
405 360 li
405 337.5 li
388.382 337.5 li
389.687 336.338 391.372 335.459 393.273 335.153 cv
397.213 334.52 401.121 334.184 405 334.139 cv
405 337.5 li
423.179 337.5 li
424.893 339.045 425.939 341.084 425.939 342.937 cv
426.063 348.638 426.188 354.357 426.304 360 cv
405 360 li
405 382.5 li
426.694 382.5 li
426.796 390.602 426.836 398.219 426.769 405 cv
405 405 li
405 427.5 li
425.813 427.5 li
425.239 431.315 422.779 433.699 419.642 434.051 cv
415.015 434.571 410.388 434.832 405.761 434.832 cv
.666667 .694118 .709804 rgb
f
405 360 mo
385.256 360 li
385.359 354.366 385.472 348.657 385.582 342.964 cv
385.582 341.096 386.645 339.047 388.382 337.5 cv
405 337.5 li
405 360 li
.741176 .764706 .780392 rgb
f
430.52 370.282 mo
427.5 369.966 li
427.5 367.155 li
428.041 367.212 li
429.451 367.36 430.52 368.548 430.52 369.966 cv
430.52 370.282 li
.666667 .694118 .709804 rgb
f
423.179 337.5 mo
405 337.5 li
405 334.139 li
405.3 334.136 405.6 334.134 405.9 334.134 cv
410.065 334.134 414.196 334.47 418.292 335.133 cv
420.195 335.441 421.879 336.329 423.179 337.5 cv
.741176 .764706 .780392 rgb
f
380.972 370.282 mo
380.972 369.966 li
380.972 368.89 381.588 367.947 382.5 367.49 cv
382.5 370.122 li
380.972 370.282 li
f
405 405 mo
384.839 405 li
384.779 398.218 384.815 390.603 384.907 382.5 cv
405 382.5 li
405 405 li
f
426.694 382.5 mo
405 382.5 li
405 360 li
426.304 360 li
426.352 362.364 426.399 364.715 426.443 367.045 cv
427.5 367.155 li
427.5 369.966 li
426.496 369.86 li
426.574 374.169 426.642 378.396 426.694 382.5 cv
f
405 434.829 mo
400.627 434.802 396.253 434.543 391.88 434.051 cv
388.742 433.699 386.283 431.315 385.709 427.5 cv
405 427.5 li
405 434.829 li
f
425.813 427.5 mo
405 427.5 li
405 405 li
426.769 405 li
426.686 413.423 426.438 420.559 425.939 425.748 cv
425.939 426.361 425.896 426.946 425.813 427.5 cv
f
425.717 427.976 mo
416.463 429.017 407.209 429.017 397.955 427.976 cv
394.361 427.572 391.657 424.505 391.657 419.673 cv
390.301 403.886 391.015 370.081 391.657 336.889 cv
391.657 333.616 394.918 329.79 399.349 329.078 cv
407.83 327.715 416.168 327.73 424.367 329.058 cv
428.781 329.772 432.015 333.604 432.015 336.861 cv
432.732 370.065 433.53 403.885 432.015 419.673 cv
432.015 424.505 429.311 427.572 425.717 427.976 cv
cp
.603922 .670588 .733333 rgb
f
411.836 427.541 mo
407.275 427.541 403.259 427.281 398.698 426.769 cv
395.528 426.412 393.479 423.627 393.479 419.673 cv
392.872 411.948 li
392.872 359.701 li
394.087 338.104 li
394.087 335.484 396.826 332.125 400.757 331.493 cv
404.899 330.827 407.867 330.489 411.974 330.489 cv
416.037 330.489 418.927 330.82 422.958 331.473 cv
426.863 332.104 429.584 335.46 429.584 338.076 cv
430.8 359.701 li
430.8 411.948 li
430.191 419.673 li
430.191 423.627 428.144 426.412 424.974 426.769 cv
420.413 427.281 416.396 427.541 411.836 427.541 cv
cp
.690196 .772549 .815686 rgb
f
392.844 359.701 mo
392.844 411.948 li
405.467 415.992 418.128 416.005 430.828 411.948 cv
430.828 359.701 li
418.167 354.031 405.505 354.031 392.844 359.701 cv
cp
.2 .262745 .356863 rgb
f
425.159 391.197 mo
425.102 390.936 425.034 390.677 424.984 390.412 cv
424.87 389.799 424.919 389.204 425.09 388.653 cv
424.806 386.19 424.669 383.712 424.714 381.218 cv
424.724 380.657 424.849 380.159 425.052 379.72 cv
424.57 379.074 424.275 378.277 424.302 377.401 cv
424.283 377.061 424.307 376.701 424.386 376.32 cv
425.531 370.834 428.118 365.233 430.241 359.456 cv
424.054 356.771 417.865 355.43 411.677 355.453 cv
411.677 414.983 li
417.743 414.998 423.818 414.073 429.902 412.225 cv
427.793 408.751 425.614 405.195 424.541 401.344 cv
423.529 397.716 424.081 394.435 425.159 391.197 cv
cp
.180392 .396078 .470588 rgb
f
398.925 375.038 mo
398.677 375.038 398.444 374.886 398.354 374.639 cv
392.937 359.808 li
392.821 359.493 392.983 359.145 393.299 359.029 cv
393.61 358.912 393.962 359.075 394.077 359.392 cv
399.495 374.223 li
399.61 374.537 399.448 374.886 399.133 375.001 cv
398.925 375.038 li
cp
.603922 .670588 .733333 rgb
f
393.729 412.732 mo
393.582 412.732 393.434 412.697 393.295 412.622 cv
392.853 412.383 392.688 411.829 392.929 411.387 cv
399.624 399.034 li
399.864 398.593 400.415 398.427 400.859 398.668 cv
401.302 398.907 401.466 399.461 401.226 399.903 cv
394.53 412.256 li
394.365 412.56 394.052 412.732 393.729 412.732 cv
cp
f
400.336 387.474 mo
392.844 387.474 li
392.844 385.651 li
400.336 385.651 li
400.336 387.474 li
cp
f
424.746 375.038 mo
424.537 375.001 li
424.222 374.886 424.061 374.536 424.176 374.222 cv
429.585 359.467 li
429.7 359.152 430.049 358.989 430.364 359.105 cv
430.68 359.221 430.841 359.57 430.726 359.885 cv
425.316 374.64 li
425.227 374.886 424.994 375.038 424.746 375.038 cv
cp
f
429.905 412.682 mo
429.581 412.682 429.268 412.509 429.103 412.204 cv
422.445 399.902 li
422.206 399.46 422.371 398.907 422.813 398.667 cv
423.255 398.428 423.809 398.593 424.049 399.035 cv
430.706 411.337 li
430.945 411.779 430.78 412.332 430.338 412.572 cv
430.2 412.646 430.052 412.682 429.905 412.682 cv
cp
f
430.828 387.474 mo
423.335 387.474 li
423.335 385.651 li
430.828 385.651 li
430.828 387.474 li
cp
f
411.821 406.48 mo
406.942 406.48 402.002 405.819 397.096 404.512 cv
397.096 370.437 li
402.021 368.552 406.967 367.599 411.836 367.599 cv
416.704 367.599 421.651 368.552 426.575 370.437 cv
426.575 404.51 li
421.653 405.818 416.703 406.48 411.822 406.48 cv
411.821 406.48 li
cp
.690196 .772549 .815686 rgb
f
392.844 363.6 mo
387.047 364.207 li
387.047 363.891 li
387.047 362.473 388.117 361.285 389.526 361.137 cv
392.844 360.789 li
392.844 363.6 li
cp
.2 .262745 .356863 rgb
f
430.8 363.6 mo
436.596 364.207 li
436.596 363.891 li
436.596 362.473 435.526 361.285 434.116 361.137 cv
430.8 360.789 li
430.8 363.6 li
cp
f
394.117 337.362 mo
401.422 333.854 li
402.367 333.399 402.97 332.442 402.97 331.393 cv
402.97 331.132 402.73 330.938 402.476 330.99 cv
398.673 331.772 li
396.021 332.319 394.117 334.654 394.117 337.362 cv
cp
.388235 .466667 .517647 rgb
f
396.438 332.769 mo
395.016 333.817 394.117 335.502 394.117 337.362 cv
396.438 336.248 li
396.438 332.769 li
cp
.878431 .741176 .396078 rgb
f
399.323 333.122 mo
401.45 333.122 li
401.45 332.362 li
399.323 332.362 li
399.323 333.122 li
cp
.741176 .831373 .858824 rgb
f
396.944 334.552 mo
399.07 334.552 li
399.07 333.792 li
396.944 333.792 li
396.944 334.552 li
cp
f
429.527 337.362 mo
422.223 333.854 li
421.276 333.399 420.675 332.442 420.675 331.393 cv
420.675 331.132 420.913 330.938 421.168 330.99 cv
424.971 331.772 li
427.623 332.319 429.527 334.654 429.527 337.362 cv
cp
.388235 .466667 .517647 rgb
f
427.206 332.769 mo
428.629 333.817 429.527 335.502 429.527 337.362 cv
427.206 336.248 li
427.206 332.769 li
cp
.878431 .741176 .396078 rgb
f
424.32 333.122 mo
422.194 333.122 li
422.194 332.362 li
424.32 332.362 li
424.32 333.122 li
cp
.741176 .831373 .858824 rgb
f
426.7 334.552 mo
424.573 334.552 li
424.573 333.792 li
426.7 333.792 li
426.7 334.552 li
cp
f
403.091 333.122 mo
401.547 356.879 li
400.336 356.77 li
403.091 333.122 li
cp
.603922 .670588 .733333 rgb
f
420.581 333.122 mo
423.335 356.77 li
422.125 356.879 li
420.581 333.122 li
cp
f
419.483 333.093 mo
414.299 332.46 409.154 332.461 404.192 333.092 cv
404.038 331.887 li
409.101 331.242 414.347 331.241 419.63 331.886 cv
419.483 333.093 li
cp
.388235 .466667 .517647 rgb
f
419.776 428.148 mo
419.472 428.148 419.208 427.919 419.174 427.608 cv
419.137 427.275 419.377 426.975 419.71 426.938 cv
426.508 426.179 li
426.837 426.136 427.143 426.382 427.179 426.715 cv
427.216 427.048 426.976 427.349 426.643 427.386 cv
419.845 428.145 li
419.776 428.148 li
cp
.839216 0 .0352941 rgb
f
403.825 428.148 mo
403.757 428.145 li
396.958 427.386 li
396.625 427.349 396.385 427.048 396.422 426.715 cv
396.459 426.381 396.767 426.135 397.093 426.179 cv
403.892 426.938 li
404.225 426.975 404.465 427.275 404.428 427.608 cv
404.394 427.919 404.13 428.148 403.825 428.148 cv
cp
f
270 307.732 mo
270 292.5 li
247.5 292.5 li
247.5 307.236 li
244.644 306.878 242.367 304.827 241.585 301.545 cv
239.579 295.876 li
239.579 292.5 li
247.5 292.5 li
247.5 270 li
240.52 270 li
240.527 263.028 240.606 255.431 240.724 247.5 cv
247.5 247.5 li
247.5 225 li
239.579 225 li
239.579 220.239 li
241.416 215.048 li
241.958 212.458 244.306 209.781 247.5 208.714 cv
247.5 225 li
270 225 li
270 207.786 li
271.338 207.932 272.671 208.113 274.001 208.328 cv
277.95 208.967 280.946 212.102 281.535 215.087 cv
283.358 220.239 li
283.358 225 li
270 225 li
270 247.5 li
282.282 247.5 li
282.413 255.431 282.502 263.029 282.51 270 cv
270 270 li
270 292.5 li
283.358 292.5 li
283.358 295.876 li
281.36 301.522 li
280.576 304.853 278.255 306.92 275.351 307.246 cv
273.567 307.447 271.784 307.608 270 307.732 cv
247.5 247.5 mo
247.5 270 li
270 270 li
270 247.5 li
247.5 247.5 li
.666667 .694118 .709804 rgb
f
270 225 mo
247.5 225 li
247.5 208.714 li
247.976 208.554 248.472 208.431 248.982 208.349 cv
253.226 207.666 257.435 207.329 261.607 207.329 cv
264.421 207.329 267.218 207.482 270 207.786 cv
270 225 li
.741176 .764706 .780392 rgb
f
247.5 247.5 mo
240.724 247.5 li
240.736 246.675 240.749 245.846 240.762 245.014 cv
236.106 245.502 li
236.106 245.186 li
236.106 243.769 237.176 242.58 238.585 242.433 cv
240.127 242.271 li
240.184 242.265 240.241 242.262 240.297 242.262 cv
240.473 242.262 240.644 242.291 240.805 242.345 cv
240.827 240.963 240.851 239.576 240.875 238.18 cv
239.579 234.516 li
239.579 225 li
247.5 225 li
247.5 247.5 li
f
270 270 mo
247.5 270 li
247.5 247.5 li
270 247.5 li
270 270 li
f
282.282 247.5 mo
270 247.5 li
270 225 li
283.358 225 li
283.358 234.516 li
282.11 238.043 li
282.139 239.49 282.166 240.928 282.191 242.359 cv
282.364 242.298 282.548 242.262 282.74 242.262 cv
282.794 242.262 282.848 242.265 282.903 242.271 cv
284.444 242.433 li
285.854 242.58 286.924 243.769 286.924 245.186 cv
286.924 245.502 li
282.239 245.011 li
282.254 245.844 282.268 246.674 282.282 247.5 cv
f
247.5 292.5 mo
239.579 292.5 li
239.579 281.6 li
240.555 278.84 li
240.527 276.032 240.516 273.077 240.52 270 cv
247.5 270 li
247.5 292.5 li
f
261.47 308.026 mo
256.843 308.026 252.216 307.766 247.589 307.246 cv
247.559 307.243 247.53 307.239 247.5 307.236 cv
247.5 292.5 li
270 292.5 li
270 307.732 li
267.157 307.928 264.313 308.026 261.47 308.026 cv
f
283.358 292.5 mo
270 292.5 li
270 270 li
282.51 270 li
282.514 273.166 282.501 276.203 282.468 279.083 cv
283.358 281.6 li
283.358 292.5 li
f
281.426 301.171 mo
272.172 302.211 262.918 302.211 253.664 301.171 cv
250.07 300.767 247.366 297.699 247.366 292.868 cv
246.01 277.08 246.723 243.276 247.366 210.084 cv
247.366 206.811 250.627 202.985 255.058 202.273 cv
263.539 200.91 271.876 200.926 280.076 202.253 cv
284.49 202.967 287.724 206.8 287.724 210.056 cv
288.441 243.26 289.239 277.079 287.724 292.868 cv
287.724 297.699 285.02 300.767 281.426 301.171 cv
cp
.858824 0 .270588 rgb
f
267.545 298.914 mo
262.984 298.914 258.968 298.653 254.407 298.141 cv
251.237 297.784 249.188 294.999 249.188 291.046 cv
248.581 285.144 li
248.581 235.934 li
248.339 229.331 248.578 219.484 249.188 212.514 cv
249.188 209.895 251.928 206.535 255.857 205.903 cv
260.001 205.237 263.576 204.899 267.682 204.899 cv
271.746 204.899 275.243 205.23 279.274 205.882 cv
283.18 206.515 285.9 209.87 285.9 212.486 cv
286.637 218.654 286.741 228.611 286.508 235.934 cv
286.537 285.144 li
285.9 291.046 li
285.9 294.999 283.853 297.784 280.683 298.141 cv
276.122 298.653 272.105 298.914 267.545 298.914 cv
cp
1 .360784 .396078 rgb
f
248.553 235.934 mo
248.553 285.144 li
261.176 289.188 273.837 289.199 286.537 285.144 cv
286.537 235.934 li
278.309 227.705 257.058 227.428 248.553 235.934 cv
cp
.2 .262745 .356863 rgb
f
286.481 280.03 mo
286.114 279.937 285.776 279.814 285.457 279.676 cv
284.407 279.676 li
284.407 279.089 li
279.89 275.906 281.451 267.188 281.076 262.563 cv
280.69 257.796 280.021 252.556 281.47 247.893 cv
282.347 245.071 283.23 242.025 284.407 239.177 cv
284.407 238.161 li
284.841 238.161 li
285.088 237.61 285.347 237.069 285.622 236.541 cv
285.622 235.102 li
281.501 231.632 274.903 229.797 268.207 229.671 cv
268.207 288.167 li
274.308 288.098 280.418 287.098 286.537 285.144 cv
286.537 280.039 li
286.481 280.03 li
cp
.180392 .396078 .470588 rgb
f
254.634 251.271 mo
254.386 251.271 254.152 251.117 254.063 250.871 cv
248.516 235.635 li
248.401 235.319 248.563 234.971 248.879 234.855 cv
249.19 234.742 249.543 234.903 249.658 235.219 cv
255.205 250.455 li
255.319 250.771 255.157 251.119 254.842 251.234 cv
254.634 251.271 li
cp
.858824 0 .270588 rgb
f
256.045 259.453 mo
248.553 259.453 li
248.553 257.631 li
256.045 257.631 li
256.045 259.453 li
cp
f
280.455 251.271 mo
280.247 251.233 li
279.932 251.119 279.77 250.771 279.885 250.455 cv
285.437 235.223 li
285.552 234.907 285.904 234.746 286.215 234.86 cv
286.53 234.975 286.692 235.323 286.577 235.639 cv
281.025 250.871 li
280.936 251.118 280.703 251.271 280.455 251.271 cv
cp
f
286.537 285.144 mo
278.936 272.297 li
281.445 269.448 li
286.533 277.6 li
286.537 285.144 li
cp
f
248.396 285.144 mo
255.998 272.297 li
253.488 269.448 li
248.4 277.6 li
248.396 285.144 li
cp
f
286.537 259.453 mo
279.044 259.453 li
279.044 257.631 li
286.537 257.631 li
286.537 259.453 li
cp
f
267.53 279.676 mo
262.651 279.676 257.711 279.015 252.805 277.707 cv
252.805 246.669 li
257.729 244.785 262.676 243.831 267.545 243.831 cv
272.413 243.831 277.36 244.785 282.284 246.669 cv
282.284 277.705 li
277.362 279.014 272.412 279.676 267.531 279.676 cv
267.53 279.676 li
cp
1 .360784 .396078 rgb
f
247.978 238.819 mo
242.181 239.427 li
242.181 239.11 li
242.181 237.693 243.251 236.505 244.66 236.357 cv
246.202 236.195 li
247.151 236.097 247.978 236.841 247.978 237.795 cv
247.978 238.819 li
cp
f
287.202 238.819 mo
292.999 239.427 li
292.999 239.11 li
292.999 237.693 291.929 236.505 290.52 236.357 cv
288.979 236.195 li
288.029 236.097 287.202 236.841 287.202 237.795 cv
287.202 238.819 li
cp
f
249.826 209.95 mo
257.13 206.441 li
258.076 205.986 258.679 205.03 258.679 203.98 cv
258.679 203.72 258.439 203.525 258.185 203.578 cv
254.382 204.36 li
251.729 204.907 249.826 207.242 249.826 209.95 cv
cp
.2 .262745 .356863 rgb
f
252.146 205.356 mo
250.725 206.405 249.826 208.089 249.826 209.95 cv
252.146 208.835 li
252.146 205.356 li
cp
1 .513726 .152941 rgb
f
285.235 209.95 mo
277.932 206.441 li
276.985 205.986 276.384 205.03 276.384 203.98 cv
276.384 203.72 276.622 203.525 276.877 203.578 cv
280.68 204.36 li
283.332 204.907 285.235 207.242 285.235 209.95 cv
cp
.2 .262745 .356863 rgb
f
282.915 205.356 mo
284.337 206.405 285.235 208.089 285.235 209.95 cv
282.915 208.835 li
282.915 205.356 li
cp
1 .513726 .152941 rgb
f
247.804 234.516 mo
245.654 228.44 li
245.654 214.164 li
247.804 208.089 li
247.804 234.516 li
cp
.858824 0 .270588 rgb
f
287.283 234.516 mo
289.434 228.44 li
289.434 214.164 li
287.283 208.089 li
287.283 234.516 li
cp
f
247.804 295.876 mo
245.654 289.801 li
245.654 275.524 li
247.804 269.448 li
247.804 295.876 li
cp
f
287.283 295.876 mo
289.434 289.801 li
289.434 275.524 li
287.283 269.448 li
287.283 295.876 li
cp
f
267.835 301.123 mo
260.838 301.123 253.863 300.66 251.909 299.737 cv
251.454 299.522 251.26 298.979 251.475 298.524 cv
251.69 298.069 252.233 297.876 252.688 298.09 cv
256.122 299.712 279.449 299.705 283.128 298.08 cv
283.589 297.877 284.126 298.086 284.329 298.546 cv
284.533 299.006 284.324 299.544 283.864 299.747 cv
281.786 300.665 274.799 301.123 267.835 301.123 cv
cp
.2 .164706 .211765 rgb
f
256.461 298.831 mo
254.677 298.641 253.332 298.394 252.688 298.09 cv
252.233 297.876 251.69 298.069 251.475 298.524 cv
251.26 298.979 251.454 299.522 251.909 299.737 cv
252.704 300.113 254.34 300.411 256.461 300.634 cv
256.461 298.831 li
cp
.623529 .0627451 .184314 rgb
f
284.329 298.546 mo
284.126 298.086 283.589 297.877 283.128 298.08 cv
282.326 298.435 280.591 298.711 278.332 298.911 cv
278.332 300.723 li
280.896 300.494 282.905 300.17 283.864 299.747 cv
284.324 299.544 284.533 299.006 284.329 298.546 cv
cp
f
184.475 177.158 mo
182.983 177.158 181.492 177.131 180 177.077 cv
180 157.5 li
162.584 157.5 li
162.584 150.731 li
163.561 147.972 li
163.524 144.291 163.517 139.813 163.532 135 cv
180 135 li
180 112.5 li
163.734 112.5 li
163.745 111.739 163.756 110.988 163.768 110.248 cv
159.111 110.736 li
159.111 110.419 li
159.111 109.002 160.181 107.813 161.591 107.666 cv
163.132 107.504 li
163.19 107.498 163.246 107.495 163.303 107.495 cv
163.479 107.495 163.65 107.524 163.81 107.578 cv
163.881 107.311 li
162.584 103.647 li
162.584 90 li
180 90 li
180 76.5975 li
181.542 76.5062 183.08 76.4607 184.612 76.4607 cv
188.778 76.4607 192.909 76.7966 197.006 77.46 cv
199.224 77.8189 201.141 78.9646 202.5 80.4288 cv
202.5 90 li
206.364 90 li
206.364 103.647 li
205.116 107.175 li
205.197 107.372 li
205.369 107.31 205.553 107.275 205.745 107.275 cv
205.799 107.275 205.853 107.277 205.908 107.283 cv
207.45 107.445 li
208.859 107.592 209.93 108.781 209.93 110.198 cv
209.93 110.514 li
205.245 110.023 li
205.259 110.836 205.273 111.662 205.286 112.5 cv
202.5 112.5 li
202.5 135 li
205.508 135 li
205.525 139.918 205.516 144.49 205.474 148.215 cv
206.364 150.731 li
206.364 157.5 li
202.5 157.5 li
202.5 174.296 li
201.409 175.475 199.973 176.196 198.356 176.378 cv
193.729 176.898 189.102 177.158 184.475 177.158 cv
180 135 mo
180 157.5 li
202.5 157.5 li
202.5 135 li
180 135 li
180 90 mo
180 112.5 li
202.5 112.5 li
202.5 90 li
180 90 li
.666667 .694118 .709804 rgb
f
180 90 mo
162.584 90 li
162.584 89.3711 li
164.421 84.1797 li
165.044 81.2032 168.051 78.1128 171.988 77.48 cv
174.673 77.0482 177.344 76.7548 180 76.5975 cv
180 90 li
.741176 .764706 .780392 rgb
f
206.364 90 mo
202.5 90 li
202.5 80.4288 li
203.561 81.5722 204.282 82.9097 204.541 84.2188 cv
206.364 89.3711 li
206.364 90 li
f
180 135 mo
163.532 135 li
163.555 127.726 163.63 119.69 163.734 112.5 cv
180 112.5 li
180 135 li
f
202.5 112.5 mo
180 112.5 li
180 90 li
202.5 90 li
202.5 112.5 li
f
205.508 135 mo
202.5 135 li
202.5 112.5 li
205.286 112.5 li
205.401 119.677 205.483 127.719 205.508 135 cv
f
180 177.077 mo
176.865 176.963 173.729 176.73 170.594 176.378 cv
167.696 176.052 165.38 173.993 164.59 170.676 cv
162.584 165.008 li
162.584 157.5 li
180 157.5 li
180 177.077 li
f
202.5 157.5 mo
180 157.5 li
180 135 li
202.5 135 li
202.5 157.5 li
f
202.5 174.296 mo
202.5 157.5 li
206.364 157.5 li
206.364 165.008 li
204.366 170.653 li
204.018 172.13 203.368 173.358 202.5 174.296 cv
f
204.477 170.303 mo
195.223 171.343 185.968 171.343 176.714 170.303 cv
173.121 169.898 170.417 166.831 170.417 162 cv
169.061 146.212 169.774 112.408 170.417 79.2153 cv
170.417 75.9429 173.678 72.1172 178.108 71.4048 cv
186.59 70.041 194.927 70.0571 203.127 71.3848 cv
207.541 72.0991 210.774 75.9316 210.774 79.1875 cv
211.493 112.392 212.291 146.211 210.774 162 cv
210.774 166.831 208.07 169.898 204.477 170.303 cv
cp
.556863 .54902 .454902 rgb
f
190.596 168.045 mo
186.035 168.045 182.018 167.785 177.458 167.272 cv
174.288 166.916 172.24 164.131 172.24 160.177 cv
171.632 154.275 li
171.632 105.065 li
171.39 98.4629 171.629 88.6157 172.24 81.6455 cv
172.24 79.0259 174.979 75.6665 178.909 75.0342 cv
183.052 74.3682 186.627 74.0308 190.733 74.0308 cv
194.797 74.0308 198.294 74.3618 202.326 75.0137 cv
206.23 75.6465 208.952 79.0015 208.952 81.6177 cv
209.688 87.7856 209.792 97.7432 209.559 105.065 cv
209.588 154.275 li
208.952 160.177 li
208.952 164.131 206.903 166.916 203.733 167.272 cv
199.173 167.785 195.156 168.045 190.596 168.045 cv
cp
.670588 .682353 .545098 rgb
f
171.603 99.5977 mo
171.603 148.199 li
184.226 152.243 196.888 152.256 209.588 148.199 cv
209.588 99.5977 li
201.359 91.3691 180.109 91.0918 171.603 99.5977 cv
cp
.2 .262745 .356863 rgb
f
209.533 143.086 mo
209.165 142.993 208.828 142.871 208.508 142.732 cv
207.458 142.732 li
207.458 142.145 li
202.941 138.963 204.502 136.32 204.127 131.695 cv
203.741 126.928 203.071 120.473 204.521 115.809 cv
205.397 112.987 208.673 98.7656 208.673 98.7656 cv
204.552 95.2959 197.954 93.4609 191.257 93.3345 cv
191.257 151.224 li
197.359 151.154 203.469 150.154 209.588 148.199 cv
209.588 143.095 li
209.533 143.086 li
cp
.180392 .396078 .470588 rgb
f
177.685 120.403 mo
177.417 120.403 177.171 120.224 177.098 119.952 cv
171.551 99.2476 li
171.464 98.9233 171.656 98.5903 171.98 98.5034 cv
172.307 98.4189 172.638 98.6089 172.725 98.9331 cv
178.272 119.638 li
178.359 119.962 178.167 120.295 177.842 120.382 cv
177.685 120.403 li
cp
.556863 .54902 .454902 rgb
f
203.507 120.403 mo
203.349 120.382 li
203.025 120.295 202.833 119.961 202.919 119.638 cv
208.471 98.9375 li
208.558 98.6138 208.893 98.4214 209.215 98.5078 cv
209.539 98.5947 209.731 98.9282 209.645 99.252 cv
204.093 119.952 li
204.021 120.224 203.775 120.403 203.507 120.403 cv
cp
f
209.588 148.199 mo
200.771 135.353 li
203.281 128.252 li
209.584 136.403 li
209.588 148.199 li
cp
f
171.448 148.199 mo
180.264 135.353 li
177.754 128.252 li
171.452 136.403 li
171.448 148.199 li
cp
f
190.581 142.732 mo
186.118 142.732 181.604 142.179 177.111 141.084 cv
176.371 140.903 175.856 140.23 175.856 139.468 cv
175.856 112.38 li
175.856 111.134 176.651 110.019 177.834 109.626 cv
182.103 108.21 186.378 107.496 190.596 107.496 cv
194.813 107.496 199.088 108.21 203.357 109.626 cv
204.54 110.019 205.335 111.134 205.335 112.38 cv
205.335 139.466 li
205.335 140.228 204.819 140.901 204.079 141.082 cv
199.572 142.178 195.048 142.732 190.582 142.732 cv
190.581 142.732 li
cp
.670588 .682353 .545098 rgb
f
170.855 103.647 mo
168.705 97.5723 li
168.705 83.2954 li
170.855 77.2202 li
170.855 103.647 li
cp
.556863 .54902 .454902 rgb
f
210.334 103.647 mo
212.484 97.5723 li
212.484 83.2954 li
210.334 77.2202 li
210.334 103.647 li
cp
f
170.855 165.008 mo
168.705 158.933 li
168.705 144.656 li
170.855 138.58 li
170.855 165.008 li
cp
f
210.334 165.008 mo
212.484 158.933 li
212.484 144.656 li
210.334 138.58 li
210.334 165.008 li
cp
f
178.03 168.782 mo
177.986 169.155 177.137 169.361 176.134 169.242 cv
175.132 169.123 174.355 168.724 174.399 168.351 cv
174.444 167.978 175.292 167.772 176.295 167.891 cv
177.297 168.01 178.074 168.409 178.03 168.782 cv
cp
.494118 .0627451 .184314 rgb
f
182.138 169.21 mo
182.11 169.585 181.271 169.827 180.264 169.751 cv
179.257 169.675 178.464 169.31 178.493 168.935 cv
178.521 168.561 179.36 168.318 180.367 168.395 cv
181.374 168.471 182.167 168.836 182.138 169.21 cv
cp
f
203.161 168.782 mo
203.206 169.155 204.054 169.361 205.057 169.242 cv
206.059 169.123 206.836 168.724 206.792 168.351 cv
206.748 167.978 205.899 167.772 204.896 167.891 cv
203.894 168.01 203.117 168.409 203.161 168.782 cv
cp
f
199.053 169.21 mo
199.081 169.585 199.92 169.827 200.927 169.751 cv
201.934 169.675 202.727 169.31 202.699 168.935 cv
202.67 168.561 201.831 168.318 200.824 168.395 cv
199.817 168.471 199.024 168.836 199.053 169.21 cv
cp
f
173.247 77.1826 mo
173.107 77.1826 172.967 77.1348 172.853 77.0376 cv
172.598 76.8203 172.567 76.4365 172.784 76.1812 cv
174.468 74.2031 177.304 73.0508 181.215 72.7563 cv
181.549 72.7314 181.842 72.9824 181.867 73.3164 cv
181.892 73.6514 181.641 73.9429 181.307 73.9678 cv
177.731 74.2368 175.175 75.2466 173.709 76.9683 cv
173.589 77.1099 173.418 77.1826 173.247 77.1826 cv
cp
.0235294 .164706 .211765 rgb
f
174.829 74.5078 mo
174.029 74.9785 173.338 75.5308 172.784 76.1812 cv
172.567 76.4365 172.598 76.8203 172.853 77.0376 cv
172.967 77.1348 173.107 77.1826 173.247 77.1826 cv
173.418 77.1826 173.589 77.1099 173.709 76.9683 cv
174.028 76.5942 174.408 76.2598 174.829 75.9531 cv
174.829 74.5078 li
cp
1 .513726 .152941 rgb
f
208.144 77.1826 mo
208.284 77.1826 208.423 77.1348 208.538 77.0376 cv
208.793 76.8203 208.824 76.4365 208.607 76.1812 cv
206.923 74.2031 204.086 73.0508 200.176 72.7563 cv
199.842 72.7314 199.549 72.9824 199.524 73.3164 cv
199.499 73.6514 199.75 73.9429 200.084 73.9678 cv
203.66 74.2368 206.216 75.2466 207.681 76.9683 cv
207.802 77.1099 207.973 77.1826 208.144 77.1826 cv
cp
.0235294 .164706 .211765 rgb
f
206.562 74.5078 mo
207.362 74.9785 208.053 75.5308 208.607 76.1812 cv
208.824 76.4365 208.793 76.8203 208.538 77.0376 cv
208.423 77.1348 208.284 77.1826 208.144 77.1826 cv
207.973 77.1826 207.802 77.1099 207.681 76.9683 cv
207.363 76.5942 206.983 76.2598 206.562 75.9531 cv
206.562 74.5078 li
cp
1 .513726 .152941 rgb
f
171.029 102.483 mo
165.232 103.091 li
165.232 102.774 li
165.232 101.357 166.302 100.169 167.711 100.021 cv
169.253 99.8594 li
170.202 99.7598 171.029 100.504 171.029 101.459 cv
171.029 102.483 li
cp
.670588 .682353 .545098 rgb
f
210.253 102.483 mo
216.05 103.091 li
216.05 102.774 li
216.05 101.357 214.98 100.169 213.571 100.021 cv
212.029 99.8594 li
211.08 99.7598 210.253 100.504 210.253 101.459 cv
210.253 102.483 li
cp
f
199.292 73.9556 mo
200.816 91.0415 li
198.087 74.106 li
199.292 73.9556 li
cp
.556863 .54902 .454902 rgb
f
183.195 74.106 mo
180.466 91.0415 li
181.99 73.9556 li
183.195 74.106 li
cp
f
183.378 117.189 mo
182.72 117.189 182.184 117.726 182.184 118.385 cv
182.184 126.173 li
182.184 126.832 182.72 127.368 183.378 127.368 cv
197.904 127.368 li
198.563 127.368 199.099 126.832 199.099 126.173 cv
199.099 118.385 li
199.099 117.726 198.563 117.189 197.904 117.189 cv
183.378 117.189 li
cp
197.904 127.976 mo
183.378 127.976 li
182.385 127.976 181.576 127.167 181.576 126.173 cv
181.576 118.385 li
181.576 117.391 182.385 116.582 183.378 116.582 cv
197.904 116.582 li
198.897 116.582 199.706 117.391 199.706 118.385 cv
199.706 126.173 li
199.706 127.167 198.897 127.976 197.904 127.976 cv
cp
f
328.733 178.578 mo
324.155 178.578 319.577 178.323 315 177.814 cv
315 166.16 li
315.821 169.396 318.115 171.401 320.973 171.722 cv
325.6 172.242 330.227 172.503 334.853 172.503 cv
335.736 172.503 336.618 172.493 337.5 172.474 cv
337.5 178.266 li
334.577 178.474 331.655 178.578 328.733 178.578 cv
314.296 157.5 mo
308.56 157.5 li
308.435 150.817 308.293 142.687 308.183 135 cv
313.903 135 li
313.898 143.682 314.007 151.372 314.296 157.5 cv
314.1 112.5 mo
308.015 112.5 li
308.018 112.207 308.021 111.929 308.025 111.667 cv
303.369 112.155 li
303.369 111.838 li
303.369 110.421 304.439 109.233 305.849 109.085 cv
307.39 108.924 li
307.447 108.918 307.504 108.915 307.56 108.915 cv
307.737 108.915 307.908 108.944 308.068 108.998 cv
308.139 108.731 li
308.576 90 li
314.493 90 li
314.347 97.6364 314.207 105.213 314.1 112.5 cv
.666667 .694118 .709804 rgb
f
314.493 90 mo
308.576 90 li
308.679 85.5991 li
309.227 82.9819 311.617 80.2768 314.862 79.2316 cv
314.739 79.7035 314.675 80.1745 314.675 80.6347 cv
314.614 83.7567 314.553 86.8827 314.493 90 cv
.741176 .764706 .780392 rgb
f
313.903 135 mo
308.183 135 li
308.051 125.776 307.966 117.189 308.015 112.5 cv
314.1 112.5 li
313.984 120.44 313.907 128.039 313.903 135 cv
f
315 177.814 mo
314.95 177.808 314.901 177.803 314.852 177.797 cv
311.954 177.472 309.638 175.413 308.848 172.096 cv
308.848 172.096 308.718 165.956 308.56 157.5 cv
314.296 157.5 li
314.398 159.68 314.524 161.661 314.675 163.419 cv
314.675 164.41 314.788 165.326 315 166.16 cv
315 177.814 li
f
337.5 178.266 mo
337.5 172.474 li
341.245 172.394 344.99 172.143 348.734 171.722 cv
348.739 171.722 348.744 171.721 348.749 171.721 cv
348.624 172.073 li
347.839 175.403 345.518 177.471 342.614 177.797 cv
340.909 177.989 339.205 178.145 337.5 178.266 cv
f
348.734 171.722 mo
339.48 172.763 330.227 172.763 320.973 171.722 cv
317.379 171.318 314.675 168.25 314.675 163.419 cv
313.318 147.631 314.032 113.828 314.675 80.6347 cv
314.675 77.3623 317.935 73.5366 322.366 72.8242 cv
330.848 71.461 339.186 71.4765 347.385 72.8042 cv
351.799 73.5186 355.032 77.351 355.032 80.6069 cv
355.751 113.811 356.548 147.63 355.032 163.419 cv
355.032 168.25 352.328 171.318 348.734 171.722 cv
.643137 .666667 .478431 rgb
f
352.207 77.895 mo
352.207 77.895 li
354.348 77.895 li
353.177 75.4966 350.597 73.3242 347.385 72.8042 cv
346.119 72.5991 344.85 72.4399 343.578 72.2988 cv
343.578 73.6353 344.535 74.7798 345.851 75.0166 cv
348.559 75.5034 li
350.05 75.7715 351.366 76.6348 352.207 77.895 cv
cp
.741176 .831373 .858824 rgb
f
321.663 75.4795 mo
323.993 75.0356 li
325.295 74.7876 326.237 73.6489 326.237 72.3232 cv
326.237 72.3115 li
324.95 72.4541 323.661 72.6162 322.366 72.8242 cv
319.15 73.3413 316.559 75.4995 315.375 77.895 cv
318.02 77.895 li
318.86 76.6338 320.174 75.7632 321.663 75.4795 cv
cp
f
352.042 74.9766 mo
352.042 77.6738 li
352.207 77.895 li
354.348 77.895 li
353.831 76.8374 353.04 75.8242 352.042 74.9766 cv
cp
1 .513726 .152941 rgb
f
318.102 74.6606 mo
316.907 75.5635 315.966 76.6997 315.375 77.895 cv
318.02 77.895 li
318.102 77.7842 li
318.102 74.6606 li
cp
f
334.853 169.465 mo
330.293 169.465 326.276 169.205 321.716 168.692 cv
318.546 168.335 316.498 165.55 316.498 161.597 cv
315.89 126.767 li
315.89 106.484 li
315.648 99.8824 315.887 90.0352 316.498 83.0654 cv
316.498 80.4454 319.236 77.0859 323.167 76.4541 cv
327.31 75.7881 330.885 75.4502 334.991 75.4502 cv
339.056 75.4502 342.553 75.7812 346.583 76.4336 cv
350.488 77.0659 353.21 80.4214 353.21 83.0371 cv
353.945 89.205 354.05 99.1626 353.817 106.484 cv
353.846 126.767 li
353.21 161.597 li
353.21 165.55 351.161 168.335 347.991 168.692 cv
343.431 169.205 339.414 169.465 334.853 169.465 cv
.772549 .8 .545098 rgb
f
317.235 125.889 mo
317.812 161.597 li
317.812 164.887 319.364 167.105 321.862 167.385 cv
326.631 167.921 330.516 168.15 334.853 168.15 cv
339.19 168.15 343.076 167.921 347.844 167.385 cv
350.343 167.105 351.895 164.887 351.895 161.573 cv
352.499 125.889 li
341.031 129.482 329.263 129.308 317.235 125.889 cv
.741176 .505882 .329412 rgb
f
334.853 166.835 mo
330.566 166.835 326.726 166.609 322.01 166.079 cv
320.205 165.876 319.128 164.201 319.128 161.597 cv
318.579 127.616 li
324.256 129.088 329.871 129.834 335.296 129.834 cv
340.669 129.834 345.995 129.103 351.153 127.659 cv
350.58 161.551 li
350.58 164.191 349.503 165.876 347.697 166.079 cv
342.981 166.609 339.14 166.835 334.853 166.835 cv
.533333 .34902 .258824 rgb
f
321.143 142.325 mo
318.816 142.325 li
319.071 158.104 li
321.143 158.104 li
323.003 158.104 324.512 156.595 324.512 154.734 cv
324.512 145.694 li
324.512 143.833 323.003 142.325 321.143 142.325 cv
cp
.643137 .666667 .478431 rgb
f
344.893 145.694 mo
344.893 154.734 li
344.893 156.595 346.401 158.103 348.262 158.103 cv
350.639 158.103 li
350.905 142.325 li
348.262 142.325 li
346.401 142.325 344.893 143.834 344.893 145.694 cv
f
347.844 167.385 mo
341.112 166.658 li
341.112 166.656 li
343.199 166.533 345.339 166.344 347.697 166.079 cv
349.503 165.876 350.58 164.191 350.58 161.551 cv
350.638 158.103 li
350.639 158.103 li
350.905 142.325 li
351.153 127.659 li
348.07 128.522 344.926 129.131 341.748 129.48 cv
341.77 128.22 li
345.597 127.833 348.735 127.068 352.499 125.889 cv
351.895 161.573 li
351.895 164.887 350.343 167.105 347.844 167.385 cv
347.844 167.385 li
.576471 .435294 .329412 rgb
f
341.112 166.656 mo
341.748 129.48 li
344.926 129.131 348.07 128.522 351.153 127.659 cv
350.905 142.325 li
348.262 142.325 li
346.401 142.325 344.893 143.834 344.893 145.694 cv
344.893 154.734 li
344.893 156.595 346.401 158.103 348.262 158.103 cv
350.638 158.103 li
350.58 161.551 li
350.58 164.191 349.503 165.876 347.697 166.079 cv
345.339 166.344 343.199 166.533 341.112 166.656 cv
.431373 .329412 .278431 rgb
f
350.639 158.103 mo
350.638 158.103 li
348.262 158.103 li
346.401 158.103 344.893 156.595 344.893 154.734 cv
344.893 145.694 li
344.893 143.834 346.401 142.325 348.262 142.325 cv
350.905 142.325 li
350.639 158.103 li
.505882 .54902 .435294 rgb
f
315.861 101.017 mo
315.861 126.608 li
328.484 130.652 341.146 130.665 353.846 126.608 cv
353.846 101.017 li
345.617 92.7886 324.367 92.5112 315.861 101.017 cv
cp
.2 .262745 .356863 rgb
f
348.385 119.966 mo
347.999 115.198 347.329 114.002 348.778 109.339 cv
349.655 106.518 352.931 100.185 352.931 100.185 cv
348.81 96.7153 342.212 94.8804 335.516 94.7539 cv
335.516 129.632 li
341.616 129.563 347.727 128.563 353.846 126.608 cv
348.385 119.966 li
cp
.180392 .396078 .470588 rgb
f
321.944 110.646 mo
321.734 110.646 321.531 110.538 321.418 110.344 cv
315.87 100.815 li
315.702 100.525 315.8 100.154 316.09 99.9849 cv
316.38 99.8154 316.752 99.9146 316.921 100.204 cv
322.469 109.732 li
322.637 110.022 322.539 110.394 322.249 110.563 cv
322.153 110.619 322.048 110.646 321.944 110.646 cv
cp
.643137 .666667 .478431 rgb
f
347.763 110.646 mo
347.659 110.646 347.554 110.619 347.458 110.563 cv
347.168 110.394 347.07 110.022 347.239 109.732 cv
352.791 100.208 li
352.959 99.9189 353.332 99.8203 353.621 99.9893 cv
353.911 100.158 354.009 100.53 353.84 100.82 cv
348.288 110.344 li
348.176 110.538 347.973 110.646 347.763 110.646 cv
cp
f
353.846 126.608 mo
345.029 122.309 li
347.539 119.153 li
353.842 119.414 li
353.846 126.608 li
cp
f
315.705 126.608 mo
324.521 122.309 li
322.012 119.153 li
315.71 119.414 li
315.705 126.608 li
cp
f
334.839 126.4 mo
329.96 126.4 325.02 125.739 320.113 124.432 cv
320.113 109.198 li
320.113 107.951 320.909 106.836 322.093 106.443 cv
326.361 105.028 330.637 104.313 334.854 104.313 cv
339.07 104.313 343.346 105.028 347.614 106.443 cv
348.798 106.836 349.593 107.951 349.593 109.198 cv
349.593 124.43 li
344.671 125.738 339.722 126.4 334.84 126.4 cv
334.839 126.4 li
cp
.772549 .8 .545098 rgb
f
322.288 170.202 mo
322.244 170.575 321.395 170.78 320.393 170.661 cv
319.39 170.542 318.613 170.143 318.657 169.771 cv
318.701 169.397 319.55 169.191 320.553 169.311 cv
321.556 169.43 322.332 169.829 322.288 170.202 cv
cp
.494118 .0627451 .184314 rgb
f
326.396 170.63 mo
326.368 171.004 325.529 171.247 324.522 171.17 cv
323.516 171.094 322.723 170.729 322.751 170.354 cv
322.778 169.98 323.618 169.738 324.625 169.814 cv
325.632 169.89 326.425 170.255 326.396 170.63 cv
cp
f
347.419 170.202 mo
347.463 170.575 348.312 170.78 349.314 170.661 cv
350.317 170.542 351.094 170.143 351.05 169.771 cv
351.006 169.397 350.156 169.191 349.154 169.311 cv
348.151 169.43 347.375 169.829 347.419 170.202 cv
cp
f
343.311 170.63 mo
343.339 171.004 344.178 171.247 345.185 171.17 cv
346.191 171.094 346.984 170.729 346.956 170.354 cv
346.928 169.98 346.089 169.738 345.082 169.814 cv
344.075 169.89 343.282 170.255 343.311 170.63 cv
cp
f
315.286 103.903 mo
309.489 104.51 li
309.489 104.193 li
309.489 102.776 310.56 101.588 311.969 101.44 cv
313.511 101.279 li
314.46 101.18 315.286 101.924 315.286 102.878 cv
315.286 103.903 li
cp
.772549 .8 .545098 rgb
f
354.512 103.903 mo
360.309 104.51 li
360.309 104.193 li
360.309 102.776 359.238 101.588 357.828 101.44 cv
356.287 101.279 li
355.338 101.18 354.512 101.924 354.512 102.878 cv
354.512 103.903 li
cp
f
343.55 75.375 mo
345.074 92.4609 li
342.345 75.5259 li
343.55 75.375 li
cp
.643137 .666667 .478431 rgb
f
327.453 75.5259 mo
324.724 92.4609 li
326.248 75.375 li
327.453 75.5259 li
cp
f
330.58 433.845 mo
325.953 433.845 321.326 433.585 316.699 433.065 cv
316.106 432.999 315.537 432.859 315 432.651 cv
315 427.5 li
310.729 427.5 li
310.717 427.455 310.706 427.409 310.695 427.363 cv
310.695 427.363 310.492 417.269 310.285 405 cv
315 405 li
315 382.5 li
309.952 382.5 li
309.861 374.75 309.816 368.048 309.872 364.496 cv
305.216 364.984 li
305.216 364.668 li
305.216 363.25 306.286 362.063 307.695 361.914 cv
309.237 361.753 li
309.295 361.747 309.352 361.744 309.408 361.744 cv
309.585 361.744 309.755 361.773 309.915 361.827 cv
309.985 361.561 li
310.025 360 li
315 360 li
315 337.5 li
311.633 337.5 li
312.436 336.295 313.596 335.204 315 334.428 cv
315 337.5 li
316.476 337.5 li
316.329 345.031 316.182 352.608 316.059 360 cv
315 360 li
315 382.5 li
315.778 382.5 li
315.723 390.813 315.744 398.458 315.888 405 cv
315 405 li
315 427.5 li
328.53 427.5 li
331.253 427.68 333.977 427.77 336.701 427.77 cv
336.967 427.77 337.233 427.769 337.5 427.768 cv
337.5 433.652 li
335.193 433.781 332.887 433.845 330.58 433.845 cv
.666667 .694118 .709804 rgb
f
315 360 mo
310.025 360 li
310.526 340.054 li
310.707 339.191 311.088 338.319 311.633 337.5 cv
315 337.5 li
315 360 li
.741176 .764706 .780392 rgb
f
316.476 337.5 mo
315 337.5 li
315 334.428 li
315.536 334.131 316.109 333.88 316.71 333.687 cv
316.587 334.159 316.522 334.63 316.522 335.09 cv
316.507 335.892 316.491 336.696 316.476 337.5 cv
f
350.432 427.5 mo
344.871 427.5 li
346.775 427.374 348.679 427.204 350.582 426.99 cv
350.582 426.99 li
350.582 426.99 li
350.586 426.99 350.591 426.989 350.595 426.989 cv
350.471 427.341 li
350.458 427.394 350.445 427.447 350.432 427.5 cv
.666667 .694118 .709804 rgb
f
315 405 mo
310.285 405 li
310.161 397.714 310.037 389.659 309.952 382.5 cv
315 382.5 li
315 405 li
.741176 .764706 .780392 rgb
f
315.778 382.5 mo
315 382.5 li
315 360 li
316.059 360 li
315.929 367.8 315.826 375.394 315.778 382.5 cv
f
315 432.651 mo
312.953 431.857 311.379 430.065 310.729 427.5 cv
315 427.5 li
315 432.651 li
f
328.53 427.5 mo
315 427.5 li
315 405 li
315.888 405 li
316.007 410.398 316.21 415.045 316.522 418.688 cv
316.522 423.519 319.226 426.586 322.819 426.99 cv
324.723 427.204 326.626 427.374 328.53 427.5 cv
f
337.5 433.652 mo
337.5 427.768 li
339.957 427.752 342.414 427.663 344.871 427.5 cv
350.432 427.5 li
349.612 430.738 347.319 432.743 344.461 433.065 cv
342.141 433.326 339.82 433.522 337.5 433.652 cv
f
350.582 426.99 mo
341.328 428.03 332.073 428.03 322.819 426.99 cv
319.226 426.586 316.522 423.519 316.522 418.688 cv
315.166 402.899 315.879 368.282 316.522 335.09 cv
316.522 331.817 319.782 327.991 324.214 327.279 cv
332.695 325.916 341.032 325.932 349.232 327.259 cv
353.646 327.974 356.879 331.806 356.879 335.063 cv
357.598 368.266 358.396 402.898 356.879 418.688 cv
356.879 423.519 354.176 426.586 350.582 426.99 cv
0 .478431 .729412 rgb
f
324.503 422.114 mo
319.625 422.114 li
319.625 425.733 li
320.552 426.417 321.632 426.856 322.819 426.99 cv
323.381 427.053 323.941 427.101 324.503 427.155 cv
324.503 422.114 li
cp
.772549 0 0 rgb
f
348.486 422.114 mo
348.486 427.196 li
349.185 427.13 349.883 427.068 350.582 426.99 cv
351.767 426.856 352.845 426.419 353.77 425.737 cv
353.77 422.114 li
348.486 422.114 li
f
322.064 422.114 mo
319.625 422.114 li
319.625 425.733 li
320.351 426.269 321.173 426.647 322.064 426.854 cv
322.064 422.114 li
cp
1 .513726 .152941 rgb
f
351.331 422.114 mo
351.331 426.855 li
352.223 426.649 353.045 426.271 353.77 425.737 cv
353.77 422.114 li
351.331 422.114 li
f
336.701 424.732 mo
332.141 424.732 328.123 424.473 323.564 423.96 cv
320.394 423.603 318.345 420.818 318.345 416.865 cv
317.737 379.596 li
317.737 359.313 li
317.495 352.711 317.734 344.49 318.345 337.521 cv
318.345 334.9 321.084 331.541 325.014 330.909 cv
329.157 330.243 332.732 329.905 336.838 329.905 cv
340.902 329.905 344.399 330.236 348.431 330.889 cv
352.335 331.521 355.057 334.876 355.057 337.492 cv
355.793 343.66 355.897 351.991 355.664 359.313 cv
355.693 379.596 li
355.057 416.865 li
355.057 420.818 353.009 423.603 349.839 423.96 cv
345.278 424.473 341.261 424.732 336.701 424.732 cv
.211765 .623529 .85098 rgb
f
319.083 378.718 mo
319.66 416.865 li
319.66 420.154 321.212 422.372 323.71 422.653 cv
328.479 423.189 332.363 423.418 336.701 423.418 cv
341.038 423.418 344.923 423.189 349.691 422.653 cv
352.19 422.372 353.742 420.154 353.742 416.841 cv
354.347 378.718 li
342.878 382.311 331.11 382.137 319.083 378.718 cv
.211765 .788235 1 rgb
f
336.701 422.103 mo
332.414 422.103 328.573 421.877 323.857 421.347 cv
322.053 421.144 320.975 419.469 320.975 416.865 cv
320.426 380.445 li
326.102 381.917 331.719 382.663 337.144 382.663 cv
342.517 382.663 347.843 381.932 353.001 380.488 cv
352.427 416.818 li
352.427 419.46 351.35 421.144 349.544 421.347 cv
344.828 421.877 340.987 422.103 336.701 422.103 cv
0 .478431 .729412 rgb
f
322.989 397.593 mo
320.664 397.593 li
320.919 413.372 li
322.989 413.372 li
324.851 413.372 326.359 411.863 326.359 410.002 cv
326.359 400.962 li
326.359 399.102 324.851 397.593 322.989 397.593 cv
cp
.211765 .623529 .85098 rgb
f
346.74 400.962 mo
346.74 410.002 li
346.74 411.863 348.248 413.372 350.109 413.372 cv
352.485 413.372 li
352.753 397.593 li
350.109 397.593 li
348.248 397.593 346.74 399.102 346.74 400.962 cv
f
349.691 422.653 mo
342.96 421.926 li
342.96 421.924 li
345.046 421.801 347.185 421.612 349.544 421.347 cv
351.35 421.144 352.427 419.46 352.427 416.818 cv
352.481 413.372 li
352.485 413.372 li
352.753 397.593 li
352.731 397.593 li
353.001 380.488 li
349.918 381.351 346.774 381.959 343.597 382.309 cv
343.617 381.049 li
347.443 380.663 350.583 379.897 354.347 378.718 cv
353.742 416.841 li
353.742 420.154 352.19 422.372 349.691 422.653 cv
349.691 422.653 li
.203922 .635294 .796078 rgb
f
342.96 421.924 mo
343.597 382.309 li
346.774 381.959 349.918 381.351 353.001 380.488 cv
352.731 397.593 li
350.109 397.593 li
348.248 397.593 346.74 399.102 346.74 400.962 cv
346.74 410.002 li
346.74 411.863 348.248 413.372 350.109 413.372 cv
352.481 413.372 li
352.427 416.818 li
352.427 419.46 351.35 421.144 349.544 421.347 cv
347.185 421.612 345.046 421.801 342.96 421.924 cv
.0588235 .419608 .607843 rgb
f
352.485 413.372 mo
352.481 413.372 li
350.109 413.372 li
348.248 413.372 346.74 411.863 346.74 410.002 cv
346.74 400.962 li
346.74 399.102 348.248 397.593 350.109 397.593 cv
352.731 397.593 li
352.753 397.593 li
352.485 413.372 li
.203922 .517647 .694118 rgb
f
317.708 353.846 mo
317.708 379.438 li
330.331 383.481 342.993 383.494 355.693 379.438 cv
355.693 353.846 li
347.465 345.617 326.214 345.341 317.708 353.846 cv
cp
.2 .262745 .356863 rgb
f
350.232 372.795 mo
349.846 368.027 349.176 366.832 350.626 362.168 cv
351.503 359.347 354.778 353.015 354.778 353.015 cv
350.657 349.544 344.06 347.71 337.362 347.583 cv
337.362 382.461 li
343.464 382.392 349.574 381.392 355.693 379.438 cv
350.232 372.795 li
cp
.180392 .396078 .470588 rgb
f
323.791 363.475 mo
323.581 363.475 323.378 363.366 323.265 363.173 cv
317.718 353.645 li
317.55 353.354 317.647 352.982 317.938 352.813 cv
318.228 352.645 318.6 352.744 318.769 353.033 cv
324.315 362.562 li
324.483 362.852 324.386 363.224 324.096 363.393 cv
324 363.448 323.895 363.475 323.791 363.475 cv
cp
0 .478431 .729412 rgb
f
349.61 363.475 mo
349.507 363.475 349.401 363.448 349.306 363.392 cv
349.016 363.223 348.918 362.852 349.087 362.562 cv
354.638 353.037 li
354.806 352.747 355.178 352.646 355.468 352.818 cv
355.758 352.987 355.855 353.358 355.687 353.648 cv
350.136 363.173 li
350.023 363.367 349.82 363.475 349.61 363.475 cv
cp
f
355.693 379.438 mo
346.877 375.138 li
349.387 373.607 li
355.688 373.869 li
355.693 379.438 li
cp
f
317.553 379.438 mo
326.369 375.138 li
323.859 373.607 li
317.557 373.869 li
317.553 379.438 li
cp
f
336.687 379.229 mo
331.807 379.229 326.867 378.568 321.961 377.261 cv
321.961 362.027 li
321.961 360.78 322.756 359.665 323.939 359.272 cv
328.208 357.856 332.483 357.142 336.701 357.142 cv
340.918 357.142 345.193 357.856 349.462 359.272 cv
350.645 359.665 351.44 360.78 351.44 362.027 cv
351.44 377.259 li
346.519 378.567 341.568 379.229 336.687 379.229 cv
cp
.211765 .623529 .85098 rgb
f
317.134 356.731 mo
311.337 357.339 li
311.337 357.022 li
311.337 355.605 312.407 354.417 313.816 354.27 cv
315.358 354.108 li
316.308 354.009 317.134 354.753 317.134 355.707 cv
317.134 356.731 li
cp
f
356.358 356.731 mo
362.155 357.339 li
362.155 357.022 li
362.155 355.605 361.085 354.417 359.676 354.27 cv
358.135 354.108 li
357.186 354.009 356.358 354.753 356.358 355.707 cv
356.358 356.731 li
cp
f
326.897 363.207 mo
333.463 361.67 340.029 361.67 346.595 363.207 cv
347.226 363.354 347.667 363.928 347.667 364.575 cv
347.667 366.968 li
347.667 367.743 347.038 368.372 346.263 368.372 cv
327.229 368.372 li
326.454 368.372 325.825 367.743 325.825 366.968 cv
325.825 364.575 li
325.825 363.928 326.267 363.354 326.897 363.207 cv
cp
.2 .262745 .356863 rgb
f
346.595 363.207 mo
343.488 362.479 340.381 362.101 337.274 362.062 cv
337.274 368.372 li
346.263 368.372 li
347.038 368.372 347.667 367.743 347.667 366.968 cv
347.667 364.575 li
347.667 363.928 347.226 363.354 346.595 363.207 cv
cp
.180392 .396078 .470588 rgb
f
319.854 337.152 mo
327.158 333.643 li
328.104 333.188 328.707 332.231 328.707 331.182 cv
328.707 330.922 328.468 330.727 328.213 330.779 cv
324.41 331.563 li
321.758 332.108 319.854 334.443 319.854 337.151 cv
319.854 337.152 li
cp
.2 .262745 .356863 rgb
f
322.175 332.558 mo
320.753 333.607 319.854 335.291 319.854 337.151 cv
322.175 336.037 li
322.175 332.558 li
cp
1 .513726 .152941 rgb
f
355.264 337.152 mo
347.96 333.643 li
347.014 333.188 346.412 332.231 346.412 331.182 cv
346.412 330.922 346.65 330.727 346.905 330.779 cv
350.708 331.563 li
353.36 332.108 355.264 334.443 355.264 337.151 cv
355.264 337.152 li
cp
.2 .262745 .356863 rgb
f
352.943 332.558 mo
354.365 333.607 355.264 335.291 355.264 337.151 cv
352.943 336.037 li
352.943 332.558 li
cp
1 .513726 .152941 rgb
f
345.206 332.348 mo
340.025 331.715 334.88 331.716 329.916 332.347 cv
329.762 331.142 li
334.828 330.497 340.073 330.498 345.353 331.141 cv
345.206 332.348 li
cp
.2 .262745 .356863 rgb
f
333.677 310.457 mo
329.05 310.457 324.423 310.196 319.796 309.676 cv
317.833 309.456 316.136 308.441 315 306.778 cv
315 292.5 li
312.998 292.5 li
312.773 286.184 312.704 278.517 312.732 270 cv
315 270 li
315 247.5 li
312.969 247.5 li
312.979 246.828 312.99 246.152 313.001 245.476 cv
308.888 245.907 li
308.888 245.591 li
308.888 244.174 309.958 242.985 311.367 242.837 cv
313.048 242.661 li
313.146 236.864 313.259 230.941 313.374 225 cv
315 225 li
315 214.535 li
316.1 213.064 317.737 211.805 319.691 211.148 cv
319.575 211.608 319.514 212.066 319.514 212.514 cv
319.433 216.679 319.351 220.852 319.273 225 cv
315 225 li
315 247.5 li
318.895 247.5 li
318.787 255.501 318.725 263.105 318.745 270 cv
315 270 li
315 292.5 li
319.306 292.5 li
319.369 293.486 319.438 294.42 319.514 295.298 cv
319.514 300.13 322.218 303.197 325.811 303.601 cv
329.708 304.039 333.604 304.293 337.5 304.362 cv
337.5 310.397 li
336.226 310.437 334.951 310.457 333.677 310.457 cv
.666667 .694118 .709804 rgb
f
315 225 mo
313.374 225 li
313.415 222.864 313.457 220.726 313.498 218.589 cv
313.498 217.247 314.047 215.811 315 214.535 cv
315 225 li
.741176 .764706 .780392 rgb
f
315 270 mo
312.732 270 li
312.755 262.983 312.845 255.389 312.969 247.5 cv
315 247.5 li
315 270 li
f
318.895 247.5 mo
315 247.5 li
315 225 li
319.273 225 li
319.127 232.67 318.992 240.249 318.895 247.5 cv
f
315 306.778 mo
314.055 305.396 313.498 303.566 313.498 301.373 cv
313.281 298.85 313.118 295.868 312.998 292.5 cv
315 292.5 li
315 306.778 li
f
319.306 292.5 mo
315 292.5 li
315 270 li
318.745 270 li
318.77 278.909 318.931 286.634 319.306 292.5 cv
f
337.5 310.397 mo
337.5 304.362 li
338.231 304.375 338.962 304.381 339.692 304.381 cv
344.319 304.381 348.946 304.121 353.573 303.601 cv
353.598 303.598 353.623 303.595 353.648 303.592 cv
352.95 307.134 350.566 309.338 347.558 309.676 cv
344.205 310.053 340.853 310.293 337.5 310.397 cv
f
353.573 303.601 mo
344.319 304.642 335.065 304.642 325.811 303.601 cv
322.218 303.197 319.514 300.13 319.514 295.298 cv
318.157 279.511 318.871 245.706 319.514 212.514 cv
319.514 209.241 322.774 205.416 327.205 204.703 cv
335.687 203.34 344.024 203.355 352.224 204.683 cv
356.638 205.397 359.871 209.23 359.871 212.486 cv
360.59 245.69 361.387 279.51 359.871 295.298 cv
359.871 300.13 357.167 303.197 353.573 303.601 cv
.952941 .701961 .231373 rgb
f
339.692 303.166 mo
335.132 303.166 331.115 302.906 326.555 302.394 cv
323.385 302.037 321.337 299.252 321.337 295.299 cv
320.728 287.573 li
320.728 235.326 li
321.944 213.729 li
321.944 211.109 324.683 207.75 328.613 207.118 cv
332.756 206.452 335.724 206.114 339.83 206.114 cv
343.895 206.114 346.783 206.445 350.814 207.097 cv
354.72 207.73 357.44 211.085 357.44 213.701 cv
358.656 235.326 li
358.656 287.573 li
358.049 295.299 li
358.049 299.252 356 302.037 352.83 302.394 cv
348.27 302.906 344.253 303.166 339.692 303.166 cv
1 .862745 .243137 rgb
f
320.7 235.326 mo
320.7 287.573 li
333.323 291.617 345.984 291.63 358.685 287.573 cv
358.685 235.326 li
346.023 229.656 333.361 229.656 320.7 235.326 cv
.2 .262745 .356863 rgb
f
353.016 266.822 mo
352.958 266.561 352.891 266.302 352.841 266.037 cv
352.727 265.424 352.775 264.829 352.946 264.278 cv
352.662 261.815 352.525 259.337 352.57 256.843 cv
352.581 256.282 352.705 255.784 352.908 255.345 cv
352.427 254.699 352.133 253.902 352.158 253.026 cv
352.14 252.686 352.163 252.326 352.242 251.945 cv
353.388 246.459 355.975 240.858 358.099 235.081 cv
351.91 232.396 345.722 231.055 339.533 231.078 cv
339.533 290.608 li
345.6 290.623 351.675 289.698 357.76 287.85 cv
355.649 284.376 353.471 280.82 352.397 276.969 cv
351.386 273.341 351.938 270.06 353.016 266.822 cv
.180392 .396078 .470588 rgb
f
326.782 250.663 mo
326.534 250.663 326.302 250.511 326.212 250.264 cv
320.793 235.433 li
320.678 235.118 320.84 234.77 321.155 234.654 cv
321.467 234.536 321.818 234.7 321.934 235.017 cv
327.353 249.847 li
327.468 250.162 327.306 250.511 326.991 250.626 cv
326.782 250.663 li
cp
.952941 .701961 .231373 rgb
f
321.585 288.357 mo
321.438 288.357 321.29 288.322 321.151 288.247 cv
320.709 288.008 320.545 287.454 320.785 287.012 cv
327.48 274.66 li
327.721 274.219 328.271 274.053 328.716 274.294 cv
329.158 274.533 329.322 275.087 329.082 275.529 cv
322.387 287.881 li
322.222 288.185 321.908 288.357 321.585 288.357 cv
cp
f
328.192 263.099 mo
320.7 263.099 li
320.7 261.276 li
328.192 261.276 li
328.192 263.099 li
cp
f
352.603 250.663 mo
352.394 250.626 li
352.078 250.511 351.917 250.161 352.032 249.847 cv
357.441 235.092 li
357.557 234.776 357.904 234.615 358.221 234.73 cv
358.536 234.846 358.697 235.195 358.582 235.51 cv
353.173 250.265 li
353.083 250.511 352.85 250.663 352.603 250.663 cv
cp
f
357.762 288.307 mo
357.438 288.307 357.124 288.134 356.959 287.829 cv
350.302 275.528 li
350.063 275.086 350.228 274.533 350.67 274.293 cv
351.111 274.054 351.665 274.219 351.905 274.661 cv
358.563 286.962 li
358.802 287.404 358.637 287.957 358.194 288.197 cv
358.057 288.271 357.908 288.307 357.762 288.307 cv
cp
f
358.685 263.099 mo
351.192 263.099 li
351.192 261.276 li
358.685 261.276 li
358.685 263.099 li
cp
f
339.678 282.105 mo
334.799 282.105 329.858 281.444 324.952 280.138 cv
324.952 246.062 li
329.877 244.177 334.823 243.224 339.692 243.224 cv
344.561 243.224 349.508 244.177 354.432 246.062 cv
354.432 280.135 li
349.51 281.443 344.56 282.105 339.679 282.105 cv
339.678 282.105 li
1 .862745 .243137 rgb
f
320.7 239.225 mo
314.903 239.832 li
314.903 239.516 li
314.903 238.098 315.974 236.91 317.383 236.762 cv
320.7 236.414 li
320.7 239.225 li
cp
f
358.656 239.225 mo
364.453 239.832 li
364.453 239.516 li
364.453 238.098 363.383 236.91 361.973 236.762 cv
358.656 236.414 li
358.656 239.225 li
cp
f
321.974 212.988 mo
329.278 209.479 li
330.225 209.024 330.826 208.067 330.826 207.018 cv
330.826 206.757 330.587 206.563 330.332 206.615 cv
326.53 207.398 li
323.877 207.944 321.974 210.279 321.974 212.988 cv
cp
.388235 .466667 .517647 rgb
f
327.181 208.747 mo
329.307 208.747 li
329.307 207.987 li
327.181 207.987 li
327.181 208.747 li
cp
.741176 .831373 .858824 rgb
f
324.801 210.177 mo
326.927 210.177 li
326.927 209.417 li
324.801 209.417 li
324.801 210.177 li
cp
f
357.384 212.988 mo
350.079 209.479 li
349.133 209.024 348.531 208.067 348.531 207.018 cv
348.531 206.757 348.77 206.563 349.024 206.615 cv
352.827 207.398 li
355.48 207.944 357.384 210.279 357.384 212.988 cv
cp
.388235 .466667 .517647 rgb
f
352.177 208.747 mo
350.051 208.747 li
350.051 207.987 li
352.177 207.987 li
352.177 208.747 li
cp
.741176 .831373 .858824 rgb
f
354.557 210.177 mo
352.43 210.177 li
352.43 209.417 li
354.557 209.417 li
354.557 210.177 li
cp
f
347.34 208.717 mo
342.159 208.085 337.015 208.085 332.049 208.716 cv
331.895 207.511 li
336.961 206.867 342.207 206.866 347.486 207.511 cv
347.34 208.717 li
cp
.388235 .466667 .517647 rgb
f
347.633 303.773 mo
347.328 303.773 347.064 303.544 347.03 303.233 cv
346.993 302.9 347.233 302.6 347.566 302.563 cv
354.365 301.804 li
354.693 301.762 355 302.007 355.036 302.34 cv
355.073 302.673 354.833 302.974 354.5 303.011 cv
347.701 303.77 li
347.633 303.773 li
cp
.839216 0 .0352941 rgb
f
331.682 303.773 mo
331.613 303.77 li
324.814 303.011 li
324.481 302.974 324.241 302.673 324.278 302.34 cv
324.315 302.007 324.623 301.761 324.949 301.804 cv
331.748 302.563 li
332.081 302.6 332.321 302.9 332.284 303.233 cv
332.25 303.544 331.986 303.773 331.682 303.773 cv
cp
f
344.921 224.209 mo
344.807 224.209 344.754 224.146 344.754 224.042 cv
344.754 222.995 li
344.754 222.891 344.807 222.828 344.921 222.828 cv
346.136 222.828 li
346.136 216.003 li
346.136 215.888 346.188 215.835 346.303 215.835 cv
347.392 215.835 li
347.496 215.835 347.56 215.888 347.56 216.003 cv
347.56 222.828 li
348.773 222.828 li
348.878 222.828 348.94 222.891 348.94 222.995 cv
348.94 224.042 li
348.94 224.146 348.878 224.209 348.773 224.209 cv
344.921 224.209 li
cp
.396078 .380392 .341176 rgb
f
342.316 222.377 mo
342.986 218.725 li
341.646 218.725 li
342.316 222.377 li
cp
340.925 215.835 mo
341.019 215.835 341.071 215.888 341.092 215.982 cv
341.385 217.51 li
343.248 217.51 li
343.531 215.982 li
343.552 215.888 343.604 215.835 343.698 215.835 cv
344.818 215.835 li
344.934 215.835 344.986 215.898 344.955 216.013 cv
343.217 224.063 li
343.196 224.167 343.133 224.209 343.039 224.209 cv
341.584 224.209 li
341.49 224.209 341.427 224.167 341.406 224.063 cv
339.669 216.013 li
339.647 215.898 339.689 215.835 339.815 215.835 cv
340.925 215.835 li
cp
f
334.061 216.087 mo
333.998 215.94 334.051 215.835 334.218 215.835 cv
335.296 215.835 li
335.411 215.835 335.495 215.877 335.537 215.982 cv
336.542 218.515 li
337.547 215.982 li
337.589 215.877 337.672 215.835 337.787 215.835 cv
338.865 215.835 li
339.033 215.835 339.086 215.94 339.022 216.087 cv
337.369 220.106 li
338.96 223.958 li
339.022 224.105 338.971 224.209 338.803 224.209 cv
337.756 224.209 li
337.641 224.209 337.558 224.167 337.516 224.063 cv
336.542 221.582 li
335.568 224.063 li
335.526 224.167 335.442 224.209 335.327 224.209 cv
334.281 224.209 li
334.113 224.209 334.061 224.105 334.124 223.958 cv
335.726 220.106 li
334.061 216.087 li
cp
f
331.846 224.209 mo
331.741 224.209 331.678 224.146 331.678 224.042 cv
331.678 216.003 li
331.678 215.898 331.741 215.835 331.846 215.835 cv
332.935 215.835 li
333.049 215.835 333.102 215.898 333.102 216.003 cv
333.102 224.042 li
333.102 224.146 333.049 224.209 332.935 224.209 cv
331.846 224.209 li
cp
f
340.182 260.175 mo
331.189 260.175 li
330.726 260.175 330.349 259.798 330.349 259.333 cv
330.349 258.897 li
330.349 258.319 330.455 257.748 330.665 257.209 cv
331.215 255.797 332.299 253.025 332.414 252.828 cv
332.692 252.351 333.187 252.012 333.772 251.962 cv
335.692 251.796 337.613 251.714 339.533 251.714 cv
341.453 251.714 343.374 251.796 345.294 251.962 cv
346.204 252.04 346.895 252.814 346.895 253.728 cv
346.895 255.971 li
346.895 256.556 346.612 257.073 346.177 257.396 cv
345.976 257.546 343.846 258.78 342.507 259.553 cv
341.8 259.961 340.999 260.175 340.182 260.175 cv
.756863 .686274 .270588 rgb
f
333.944 257.744 mo
345.122 257.744 li
346.102 257.744 346.896 256.95 346.896 255.971 cv
346.896 253.728 li
346.896 252.814 346.204 252.04 345.294 251.962 cv
341.453 251.631 337.612 251.631 333.772 251.962 cv
332.862 252.04 332.171 252.814 332.171 253.728 cv
332.171 255.971 li
332.171 256.95 332.965 257.744 333.944 257.744 cv
cp
.94902 .862745 .670588 rgb
f
346.817 256.463 mo
346.863 256.306 346.896 256.143 346.896 255.971 cv
346.896 253.728 li
346.896 252.814 346.204 252.04 345.294 251.962 cv
341.453 251.631 337.612 251.631 333.772 251.962 cv
333.686 251.978 li
334.445 256.463 li
346.817 256.463 li
cp
1 1 .905882 rgb
f
333.994 256.529 mo
333.994 254.379 li
335.832 254.223 337.695 254.144 339.533 254.144 cv
341.37 254.144 343.234 254.223 345.072 254.379 cv
345.072 256.529 li
333.994 256.529 li
cp
.890196 .780392 .568627 rgb
f
112.5 178.728 mo
108.558 178.663 104.616 178.408 100.674 177.965 cv
97.0806 177.561 94.3769 174.494 94.3769 169.662 cv
94.092 166.345 93.8984 162.235 93.7764 157.5 cv
100.094 157.5 li
100.193 159.507 100.311 161.34 100.452 162.98 cv
100.452 167.811 103.156 170.878 106.749 171.282 cv
108.667 171.498 110.583 171.669 112.5 171.795 cv
112.5 178.728 li
99.6798 135 mo
93.6262 135 li
93.6661 128.308 93.7592 121.154 93.8794 113.765 cv
90 114.171 li
90 112.765 li
90.04 112.674 90.0848 112.586 90.1341 112.5 cv
99.8707 112.5 li
99.7555 120.448 99.6805 128.048 99.6798 135 cv
100.262 90 mo
94.3164 90 li
94.3366 88.9591 94.3568 87.9183 94.3769 86.878 cv
94.3769 84.0037 96.8915 80.7035 100.505 79.4596 cv
100.47 79.7069 100.452 79.9526 100.452 80.1953 cv
100.389 83.4631 100.325 86.7381 100.262 90 cv
.666667 .694118 .709804 rgb
f
89.7661 114.196 mo
89.7661 113.879 li
89.7661 113.484 89.8494 113.107 90 112.765 cv
90 114.171 li
89.7661 114.196 li
.741176 .764706 .780392 rgb
f
99.8707 112.5 mo
90.1341 112.5 li
90.564 111.753 91.334 111.222 92.2461 111.126 cv
93.9257 110.95 li
94.0427 104.083 94.1797 97.0416 94.3164 90 cv
100.262 90 li
100.115 97.642 99.9762 105.217 99.8707 112.5 cv
f
100.094 157.5 mo
93.7764 157.5 li
93.6093 151.019 93.5761 143.371 93.6262 135 cv
99.6798 135 li
99.6789 143.71 99.7947 151.404 100.094 157.5 cv
f
114.555 178.745 mo
113.87 178.745 113.185 178.74 112.5 178.728 cv
112.5 171.795 li
115.21 171.973 117.921 172.063 120.631 172.063 cv
125.258 172.063 129.885 171.803 134.512 171.282 cv
134.551 171.278 134.589 171.273 134.628 171.268 cv
134.096 175.168 131.614 177.608 128.436 177.965 cv
123.81 178.485 119.182 178.745 114.555 178.745 cv
f
134.512 171.282 mo
125.258 172.323 116.004 172.323 106.749 171.282 cv
103.156 170.878 100.452 167.811 100.452 162.98 cv
99.0957 147.191 99.809 113.388 100.452 80.1953 cv
100.452 76.9224 103.712 73.0967 108.144 72.3843 cv
116.625 71.0209 124.962 71.037 133.162 72.3642 cv
137.576 73.0787 140.809 76.9111 140.809 80.1674 cv
141.528 113.371 142.325 147.19 140.809 162.98 cv
140.809 167.811 138.105 170.878 134.512 171.282 cv
.141176 .152941 .172549 rgb
f
139.529 154.495 mo
141.554 147.813 li
141.802 136.013 141.627 120.922 141.324 104.83 cv
99.9918 104.83 li
99.7276 120.511 99.5722 135.241 99.7695 146.902 cv
101.789 154.495 li
139.529 154.495 li
.768627 .819608 .819608 rgb
f
120.631 170.848 mo
116.07 170.848 112.053 170.587 107.493 170.075 cv
104.323 169.718 102.275 166.933 102.275 162.98 cv
101.667 155.254 li
101.667 103.007 li
102.882 81.4101 li
102.882 78.7905 105.621 75.4312 109.551 74.7989 cv
113.694 74.1329 116.662 73.7954 120.768 73.7954 cv
124.832 73.7954 127.722 74.126 131.753 74.7784 cv
135.658 75.4111 138.379 78.7662 138.379 81.3823 cv
139.594 103.007 li
139.594 155.254 li
138.987 162.98 li
138.987 166.933 136.938 169.718 133.769 170.075 cv
129.208 170.587 125.191 170.848 120.631 170.848 cv
.2 .243137 .258824 rgb
f
101.638 103.007 mo
101.638 155.254 li
114.261 159.298 126.923 159.311 139.623 155.254 cv
139.623 103.007 li
126.961 97.3369 114.3 97.3369 101.638 103.007 cv
.2 .262745 .356863 rgb
f
133.954 134.504 mo
133.897 134.242 133.829 133.983 133.779 133.718 cv
133.665 133.105 133.714 132.51 133.884 131.959 cv
133.601 129.497 133.463 127.019 133.509 124.524 cv
133.519 123.964 133.644 123.465 133.846 123.026 cv
133.365 122.38 133.071 121.583 133.096 120.707 cv
133.078 120.367 133.101 120.007 133.181 119.626 cv
134.326 114.14 136.913 108.54 139.037 102.762 cv
132.848 100.077 126.66 98.7358 120.472 98.7588 cv
120.472 158.289 li
126.538 158.304 132.613 157.38 138.698 155.531 cv
136.588 152.058 134.41 148.502 133.336 144.65 cv
132.324 141.022 132.876 137.741 133.954 134.504 cv
.180392 .396078 .470588 rgb
f
107.72 118.345 mo
107.472 118.345 107.24 118.192 107.149 117.945 cv
101.731 103.114 li
101.616 102.799 101.778 102.45 102.093 102.335 cv
102.407 102.219 102.757 102.381 102.873 102.697 cv
108.291 117.528 li
108.406 117.843 108.244 118.192 107.929 118.308 cv
107.72 118.345 li
cp
.768627 .819608 .819608 rgb
f
102.523 156.04 mo
102.377 156.04 102.228 156.004 102.09 155.929 cv
101.647 155.689 101.483 155.136 101.723 154.694 cv
108.418 142.341 li
108.658 141.899 109.211 141.734 109.654 141.974 cv
110.097 142.214 110.261 142.767 110.021 143.209 cv
103.326 155.562 li
103.161 155.867 102.847 156.04 102.523 156.04 cv
cp
f
109.131 130.78 mo
101.638 130.78 li
101.638 128.958 li
109.131 128.958 li
109.131 130.78 li
cp
f
133.542 118.345 mo
133.333 118.307 li
133.018 118.192 132.855 117.843 132.971 117.528 cv
138.38 102.773 li
138.496 102.458 138.845 102.296 139.16 102.412 cv
139.475 102.527 139.637 102.876 139.521 103.191 cv
134.112 117.946 li
134.021 118.192 133.789 118.345 133.542 118.345 cv
cp
f
138.7 155.989 mo
138.376 155.989 138.063 155.815 137.898 155.511 cv
131.241 143.209 li
131.001 142.767 131.166 142.213 131.608 141.974 cv
132.051 141.734 132.604 141.899 132.843 142.342 cv
139.5 154.644 li
139.74 155.086 139.576 155.639 139.133 155.878 cv
138.995 155.953 138.847 155.989 138.7 155.989 cv
cp
f
139.623 130.78 mo
132.13 130.78 li
132.13 128.958 li
139.623 128.958 li
139.623 130.78 li
cp
f
120.616 149.787 mo
115.737 149.787 110.797 149.125 105.891 147.818 cv
105.891 113.743 li
110.815 111.858 115.762 110.905 120.631 110.905 cv
125.499 110.905 130.446 111.858 135.371 113.743 cv
135.371 147.816 li
130.449 149.124 125.498 149.787 120.617 149.787 cv
120.616 149.787 li
.909804 .917647 .917647 rgb
f
101.638 106.905 mo
95.8413 107.513 li
95.8413 107.196 li
95.8413 105.779 96.9116 104.591 98.3213 104.443 cv
101.638 104.096 li
101.638 106.905 li
cp
.2 .243137 .258824 rgb
f
139.594 106.905 mo
145.391 107.513 li
145.391 107.196 li
145.391 105.779 144.321 104.591 142.912 104.443 cv
139.594 104.096 li
139.594 106.905 li
cp
f
102.912 80.6689 mo
110.216 77.1597 li
111.163 76.7051 111.764 75.7485 111.764 74.6987 cv
111.764 74.4385 111.525 74.2437 111.271 74.2964 cv
107.468 75.0791 li
104.815 75.6255 102.912 77.9604 102.912 80.6689 cv
cp
.388235 .466667 .517647 rgb
f
105.233 76.0747 mo
103.811 77.124 102.912 78.8081 102.912 80.6689 cv
105.233 79.5537 li
105.233 76.0747 li
cp
.878431 .741176 .396078 rgb
f
108.119 76.4282 mo
110.245 76.4282 li
110.245 75.6685 li
108.119 75.6685 li
108.119 76.4282 li
cp
.741176 .831373 .858824 rgb
f
105.739 77.8579 mo
107.866 77.8579 li
107.866 77.0986 li
105.739 77.0986 li
105.739 77.8579 li
cp
f
138.322 80.6689 mo
131.018 77.1597 li
130.071 76.7051 129.47 75.7485 129.47 74.6987 cv
129.47 74.4385 129.708 74.2437 129.963 74.2964 cv
133.766 75.0791 li
136.418 75.6255 138.322 77.9604 138.322 80.6689 cv
cp
.388235 .466667 .517647 rgb
f
136.001 76.0747 mo
137.423 77.124 138.322 78.8081 138.322 80.6689 cv
136.001 79.5537 li
136.001 76.0747 li
cp
.878431 .741176 .396078 rgb
f
133.115 76.4282 mo
130.989 76.4282 li
130.989 75.6685 li
133.115 75.6685 li
133.115 76.4282 li
cp
.741176 .831373 .858824 rgb
f
135.495 77.8579 mo
133.368 77.8579 li
133.368 77.0986 li
135.495 77.0986 li
135.495 77.8579 li
cp
f
111.885 76.4282 mo
110.341 100.185 li
109.131 100.076 li
111.885 76.4282 li
cp
.376471 .407843 .486275 rgb
f
129.376 76.4282 mo
132.13 100.076 li
130.92 100.185 li
129.376 76.4282 li
cp
f
128.571 171.455 mo
128.266 171.455 128.003 171.226 127.968 170.915 cv
127.931 170.582 128.171 170.281 128.504 170.244 cv
135.303 169.484 li
135.631 169.447 135.937 169.687 135.975 170.021 cv
136.012 170.354 135.771 170.654 135.438 170.692 cv
128.639 171.452 li
128.571 171.455 li
cp
.839216 0 .0352941 rgb
f
112.62 171.455 mo
112.552 171.452 li
105.753 170.692 li
105.419 170.654 105.179 170.354 105.216 170.021 cv
105.254 169.687 105.557 169.449 105.888 169.484 cv
112.687 170.244 li
113.02 170.281 113.26 170.582 113.223 170.915 cv
113.188 171.226 112.925 171.455 112.62 171.455 cv
cp
f
133.048 88.2876 mo
132.733 88.2876 132.582 88.4634 132.582 88.7544 cv
132.582 90.9497 li
132.582 91.2524 132.733 91.4165 133.048 91.4165 cv
134.076 91.4165 li
134.076 88.2876 li
133.048 88.2876 li
cp
135.663 92.77 mo
135.663 92.8872 135.593 92.9575 135.476 92.9575 cv
132.674 92.9575 li
131.578 92.9575 130.994 92.3735 130.994 91.2759 cv
130.994 88.4282 li
130.994 87.3423 131.578 86.7466 132.674 86.7466 cv
134.076 86.7466 li
134.076 83.8052 li
134.076 83.689 134.133 83.6187 134.262 83.6187 cv
135.476 83.6187 li
135.593 83.6187 135.663 83.689 135.663 83.8052 cv
135.663 92.77 li
cp
.909804 .917647 .917647 rgb
f
127.13 85.1245 mo
126.827 85.1245 126.664 85.2759 126.664 85.5913 cv
126.664 90.9839 li
126.664 91.2876 126.827 91.4517 127.13 91.4517 cv
127.807 91.4517 li
128.111 91.4517 128.275 91.2876 128.275 90.9839 cv
128.275 85.5913 li
128.275 85.2759 128.111 85.1245 127.807 85.1245 cv
127.13 85.1245 li
cp
129.827 91.2759 mo
129.827 92.3735 129.244 92.9575 128.146 92.9575 cv
126.838 92.9575 li
125.742 92.9575 125.158 92.3735 125.158 91.2759 cv
125.158 85.2993 li
125.158 84.2026 125.742 83.6187 126.838 83.6187 cv
128.146 83.6187 li
129.244 83.6187 129.827 84.2026 129.827 85.2993 cv
129.827 91.2759 li
cp
f
122.404 85.1597 mo
119.625 85.1597 li
119.497 85.1597 119.439 85.0894 119.439 84.9731 cv
119.439 83.8052 li
119.439 83.6772 119.497 83.6187 119.625 83.6187 cv
123.804 83.6187 li
123.921 83.6187 123.991 83.6772 123.991 83.8052 cv
123.991 92.77 li
123.991 92.8872 123.921 92.9575 123.804 92.9575 cv
122.59 92.9575 li
122.461 92.9575 122.404 92.8872 122.404 92.77 cv
122.404 85.1597 li
cp
f
117.104 92.9575 mo
116.987 92.9575 116.917 92.8872 116.917 92.77 cv
116.917 83.8052 li
116.917 83.689 116.987 83.6187 117.104 83.6187 cv
118.318 83.6187 li
118.447 83.6187 118.504 83.689 118.504 83.8052 cv
118.504 92.77 li
118.504 92.8872 118.447 92.9575 118.318 92.9575 cv
117.104 92.9575 li
cp
f
111.07 90.0151 mo
111.07 89.8989 111.14 89.8286 111.256 89.8286 cv
112.424 89.8286 li
112.552 89.8286 112.611 89.8989 112.611 90.0151 cv
112.611 90.9497 li
112.611 91.2524 112.774 91.4165 113.078 91.4165 cv
113.685 91.4165 li
114 91.4165 114.152 91.2524 114.152 90.9497 cv
114.152 85.6265 li
114.152 85.311 113.988 85.1597 113.685 85.1597 cv
113.078 85.1597 li
112.774 85.1597 112.611 85.311 112.611 85.6265 cv
112.611 86.5601 li
112.611 86.6772 112.552 86.7466 112.424 86.7466 cv
111.256 86.7466 li
111.14 86.7466 111.07 86.6772 111.07 86.5601 cv
111.07 85.2993 li
111.07 84.2026 111.666 83.6187 112.75 83.6187 cv
114.058 83.6187 li
115.156 83.6187 115.75 84.2026 115.75 85.2993 cv
115.75 91.2759 li
115.75 92.3735 115.156 92.9575 114.058 92.9575 cv
112.75 92.9575 li
111.666 92.9575 111.07 92.3735 111.07 91.2759 cv
111.07 90.0151 li
cp
f
105.246 91.603 mo
105.246 91.4858 105.292 91.4048 105.432 91.4048 cv
108.351 91.4048 li
108.351 89.0698 li
106.122 89.0698 li
106.004 89.0698 105.934 88.9995 105.934 88.8716 cv
105.934 87.7163 li
105.934 87.5874 106.004 87.5171 106.122 87.5171 cv
108.351 87.5171 li
108.351 85.1597 li
105.432 85.1597 li
105.292 85.1597 105.246 85.1011 105.246 84.9731 cv
105.246 83.8052 li
105.246 83.689 105.292 83.6187 105.432 83.6187 cv
109.728 83.6187 li
109.833 83.6187 109.903 83.689 109.903 83.8052 cv
109.903 92.77 li
109.903 92.8872 109.833 92.9575 109.728 92.9575 cv
105.432 92.9575 li
105.292 92.9575 105.246 92.8872 105.246 92.77 cv
105.246 91.603 li
cp
f
114.946 135.074 mo
114.549 135.074 114.336 135.288 114.336 135.683 cv
114.336 137.921 li
114.336 138.318 114.549 138.531 114.946 138.531 cv
115.798 138.531 li
116.195 138.531 116.408 138.318 116.408 137.921 cv
116.408 135.683 li
116.408 135.288 116.195 135.074 115.798 135.074 cv
114.946 135.074 li
cp
114.458 140.542 mo
113.073 140.542 112.327 139.794 112.327 138.409 cv
112.327 135.196 li
112.327 133.81 113.073 133.064 114.458 133.064 cv
116.286 133.064 li
117.671 133.064 118.417 133.81 118.417 135.196 cv
118.417 139.11 li
118.417 139.399 118.372 139.597 118.265 139.871 cv
116.103 145.018 li
116.042 145.17 115.935 145.247 115.752 145.247 cv
114.169 145.247 li
113.941 145.247 113.849 145.11 113.941 144.896 cv
115.783 140.542 li
114.458 140.542 li
cp
.2 .243137 .258824 rgb
f
123.031 133.064 mo
123.183 133.064 123.275 133.156 123.275 133.307 cv
123.275 145.002 li
123.275 145.155 123.183 145.247 123.031 145.247 cv
121.447 145.247 li
121.28 145.247 121.204 145.155 121.204 145.002 cv
121.204 135.378 li
120.259 135.5 li
120.061 135.531 119.94 135.424 119.94 135.226 cv
119.94 133.764 li
119.94 133.567 120.031 133.459 120.229 133.445 cv
123.031 133.064 li
cp
f
128.04 133.064 mo
128.192 133.064 128.284 133.156 128.284 133.307 cv
128.284 145.002 li
128.284 145.155 128.192 145.247 128.04 145.247 cv
126.456 145.247 li
126.289 145.247 126.212 145.155 126.212 145.002 cv
126.212 135.378 li
125.268 135.5 li
125.07 135.531 124.949 135.424 124.949 135.226 cv
124.949 133.764 li
124.949 133.567 125.04 133.459 125.238 133.445 cv
128.04 133.064 li
cp
f
114.46 71.5381 mo
110.746 71.5381 li
110.746 70.8276 li
110.746 70.146 111.299 69.5933 111.98 69.5933 cv
113.226 69.5933 li
113.908 69.5933 114.46 70.146 114.46 70.8276 cv
114.46 71.5381 li
cp
.388235 .466667 .517647 rgb
f
130.606 71.5381 mo
126.892 71.5381 li
126.892 70.8276 li
126.892 70.146 127.445 69.5933 128.126 69.5933 cv
129.372 69.5933 li
130.053 69.5933 130.606 70.146 130.606 70.8276 cv
130.606 71.5381 li
cp
f
124.228 74.9395 mo
127.829 75.1797 li
128.136 75.2002 128.402 74.9678 128.422 74.6606 cv
128.44 74.3955 li
128.461 74.0884 128.229 73.8223 127.921 73.8018 cv
124.319 73.5615 li
124.012 73.541 123.747 73.7734 123.726 74.0806 cv
123.708 74.3457 li
123.688 74.6533 123.92 74.9189 124.228 74.9395 cv
cp
1 0 0 rgb
f
116.817 74.9395 mo
113.216 75.1797 li
112.909 75.2002 112.643 74.9678 112.622 74.6606 cv
112.604 74.3955 li
112.584 74.0884 112.816 73.8223 113.124 73.8018 cv
116.726 73.5615 li
117.033 73.541 117.298 73.7734 117.319 74.0806 cv
117.336 74.3457 li
117.357 74.6533 117.125 74.9189 116.817 74.9395 cv
cp
0 .396078 1 rgb
f
131.453 125.74 mo
107.47 125.74 li
106.856 125.74 106.359 125.243 106.359 124.63 cv
106.359 121.228 li
106.359 120.615 106.856 120.118 107.47 120.118 cv
107.575 120.118 li
107.575 123.415 li
107.575 123.415 li
107.575 124.028 108.072 124.525 108.685 124.525 cv
115.991 124.525 li
124.952 124.525 li
132.562 124.525 li
132.562 124.63 li
132.562 125.243 132.065 125.74 131.453 125.74 cv
.694118 .72549 .741176 rgb
f
108.685 124.525 mo
132.667 124.525 li
133.281 124.525 133.778 124.028 133.778 123.415 cv
133.778 120.013 li
133.778 119.4 133.281 118.903 132.667 118.903 cv
108.685 118.903 li
108.072 118.903 107.575 119.4 107.575 120.013 cv
107.575 123.415 li
107.575 124.028 108.072 124.525 108.685 124.525 cv
.772549 0 0 rgb
f
120.826 118.903 mo
108.685 118.903 li
108.072 118.903 107.575 119.4 107.575 120.013 cv
107.575 123.415 li
107.575 124.028 108.072 124.525 108.685 124.525 cv
120.826 124.525 li
120.826 118.903 li
0 .270588 .839216 rgb
f
123.314 120.751 mo
123.314 122.728 li
131.955 122.728 li
131.955 120.751 li
123.314 120.751 li
1 0 0 rgb
f
117.644 120.751 mo
109.397 120.751 li
109.397 122.728 li
117.644 122.728 li
117.644 120.751 li
0 .701961 1 rgb
f
115.991 118.903 mo
115.991 124.525 li
124.952 124.525 li
124.952 118.903 li
115.991 118.903 li
.2 .243137 .258824 rgb
f
124.952 122.929 mo
115.991 122.929 li
115.991 120.499 li
124.952 120.499 li
124.952 120.751 li
124.952 122.728 li
124.952 122.929 li
.329412 .368627 .380392 rgb
f
186.517 435.021 mo
184.345 435.021 182.172 434.964 180 434.849 cv
180 427.696 li
184.197 428.124 188.395 428.338 192.593 428.338 cv
195.895 428.338 199.197 428.206 202.5 427.941 cv
202.5 433.656 li
201.848 433.96 201.142 434.157 200.398 434.241 cv
195.771 434.761 191.144 435.021 186.517 435.021 cv
178.305 427.5 mo
166.439 427.5 li
166.373 427.003 166.339 426.482 166.339 425.938 cv
165.889 420.71 165.667 413.505 165.594 405 cv
171.765 405 li
171.881 410.621 172.088 415.459 172.414 419.256 cv
172.414 423.903 174.916 426.918 178.305 427.5 cv
171.677 382.5 mo
165.666 382.5 li
165.712 378.454 165.772 374.286 165.841 370.041 cv
161.728 370.472 li
161.728 370.155 li
161.728 368.738 162.798 367.55 164.208 367.402 cv
165.888 367.226 li
165.928 364.836 165.971 362.425 166.016 360 cv
171.972 360 li
171.966 360.368 171.96 360.738 171.953 361.105 cv
171.953 361.105 li
171.832 368.281 171.734 375.257 171.682 381.831 cv
171.68 382.053 171.679 382.278 171.677 382.5 cv
172.394 337.5 mo
169.358 337.5 li
170.248 336.753 171.3 336.137 172.467 335.735 cv
172.432 335.982 172.414 336.228 172.414 336.471 cv
172.407 336.813 172.401 337.158 172.394 337.5 cv
.666667 .694118 .709804 rgb
f
171.972 360 mo
166.016 360 li
166.119 354.428 166.23 348.782 166.339 343.153 cv
166.339 341.207 167.492 339.066 169.358 337.5 cv
172.394 337.5 li
172.248 345.053 172.099 352.623 171.972 360 cv
.741176 .764706 .780392 rgb
f
171.765 405 mo
165.594 405 li
165.536 398.213 165.573 390.598 165.666 382.5 cv
171.677 382.5 li
171.615 390.793 171.629 398.431 171.765 405 cv
f
180 434.849 mo
177.545 434.72 175.091 434.517 172.636 434.241 cv
169.447 433.882 166.958 431.426 166.439 427.5 cv
178.305 427.5 li
178.439 427.523 178.575 427.542 178.711 427.558 cv
179.141 427.606 179.57 427.652 180 427.696 cv
180 434.849 li
f
202.5 433.656 mo
202.5 427.941 li
203.824 427.834 205.149 427.707 206.474 427.558 cv
206.512 427.553 206.551 427.549 206.59 427.544 cv
206.183 430.531 204.632 432.661 202.5 433.656 cv
f
206.474 427.558 mo
197.22 428.599 187.965 428.599 178.711 427.558 cv
175.118 427.154 172.414 424.087 172.414 419.256 cv
171.058 403.468 171.771 369.663 172.414 336.471 cv
172.414 333.198 175.674 329.373 180.105 328.66 cv
188.587 327.297 196.924 327.312 205.124 328.64 cv
209.538 329.355 212.771 333.187 212.771 336.443 cv
213.49 369.647 214.287 403.467 212.771 419.256 cv
212.771 424.087 210.067 427.154 206.474 427.558 cv
.231373 .556863 .858824 rgb
f
206.654 330.507 mo
207.479 330.67 207.835 329.482 207.054 329.173 cv
206.443 328.932 205.797 328.749 205.124 328.64 cv
196.924 327.313 188.587 327.297 180.105 328.66 cv
179.436 328.768 178.793 328.947 178.185 329.186 cv
177.402 329.491 177.754 330.682 178.579 330.521 cv
188.114 328.662 197.47 328.688 206.654 330.507 cv
cp
.388235 .466667 .517647 rgb
f
211.491 410.771 mo
213.516 404.089 li
213.764 392.289 213.589 377.198 213.286 361.105 cv
171.953 361.105 li
171.689 376.787 171.534 391.517 171.731 403.179 cv
173.751 410.771 li
211.491 410.771 li
.768627 .819608 .819608 rgb
f
211.491 410.771 mo
213.516 404.089 li
213.764 392.289 213.589 377.198 213.286 361.105 cv
171.953 361.105 li
171.689 376.787 171.534 391.517 171.731 403.179 cv
173.751 410.771 li
211.491 410.771 li
.72549 .843137 .811765 rgb
f
192.592 427.123 mo
188.032 427.123 184.015 426.863 179.455 426.351 cv
176.285 425.994 174.237 423.209 174.237 419.256 cv
173.629 411.53 li
173.629 359.283 li
174.844 337.687 li
174.844 335.066 177.583 331.707 181.513 331.075 cv
185.656 330.409 188.623 330.071 192.73 330.071 cv
196.794 330.071 199.684 330.402 203.715 331.055 cv
207.62 331.687 210.341 335.042 210.341 337.658 cv
211.556 359.283 li
211.556 411.53 li
210.949 419.256 li
210.949 423.209 208.9 425.994 205.73 426.351 cv
201.17 426.863 197.153 427.123 192.592 427.123 cv
.329412 .65098 .937255 rgb
f
173.6 359.283 mo
173.6 411.53 li
186.223 415.574 198.884 415.587 211.585 411.53 cv
211.585 359.283 li
198.923 353.613 186.262 353.613 173.6 359.283 cv
.2 .262745 .356863 rgb
f
205.916 390.779 mo
205.858 390.518 205.791 390.259 205.741 389.994 cv
205.627 389.381 205.676 388.786 205.846 388.235 cv
205.563 385.772 205.425 383.294 205.471 380.8 cv
205.481 380.239 205.605 379.741 205.808 379.302 cv
205.327 378.656 205.032 377.859 205.058 376.983 cv
205.04 376.643 205.063 376.283 205.143 375.902 cv
206.288 370.416 208.875 364.815 210.999 359.038 cv
204.81 356.353 198.622 355.012 192.433 355.035 cv
192.433 414.565 li
198.5 414.58 204.575 413.655 210.659 411.807 cv
208.549 408.333 206.371 404.777 205.297 400.926 cv
204.286 397.298 204.838 394.017 205.916 390.779 cv
.180392 .396078 .470588 rgb
f
179.682 374.62 mo
179.434 374.62 179.201 374.468 179.111 374.221 cv
173.693 359.39 li
173.578 359.075 173.74 358.727 174.055 358.611 cv
174.368 358.494 174.718 358.657 174.834 358.974 cv
180.252 373.805 li
180.367 374.119 180.205 374.468 179.89 374.583 cv
179.682 374.62 li
cp
.72549 .843137 .811765 rgb
f
174.485 412.314 mo
174.338 412.314 174.189 412.279 174.052 412.204 cv
173.609 411.965 173.445 411.411 173.685 410.969 cv
180.38 398.617 li
180.62 398.176 181.173 398.01 181.615 398.251 cv
182.058 398.49 182.222 399.044 181.982 399.486 cv
175.287 411.838 li
175.122 412.142 174.809 412.314 174.485 412.314 cv
cp
f
181.093 387.056 mo
173.6 387.056 li
173.6 385.233 li
181.093 385.233 li
181.093 387.056 li
cp
f
205.503 374.62 mo
205.294 374.583 li
204.979 374.468 204.817 374.118 204.933 373.804 cv
210.342 359.049 li
210.458 358.734 210.806 358.572 211.121 358.688 cv
211.436 358.803 211.598 359.152 211.482 359.467 cv
206.073 374.222 li
205.983 374.468 205.75 374.62 205.503 374.62 cv
cp
f
210.662 412.264 mo
210.338 412.264 210.024 412.091 209.86 411.786 cv
203.202 399.485 li
202.962 399.043 203.127 398.49 203.57 398.25 cv
204.012 398.011 204.565 398.175 204.805 398.618 cv
211.462 410.919 li
211.702 411.361 211.538 411.914 211.095 412.154 cv
210.957 412.229 210.809 412.264 210.662 412.264 cv
cp
f
211.585 387.056 mo
204.092 387.056 li
204.092 385.233 li
211.585 385.233 li
211.585 387.056 li
cp
f
192.578 406.063 mo
187.699 406.063 182.759 405.401 177.853 404.095 cv
177.853 370.019 li
182.777 368.134 187.724 367.181 192.592 367.181 cv
197.461 367.181 202.408 368.134 207.332 370.019 cv
207.332 404.093 li
202.41 405.4 197.46 406.063 192.579 406.063 cv
192.578 406.063 li
.890196 .917647 .886275 rgb
f
173.6 363.182 mo
167.803 363.789 li
167.803 363.473 li
167.803 362.056 168.874 360.867 170.283 360.72 cv
173.6 360.372 li
173.6 363.182 li
cp
.2 .243137 .258824 rgb
f
211.556 363.182 mo
217.353 363.789 li
217.353 363.473 li
217.353 362.056 216.283 360.867 214.873 360.72 cv
211.556 360.372 li
211.556 363.182 li
cp
f
174.874 336.944 mo
182.178 333.436 li
183.125 332.981 183.726 332.024 183.726 330.975 cv
183.726 330.714 183.487 330.52 183.232 330.572 cv
179.43 331.355 li
176.777 331.901 174.874 334.236 174.874 336.944 cv
cp
.388235 .466667 .517647 rgb
f
177.195 332.351 mo
175.772 333.399 174.874 335.084 174.874 336.944 cv
177.195 335.83 li
177.195 332.351 li
cp
.878431 .741176 .396078 rgb
f
180.08 332.704 mo
182.207 332.704 li
182.207 331.944 li
180.08 331.944 li
180.08 332.704 li
cp
.741176 .831373 .858824 rgb
f
177.701 334.134 mo
179.827 334.134 li
179.827 333.374 li
177.701 333.374 li
177.701 334.134 li
cp
f
210.284 336.944 mo
202.979 333.436 li
202.033 332.981 201.431 332.024 201.431 330.975 cv
201.431 330.714 201.67 330.52 201.925 330.572 cv
205.728 331.355 li
208.38 331.901 210.284 334.236 210.284 336.944 cv
cp
.388235 .466667 .517647 rgb
f
207.963 332.351 mo
209.385 333.399 210.284 335.084 210.284 336.944 cv
207.963 335.83 li
207.963 332.351 li
cp
.878431 .741176 .396078 rgb
f
205.077 332.704 mo
202.951 332.704 li
202.951 331.944 li
205.077 331.944 li
205.077 332.704 li
cp
.741176 .831373 .858824 rgb
f
207.457 334.134 mo
205.33 334.134 li
205.33 333.374 li
207.457 333.374 li
207.457 334.134 li
cp
f
183.847 332.704 mo
182.303 356.461 li
181.093 356.352 li
183.847 332.704 li
cp
.231373 .556863 .858824 rgb
f
201.338 332.704 mo
204.092 356.352 li
202.882 356.461 li
201.338 332.704 li
cp
f
200.533 427.73 mo
200.228 427.73 199.964 427.501 199.93 427.19 cv
199.893 426.857 200.133 426.557 200.466 426.52 cv
207.265 425.761 li
207.588 425.713 207.898 425.963 207.936 426.297 cv
207.973 426.63 207.733 426.931 207.399 426.968 cv
200.601 427.727 li
200.533 427.73 li
cp
.839216 0 .0352941 rgb
f
184.582 427.73 mo
184.513 427.727 li
177.715 426.968 li
177.381 426.931 177.141 426.63 177.178 426.297 cv
177.215 425.963 177.521 425.715 177.85 425.761 cv
184.648 426.52 li
184.981 426.557 185.222 426.857 185.185 427.19 cv
185.15 427.501 184.887 427.73 184.582 427.73 cv
cp
f
205.01 344.564 mo
204.695 344.564 204.543 344.739 204.543 345.031 cv
204.543 347.226 li
204.543 347.529 204.695 347.692 205.01 347.692 cv
206.037 347.692 li
206.037 344.564 li
205.01 344.564 li
cp
207.625 349.047 mo
207.625 349.163 207.555 349.233 207.438 349.233 cv
204.637 349.233 li
203.54 349.233 202.956 348.649 202.956 347.553 cv
202.956 344.704 li
202.956 343.618 203.54 343.023 204.637 343.023 cv
206.037 343.023 li
206.037 340.082 li
206.037 339.965 206.096 339.895 206.224 339.895 cv
207.438 339.895 li
207.555 339.895 207.625 339.965 207.625 340.082 cv
207.625 349.047 li
cp
.890196 .917647 .886275 rgb
f
199.092 341.4 mo
198.789 341.4 198.625 341.553 198.625 341.867 cv
198.625 347.261 li
198.625 347.563 198.789 347.728 199.092 347.728 cv
199.77 347.728 li
200.073 347.728 200.236 347.563 200.236 347.261 cv
200.236 341.867 li
200.236 341.553 200.073 341.4 199.77 341.4 cv
199.092 341.4 li
cp
201.789 347.553 mo
201.789 348.649 201.205 349.233 200.108 349.233 cv
198.801 349.233 li
197.704 349.233 197.12 348.649 197.12 347.553 cv
197.12 341.576 li
197.12 340.479 197.704 339.895 198.801 339.895 cv
200.108 339.895 li
201.205 339.895 201.789 340.479 201.789 341.576 cv
201.789 347.553 li
cp
f
194.365 341.436 mo
191.587 341.436 li
191.459 341.436 191.4 341.365 191.4 341.249 cv
191.4 340.082 li
191.4 339.953 191.459 339.895 191.587 339.895 cv
195.766 339.895 li
195.883 339.895 195.953 339.953 195.953 340.082 cv
195.953 349.047 li
195.953 349.163 195.883 349.233 195.766 349.233 cv
194.552 349.233 li
194.424 349.233 194.365 349.163 194.365 349.047 cv
194.365 341.436 li
cp
f
189.066 349.233 mo
188.949 349.233 188.879 349.163 188.879 349.047 cv
188.879 340.082 li
188.879 339.965 188.949 339.895 189.066 339.895 cv
190.28 339.895 li
190.408 339.895 190.467 339.965 190.467 340.082 cv
190.467 349.047 li
190.467 349.163 190.408 349.233 190.28 349.233 cv
189.066 349.233 li
cp
f
183.031 346.292 mo
183.031 346.175 183.102 346.104 183.218 346.104 cv
184.385 346.104 li
184.514 346.104 184.572 346.175 184.572 346.292 cv
184.572 347.226 li
184.572 347.529 184.736 347.692 185.039 347.692 cv
185.646 347.692 li
185.961 347.692 186.113 347.529 186.113 347.226 cv
186.113 341.902 li
186.113 341.587 185.95 341.436 185.646 341.436 cv
185.039 341.436 li
184.736 341.436 184.572 341.587 184.572 341.902 cv
184.572 342.836 li
184.572 342.953 184.514 343.023 184.385 343.023 cv
183.218 343.023 li
183.102 343.023 183.031 342.953 183.031 342.836 cv
183.031 341.576 li
183.031 340.479 183.626 339.895 184.712 339.895 cv
186.02 339.895 li
187.117 339.895 187.712 340.479 187.712 341.576 cv
187.712 347.553 li
187.712 348.649 187.117 349.233 186.02 349.233 cv
184.712 349.233 li
183.626 349.233 183.031 348.649 183.031 347.553 cv
183.031 346.292 li
cp
f
177.207 347.879 mo
177.207 347.763 177.254 347.681 177.394 347.681 cv
180.312 347.681 li
180.312 345.346 li
178.083 345.346 li
177.966 345.346 177.896 345.276 177.896 345.147 cv
177.896 343.992 li
177.896 343.863 177.966 343.794 178.083 343.794 cv
180.312 343.794 li
180.312 341.436 li
177.394 341.436 li
177.254 341.436 177.207 341.377 177.207 341.249 cv
177.207 340.082 li
177.207 339.965 177.254 339.895 177.394 339.895 cv
181.689 339.895 li
181.794 339.895 181.865 339.965 181.865 340.082 cv
181.865 349.047 li
181.865 349.163 181.794 349.233 181.689 349.233 cv
177.394 349.233 li
177.254 349.233 177.207 349.163 177.207 349.047 cv
177.207 347.879 li
cp
f
183.303 420.016 mo
183.531 420.016 183.64 419.889 183.64 419.678 cv
183.64 418.092 li
183.64 417.872 183.531 417.754 183.303 417.754 cv
182.56 417.754 li
182.56 420.016 li
183.303 420.016 li
cp
181.413 416.775 mo
181.548 416.64 li
183.573 416.64 li
184.366 416.64 184.788 417.063 184.788 417.855 cv
184.788 419.914 li
184.788 420.699 184.366 421.129 183.573 421.129 cv
182.56 421.129 li
182.56 423.256 li
182.56 423.34 182.518 423.391 182.425 423.391 cv
181.548 423.391 li
181.413 423.256 li
181.413 416.775 li
cp
f
187.584 422.302 mo
187.804 422.302 187.922 422.192 187.922 421.965 cv
187.922 418.066 li
187.922 417.847 187.804 417.729 187.584 417.729 cv
187.095 417.729 li
186.875 417.729 186.757 417.847 186.757 418.066 cv
186.757 421.965 li
186.757 422.192 186.875 422.302 187.095 422.302 cv
187.584 422.302 li
cp
185.635 417.855 mo
185.635 417.063 186.057 416.64 186.851 416.64 cv
187.795 416.64 li
188.588 416.64 189.011 417.063 189.011 417.855 cv
189.011 422.176 li
189.011 422.969 188.588 423.391 187.795 423.391 cv
186.851 423.391 li
186.057 423.391 185.635 422.969 185.635 422.176 cv
185.635 417.855 li
cp
f
191.005 422.276 mo
193.013 422.276 li
193.106 422.276 193.148 422.327 193.148 422.412 cv
193.148 423.256 li
193.148 423.349 193.106 423.391 193.013 423.391 cv
189.993 423.391 li
189.908 423.391 189.857 423.349 189.857 423.256 cv
189.857 416.775 li
189.993 416.64 li
190.87 416.64 li
190.963 416.64 191.005 416.69 191.005 416.775 cv
191.005 422.276 li
cp
f
194.839 416.64 mo
194.974 416.775 li
194.974 423.256 li
194.839 423.391 li
193.962 423.391 li
193.869 423.391 193.827 423.34 193.827 423.256 cv
193.827 416.775 li
193.827 416.69 193.869 416.64 193.962 416.64 cv
194.839 416.64 li
cp
f
199.203 418.767 mo
199.068 418.901 li
198.224 418.901 li
198.131 418.901 198.089 418.851 198.089 418.767 cv
198.089 418.092 li
198.089 417.872 197.971 417.754 197.751 417.754 cv
197.313 417.754 li
197.085 417.754 196.976 417.872 196.976 418.092 cv
196.976 421.939 li
196.976 422.167 197.094 422.276 197.313 422.276 cv
197.751 422.276 li
197.971 422.276 198.089 422.167 198.089 421.939 cv
198.089 421.265 li
198.089 421.18 198.131 421.129 198.224 421.129 cv
199.068 421.129 li
199.203 421.265 li
199.203 422.176 li
199.203 422.969 198.773 423.391 197.988 423.391 cv
197.043 423.391 li
196.25 423.391 195.819 422.969 195.819 422.176 cv
195.819 417.855 li
195.819 417.063 196.25 416.64 197.043 416.64 cv
197.988 416.64 li
198.773 416.64 199.203 417.063 199.203 417.855 cv
199.203 418.767 li
cp
f
203.417 417.619 mo
203.417 417.703 203.383 417.763 203.282 417.763 cv
201.172 417.763 li
201.172 419.45 li
202.784 419.45 li
202.869 419.45 202.919 419.501 202.919 419.594 cv
202.919 420.429 li
202.919 420.521 202.869 420.572 202.784 420.572 cv
201.172 420.572 li
201.172 422.276 li
203.282 422.276 li
203.383 422.276 203.417 422.319 203.417 422.412 cv
203.417 423.256 li
203.417 423.34 203.383 423.391 203.282 423.391 cv
200.177 423.391 li
200.05 423.256 li
200.05 416.775 li
200.177 416.64 li
203.282 416.64 li
203.383 416.64 203.417 416.69 203.417 416.775 cv
203.417 417.619 li
cp
f
186.422 327.813 mo
182.708 327.813 li
182.708 327.104 li
182.708 326.422 183.261 325.869 183.942 325.869 cv
185.188 325.869 li
185.869 325.869 186.422 326.422 186.422 327.104 cv
186.422 327.813 li
cp
.388235 .466667 .517647 rgb
f
202.568 327.813 mo
198.854 327.813 li
198.854 327.104 li
198.854 326.422 199.406 325.869 200.088 325.869 cv
201.333 325.869 li
202.015 325.869 202.568 326.422 202.568 327.104 cv
202.568 327.813 li
cp
f
203.551 383.839 mo
179.568 383.839 li
178.956 383.839 178.458 383.342 178.458 382.729 cv
178.458 379.326 li
178.458 378.713 178.956 378.216 179.568 378.216 cv
179.673 378.216 li
179.673 381.514 li
179.673 381.514 li
179.673 382.127 180.17 382.623 180.784 382.623 cv
188.09 382.623 li
197.051 382.623 li
204.662 382.623 li
204.662 382.729 li
204.662 383.342 204.164 383.839 203.551 383.839 cv
.678431 .72549 .717647 rgb
f
180.784 382.623 mo
204.767 382.623 li
205.379 382.623 205.876 382.127 205.876 381.514 cv
205.876 378.111 li
205.876 377.498 205.379 377.001 204.767 377.001 cv
180.784 377.001 li
180.17 377.001 179.673 377.498 179.673 378.111 cv
179.673 381.514 li
179.673 382.127 180.17 382.623 180.784 382.623 cv
.772549 0 0 rgb
f
195.413 378.823 mo
195.413 380.801 li
204.054 380.801 li
204.054 378.823 li
195.413 378.823 li
1 0 0 rgb
f
192.925 377.001 mo
180.784 377.001 li
180.17 377.001 179.673 377.498 179.673 378.111 cv
179.673 381.514 li
179.673 382.127 180.17 382.623 180.784 382.623 cv
192.925 382.623 li
192.925 377.001 li
0 .270588 .839216 rgb
f
189.743 378.823 mo
181.496 378.823 li
181.496 380.801 li
189.743 380.801 li
189.743 378.823 li
0 .701961 1 rgb
f
188.09 377.001 mo
188.09 382.623 li
197.051 382.623 li
197.051 377.001 li
188.09 377.001 li
.2 .243137 .258824 rgb
f
197.051 381.002 mo
188.09 381.002 li
188.09 378.572 li
197.051 378.572 li
197.051 378.823 li
197.051 380.801 li
197.051 381.002 li
.329412 .368627 .380392 rgb
f
112.5 307.736 mo
108.458 307.679 104.416 307.423 100.374 306.969 cv
97.4765 306.643 95.1602 304.584 94.3701 301.268 cv
94.2084 301.195 94.0037 297.714 93.8135 292.5 cv
112.5 292.5 li
112.5 270 li
93.2996 270 li
93.1959 260.921 93.2291 252.194 93.5254 247.5 cv
112.5 247.5 li
112.5 225 li
93.7245 225 li
93.8874 221.129 94.071 218.002 94.2012 217.201 cv
94.8242 214.224 97.8311 211.134 101.768 210.501 cv
105.371 209.922 108.949 209.592 112.5 209.505 cv
112.5 225 li
135 225 li
135 219.16 li
136.143 222.392 li
136.143 225 li
135 225 li
135 239.9 li
134.896 240.195 li
134.924 241.643 134.951 243.081 134.977 244.513 cv
134.985 244.51 134.992 244.507 135 244.505 cv
135 247.5 li
135.031 247.5 li
135.148 254.283 135.236 262.417 135.275 270 cv
135 270 li
135 292.5 li
136.143 292.5 li
136.143 295.599 li
135 298.83 li
135 292.5 li
112.5 292.5 li
112.5 307.736 li
112.5 247.5 mo
112.5 270 li
135 270 li
135 247.5 li
112.5 247.5 li
139.71 247.655 mo
138.229 247.5 li
139.71 247.5 li
139.71 247.655 li
90 247.539 mo
90 247.5 li
88.8911 247.5 li
88.8911 247.338 li
88.8911 246.438 89.3233 245.629 90 245.122 cv
90 247.5 li
90.3715 247.5 li
90 247.539 li
.666667 .694118 .709804 rgb
f
135 225 mo
112.5 225 li
112.5 209.505 li
113.132 209.49 113.763 209.482 114.393 209.482 cv
118.559 209.482 122.689 209.818 126.786 210.481 cv
130.735 211.12 133.732 214.255 134.32 217.24 cv
135 219.16 li
135 225 li
.741176 .764706 .780392 rgb
f
88.8911 247.655 mo
88.8911 247.5 li
90 247.5 li
90 247.539 li
88.8911 247.655 li
f
112.5 247.5 mo
93.5254 247.5 li
93.5325 247.387 93.5399 247.275 93.5473 247.167 cv
90.3715 247.5 li
90 247.5 li
90 245.122 li
90.3882 244.831 90.8569 244.639 91.3707 244.585 cv
92.9121 244.424 li
92.9697 244.418 93.0269 244.415 93.0834 244.415 cv
93.26 244.415 93.4306 244.444 93.5904 244.497 cv
93.1557 243.471 93.3985 232.746 93.7245 225 cv
112.5 225 li
112.5 247.5 li
f
135 270 mo
112.5 270 li
112.5 247.5 li
135 247.5 li
135 270 li
f
139.71 247.5 mo
138.229 247.5 li
135.025 247.164 li
135.027 247.276 135.029 247.387 135.031 247.5 cv
135 247.5 li
135 244.505 li
135.165 244.447 135.341 244.415 135.524 244.415 cv
135.578 244.415 135.633 244.418 135.688 244.424 cv
137.23 244.585 li
138.639 244.732 139.71 245.921 139.71 247.338 cv
139.71 247.5 li
135 239.9 mo
135 225 li
136.143 225 li
136.143 236.669 li
135 239.9 li
f
112.5 292.5 mo
93.8135 292.5 li
93.593 286.458 93.392 278.09 93.2996 270 cv
112.5 270 li
112.5 292.5 li
f
114.255 307.749 mo
113.67 307.749 113.085 307.745 112.5 307.736 cv
112.5 292.5 li
135 292.5 li
135 298.83 li
134.145 301.244 li
133.361 304.575 131.04 306.643 128.136 306.969 cv
123.509 307.489 118.882 307.749 114.255 307.749 cv
f
136.143 292.5 mo
135 292.5 li
135 270 li
135.275 270 li
135.307 276.317 135.304 282.252 135.253 286.703 cv
136.143 289.22 li
136.143 292.5 li
f
134.211 300.894 mo
124.957 301.934 115.703 301.934 106.449 300.894 cv
102.855 300.489 100.151 297.422 100.151 292.591 cv
98.7949 276.803 99.5083 245.429 100.151 212.236 cv
100.151 208.964 103.412 205.138 107.843 204.426 cv
116.325 203.063 124.662 203.078 132.861 204.406 cv
137.275 205.12 140.508 208.953 140.508 212.208 cv
141.227 245.413 142.025 276.802 140.508 292.591 cv
140.508 297.422 137.805 300.489 134.211 300.894 cv
cp
.631373 .768627 .505882 rgb
f
101.367 293.806 mo
101.367 284.865 li
101.367 238.086 li
101.125 231.484 101.363 221.637 101.974 214.667 cv
101.974 212.047 104.713 208.688 108.643 208.055 cv
112.786 207.39 116.361 207.052 120.467 207.052 cv
124.532 207.052 128.029 207.383 132.06 208.035 cv
135.965 208.667 138.686 212.022 138.686 214.639 cv
139.422 220.807 139.526 230.764 139.293 238.086 cv
139.322 284.865 li
139.293 293.806 li
139.293 299.4 101.367 299.4 101.367 293.806 cv
cp
.713726 .898039 .52549 rgb
f
103.584 237.143 mo
103.294 237.143 103.009 237.005 102.833 236.748 cv
102.547 236.333 102.653 235.766 103.067 235.48 cv
111.936 229.386 128.294 229.323 137.387 235.352 cv
137.807 235.63 137.921 236.195 137.644 236.615 cv
137.365 237.033 136.799 237.147 136.38 236.871 cv
127.976 231.301 112.289 231.355 104.1 236.982 cv
103.942 237.091 103.762 237.143 103.584 237.143 cv
cp
.631373 .768627 .505882 rgb
f
101.338 238.086 mo
101.338 292.764 li
113.961 296.808 126.622 296.819 139.322 292.764 cv
139.322 238.086 li
131.094 229.857 109.843 229.581 101.338 238.086 cv
cp
.2 .262745 .356863 rgb
f
139.267 287.65 mo
138.899 287.557 138.562 287.435 138.243 287.296 cv
137.192 287.296 li
137.192 286.709 li
132.675 283.527 134.236 266.911 133.862 262.286 cv
133.476 257.519 132.806 254.709 134.255 250.045 cv
135.132 247.224 136.016 244.178 137.192 241.329 cv
137.192 240.313 li
137.626 240.313 li
137.873 239.763 138.132 239.222 138.408 238.693 cv
138.408 237.255 li
134.287 233.784 127.688 231.95 120.992 231.823 cv
120.992 295.787 li
127.093 295.718 133.203 294.718 139.322 292.764 cv
139.322 287.659 li
139.267 287.65 li
cp
.180392 .396078 .470588 rgb
f
107.419 253.424 mo
107.171 253.424 106.938 253.271 106.849 253.024 cv
101.301 237.787 li
101.187 237.472 101.349 237.123 101.664 237.008 cv
101.981 236.896 102.328 237.057 102.443 237.371 cv
107.99 252.608 li
108.105 252.924 107.942 253.272 107.627 253.388 cv
107.419 253.424 li
cp
.631373 .768627 .505882 rgb
f
108.831 265.251 mo
101.338 265.251 li
101.338 263.429 li
108.831 263.429 li
108.831 265.251 li
cp
f
133.241 253.424 mo
133.033 253.388 li
132.717 253.272 132.555 252.924 132.67 252.608 cv
138.221 237.375 li
138.336 237.061 138.685 236.9 139 237.012 cv
139.315 237.127 139.478 237.476 139.363 237.791 cv
133.812 253.024 li
133.722 253.271 133.489 253.424 133.241 253.424 cv
cp
f
139.322 292.764 mo
131.721 279.917 li
133.016 275.246 li
139.318 283.397 li
139.44 285.782 139.424 290.138 139.322 292.764 cv
cp
f
101.182 292.764 mo
108.783 279.917 li
107.489 275.246 li
101.186 283.397 li
101.182 292.764 li
cp
f
139.322 265.251 mo
131.83 265.251 li
131.83 263.429 li
139.322 263.429 li
139.322 265.251 li
cp
f
120.315 285.474 mo
116.656 285.474 112.963 285.102 109.275 284.364 cv
107.133 283.936 105.59 282.05 105.59 279.864 cv
105.59 250.752 li
105.59 249.575 106.342 248.525 107.457 248.152 cv
111.763 246.712 116.076 245.984 120.33 245.984 cv
124.583 245.984 128.897 246.712 133.203 248.152 cv
134.318 248.525 135.07 249.575 135.07 250.752 cv
135.07 279.86 li
135.07 282.047 133.526 283.933 131.383 284.361 cv
127.683 285.101 123.98 285.474 120.316 285.474 cv
120.315 285.474 li
cp
.713726 .898039 .52549 rgb
f
100.763 240.972 mo
94.9663 241.579 li
94.9663 241.263 li
94.9663 239.846 96.0366 238.657 97.4458 238.51 cv
98.9873 238.349 li
99.9365 238.249 100.763 238.993 100.763 239.947 cv
100.763 240.972 li
cp
f
139.988 240.972 mo
145.785 241.579 li
145.785 241.263 li
145.785 239.846 144.714 238.657 143.305 238.51 cv
141.764 238.349 li
140.814 238.249 139.988 238.993 139.988 239.947 cv
139.988 240.972 li
cp
f
131.117 300.445 mo
131.117 299.477 130.303 298.707 129.337 298.77 cv
123.816 299.128 116.231 299.109 111.014 298.712 cv
110.058 298.64 109.247 299.397 109.247 300.356 cv
112.338 300.682 116.471 300.846 120.62 300.846 cv
124.372 300.846 128.124 300.711 131.117 300.445 cv
cp
f
131.771 207.329 mo
140.535 213.404 li
140.526 213.005 140.517 212.608 140.508 212.208 cv
140.508 208.953 137.275 205.12 132.861 204.406 cv
132.499 204.347 132.134 204.305 131.771 204.251 cv
131.771 207.329 li
cp
.576471 .701961 .713726 rgb
f
108.786 204.293 mo
108.472 204.336 108.158 204.375 107.843 204.426 cv
103.412 205.138 100.151 208.964 100.151 212.236 cv
100.144 212.627 100.136 213.015 100.129 213.404 cv
108.786 207.329 li
108.786 204.293 li
cp
f
137.39 211.225 mo
140.535 213.404 li
140.526 213.005 140.517 212.608 140.508 212.208 cv
140.508 210.232 139.313 208.048 137.39 206.473 cv
137.39 211.225 li
cp
.984314 .4 .243137 rgb
f
103.369 206.426 mo
101.388 208.004 100.151 210.224 100.151 212.236 cv
100.144 212.627 100.136 213.015 100.129 213.404 cv
103.369 211.13 li
103.369 206.426 li
cp
f
132.783 301.034 mo
132.783 301.034 li
133.259 300.986 133.735 300.947 134.211 300.894 cv
137.301 300.546 139.723 298.223 140.343 294.509 cv
135.377 296.903 li
133.791 297.668 132.783 299.273 132.783 301.034 cv
cp
.839216 0 .0352941 rgb
f
100.317 294.509 mo
100.937 298.223 103.359 300.546 106.449 300.894 cv
106.823 300.936 107.197 300.965 107.571 301.004 cv
107.571 300.981 li
107.571 299.248 106.593 297.663 105.044 296.884 cv
100.317 294.509 li
cp
f
137.137 296.055 mo
137.137 299.837 li
138.762 298.761 139.938 296.934 140.343 294.509 cv
137.137 296.055 li
cp
.984314 .4 .243137 rgb
f
103.318 296.017 mo
100.317 294.509 li
100.705 296.832 101.798 298.61 103.318 299.702 cv
103.318 296.017 li
cp
f
132.896 206.779 mo
132.94 206.406 133.789 206.2 134.791 206.319 cv
135.793 206.438 136.571 206.837 136.526 207.21 cv
136.482 207.583 135.633 207.789 134.631 207.67 cv
133.628 207.551 132.851 207.152 132.896 206.779 cv
cp
.47451 .533333 .552941 rgb
f
107.765 206.779 mo
107.72 206.406 106.872 206.2 105.869 206.319 cv
104.866 206.438 104.09 206.837 104.134 207.21 cv
104.178 207.583 105.027 207.789 106.029 207.67 cv
107.032 207.551 107.809 207.152 107.765 206.779 cv
cp
f
187.66 307.749 mo
185.107 307.749 182.553 307.67 180 307.511 cv
180 292.5 li
165.769 292.5 li
165.769 284.248 li
165.769 282.312 166.099 280.389 166.746 278.563 cv
166.717 275.686 166.707 272.864 166.71 270 cv
180 270 li
180 247.5 li
166.947 247.5 li
166.949 247.39 166.951 247.278 166.953 247.167 cv
163.776 247.5 li
162.296 247.5 li
162.296 247.338 li
162.296 245.921 163.366 244.732 164.775 244.585 cv
166.317 244.424 li
166.375 244.418 166.432 244.415 166.489 244.415 cv
166.665 244.415 166.835 244.444 166.995 244.497 cv
167.018 243.115 167.041 241.728 167.066 240.332 cv
166.207 237.907 165.769 235.354 165.769 232.782 cv
165.769 226.278 li
165.769 225.851 165.781 225.425 165.805 225 cv
180 225 li
180 209.872 li
182.613 209.611 185.212 209.482 187.798 209.482 cv
191.964 209.482 196.095 209.818 200.191 210.481 cv
201.006 210.613 201.779 210.851 202.5 211.172 cv
202.5 225 li
209.549 225 li
209.549 236.669 li
208.301 240.195 li
208.329 241.643 208.356 243.081 208.382 244.513 cv
208.554 244.45 208.738 244.415 208.929 244.415 cv
208.983 244.415 209.038 244.418 209.093 244.424 cv
210.635 244.585 li
212.044 244.732 213.115 245.921 213.115 247.338 cv
213.115 247.5 li
211.634 247.5 li
208.43 247.164 li
208.432 247.276 208.434 247.387 208.435 247.5 cv
202.5 247.5 li
202.5 270 li
208.68 270 li
208.712 276.317 208.709 282.252 208.658 286.703 cv
209.549 289.22 li
209.549 292.5 li
202.5 292.5 li
202.5 306.793 li
202.189 306.873 201.869 306.932 201.541 306.969 cv
196.914 307.489 192.287 307.749 187.66 307.749 cv
180 270 mo
180 292.5 li
202.5 292.5 li
202.5 270 li
180 270 li
180 225 mo
180 247.5 li
202.5 247.5 li
202.5 225 li
180 225 li
.666667 .694118 .709804 rgb
f
180 225 mo
165.805 225 li
165.926 222.862 166.35 220.75 167.066 218.728 cv
167.606 217.201 li
168.229 214.224 171.236 211.134 175.173 210.501 cv
176.787 210.242 178.396 210.032 180 209.872 cv
180 225 li
.741176 .764706 .780392 rgb
f
209.549 225 mo
202.5 225 li
202.5 211.172 li
205.273 212.407 207.258 214.871 207.726 217.24 cv
209.549 222.392 li
209.549 225 li
f
180 270 mo
166.71 270 li
166.72 263.163 166.813 256.094 166.947 247.5 cv
180 247.5 li
180 270 li
162.296 247.655 mo
162.296 247.5 li
163.776 247.5 li
162.296 247.655 li
f
202.5 247.5 mo
180 247.5 li
180 225 li
202.5 225 li
202.5 247.5 li
f
208.68 270 mo
202.5 270 li
202.5 247.5 li
208.435 247.5 li
208.553 254.283 208.642 262.417 208.68 270 cv
213.115 247.655 mo
211.634 247.5 li
213.115 247.5 li
213.115 247.655 li
f
180 307.511 mo
177.926 307.383 175.853 307.202 173.779 306.969 cv
170.881 306.643 168.565 304.584 167.775 301.268 cv
166.746 298.357 li
166.099 296.531 165.769 294.609 165.769 292.672 cv
165.769 292.5 li
180 292.5 li
180 307.511 li
f
202.5 292.5 mo
180 292.5 li
180 270 li
202.5 270 li
202.5 292.5 li
f
202.5 306.793 mo
202.5 292.5 li
209.549 292.5 li
209.549 295.599 li
207.551 301.244 li
206.855 304.199 204.949 306.16 202.5 306.793 cv
f
207.616 300.894 mo
198.362 301.934 189.108 301.934 179.854 300.894 cv
176.26 300.489 173.557 297.422 173.557 292.591 cv
172.2 276.803 172.914 245.429 173.557 212.236 cv
173.557 208.964 176.817 205.138 181.248 204.426 cv
189.729 203.063 198.067 203.078 206.267 204.406 cv
210.68 205.12 213.914 208.953 213.914 212.208 cv
214.632 245.413 215.43 276.802 213.914 292.591 cv
213.914 297.422 211.21 300.489 207.616 300.894 cv
cp
.898039 .192157 0 rgb
f
174.771 293.806 mo
174.771 284.865 li
174.771 238.086 li
174.53 231.484 174.769 221.637 175.379 214.667 cv
175.379 212.047 178.118 208.688 182.048 208.055 cv
186.191 207.39 189.767 207.052 193.873 207.052 cv
197.937 207.052 201.434 207.383 205.465 208.035 cv
209.37 208.667 212.091 212.022 212.091 214.639 cv
212.827 220.807 212.932 230.764 212.699 238.086 cv
212.728 284.865 li
212.699 293.806 li
212.699 299.4 174.771 299.4 174.771 293.806 cv
cp
1 .552941 .211765 rgb
f
174.743 238.086 mo
174.743 292.764 li
187.366 296.808 200.027 296.819 212.728 292.764 cv
212.728 238.086 li
204.499 229.857 183.249 229.581 174.743 238.086 cv
cp
.2 .262745 .356863 rgb
f
212.672 287.65 mo
212.305 287.557 211.967 287.435 211.647 287.296 cv
210.598 287.296 li
210.598 286.709 li
206.08 283.527 207.642 266.911 207.267 262.286 cv
206.88 257.519 206.478 254.975 207.927 250.312 cv
208.804 247.489 212.423 238.614 212.699 238.086 cv
211.813 237.255 li
207.692 233.784 201.094 231.95 194.397 231.823 cv
194.397 295.787 li
200.498 295.718 206.608 294.718 212.728 292.764 cv
212.728 287.659 li
212.672 287.65 li
cp
.180392 .396078 .470588 rgb
f
212.728 292.764 mo
205.126 279.917 li
206.421 275.246 li
212.723 283.397 li
213.115 283.397 213.115 292.764 212.728 292.764 cv
cp
.898039 .192157 0 rgb
f
174.587 292.764 mo
182.188 279.917 li
180.894 275.246 li
174.591 283.397 li
174.587 292.764 li
cp
f
193.721 287.296 mo
188.841 287.296 183.901 286.635 178.995 285.327 cv
178.995 252.444 li
178.995 250.223 180.441 248.237 182.574 247.617 cv
186.31 246.531 190.045 245.984 193.735 245.984 cv
197.425 245.984 201.16 246.531 204.896 247.617 cv
207.029 248.237 208.475 250.223 208.475 252.444 cv
208.475 285.325 li
203.553 286.634 198.603 287.296 193.721 287.296 cv
193.721 287.296 li
cp
1 .552941 .211765 rgb
f
174.168 240.972 mo
168.371 241.579 li
168.371 241.263 li
168.371 239.846 169.441 238.657 170.851 238.51 cv
172.393 238.349 li
173.342 238.249 174.168 238.993 174.168 239.947 cv
174.168 240.972 li
cp
f
213.393 240.972 mo
219.19 241.579 li
219.19 241.263 li
219.19 239.846 218.12 238.657 216.71 238.51 cv
215.168 238.349 li
214.22 238.249 213.393 238.993 213.393 239.947 cv
213.393 240.972 li
cp
f
173.994 236.669 mo
173.994 236.669 li
172.571 232.648 171.844 228.414 171.844 224.149 cv
171.844 222.761 li
171.844 218.496 172.571 214.262 173.994 210.241 cv
173.994 236.669 li
cp
.898039 .192157 0 rgb
f
213.474 236.669 mo
213.474 236.669 li
214.897 232.648 215.624 228.414 215.624 224.149 cv
215.624 222.761 li
215.624 218.496 214.897 214.262 213.474 210.241 cv
213.474 236.669 li
cp
f
173.994 295.599 mo
173.994 295.599 li
172.571 291.578 171.844 287.344 171.844 283.079 cv
171.844 281.69 li
171.844 277.426 172.571 273.192 173.994 269.171 cv
173.994 295.599 li
cp
f
213.474 295.599 mo
213.474 295.599 li
214.897 291.578 215.624 287.344 215.624 283.079 cv
215.624 281.69 li
215.624 277.426 214.897 273.192 213.474 269.171 cv
213.474 295.599 li
cp
f
204.522 298.634 mo
198.361 299.181 188.303 299.154 182.651 298.554 cv
182.651 300.356 li
185.743 300.682 189.875 300.846 194.025 300.846 cv
197.777 300.846 201.528 300.711 204.522 300.445 cv
204.522 298.634 li
cp
1 .552941 .211765 rgb
f
176.989 235.32 mo
176.892 235.32 176.797 235.274 176.738 235.188 cv
176.643 235.051 176.678 234.861 176.816 234.767 cv
185.352 228.898 201.701 228.84 210.457 234.644 cv
210.596 234.736 210.634 234.925 210.542 235.064 cv
210.449 235.203 210.26 235.241 210.121 235.149 cv
201.54 229.462 185.523 229.52 177.16 235.267 cv
176.989 235.32 li
cp
.898039 .192157 0 rgb
f
176.989 234.105 mo
176.892 234.105 176.797 234.06 176.738 233.974 cv
176.643 233.836 176.678 233.646 176.816 233.552 cv
185.352 227.683 201.701 227.625 210.457 233.429 cv
210.596 233.521 210.634 233.71 210.542 233.85 cv
210.449 233.988 210.26 234.026 210.121 233.935 cv
201.54 228.248 185.523 228.305 177.16 234.052 cv
176.989 234.105 li
cp
f
183.932 251.272 mo
190.498 249.735 197.063 249.735 203.629 251.272 cv
204.26 251.42 204.701 251.992 204.701 252.64 cv
204.701 255.033 li
204.701 255.809 204.073 256.438 203.297 256.438 cv
184.264 256.438 li
183.488 256.438 182.86 255.809 182.86 255.033 cv
182.86 252.64 li
182.86 251.992 183.301 251.42 183.932 251.272 cv
cp
.2 .262745 .356863 rgb
f
203.629 251.272 mo
200.522 250.545 197.416 250.166 194.309 250.127 cv
194.309 256.438 li
203.297 256.438 li
204.073 256.438 204.701 255.809 204.701 255.033 cv
204.701 252.64 li
204.701 251.992 204.26 251.42 203.629 251.272 cv
cp
.180392 .396078 .470588 rgb
f
176.287 210.025 mo
176.147 210.025 176.007 209.978 175.893 209.88 cv
175.638 209.663 175.606 209.279 175.824 209.024 cv
177.507 207.045 180.344 205.893 184.255 205.599 cv
184.588 205.574 184.881 205.825 184.906 206.159 cv
184.932 206.494 184.681 206.785 184.346 206.811 cv
180.771 207.08 178.215 208.089 176.75 209.811 cv
176.629 209.952 176.458 210.025 176.287 210.025 cv
cp
.0235294 .164706 .211765 rgb
f
177.869 207.35 mo
177.068 207.821 176.377 208.373 175.824 209.024 cv
175.606 209.279 175.638 209.663 175.893 209.88 cv
176.007 209.978 176.147 210.025 176.287 210.025 cv
176.458 210.025 176.629 209.952 176.75 209.811 cv
177.068 209.437 177.448 209.103 177.869 208.796 cv
177.869 207.35 li
cp
1 .513726 .152941 rgb
f
211.184 210.025 mo
211.323 210.025 211.463 209.978 211.578 209.88 cv
211.833 209.663 211.864 209.279 211.646 209.024 cv
209.963 207.045 207.126 205.893 203.215 205.599 cv
202.882 205.574 202.589 205.825 202.564 206.159 cv
202.538 206.494 202.789 206.785 203.124 206.811 cv
206.7 207.08 209.255 208.089 210.721 209.811 cv
210.841 209.952 211.012 210.025 211.184 210.025 cv
cp
.0235294 .164706 .211765 rgb
f
209.602 207.35 mo
210.402 207.821 211.093 208.373 211.646 209.024 cv
211.864 209.279 211.833 209.663 211.578 209.88 cv
211.463 209.978 211.323 210.025 211.184 210.025 cv
211.012 210.025 210.841 209.952 210.721 209.811 cv
210.402 209.437 210.022 209.103 209.602 208.796 cv
209.602 207.35 li
cp
1 .513726 .152941 rgb
f
212.096 297.082 mo
211.973 295.642 li
210.557 296.871 208.407 297.119 205.637 297.568 cv
205.305 297.622 205.08 297.934 205.134 298.265 cv
205.188 298.596 205.501 298.82 205.831 298.768 cv
208.948 298.262 210.853 298.033 212.096 297.082 cv
cp
.427451 .101961 .113725 rgb
f
175.218 297.082 mo
175.342 295.642 li
176.757 296.871 178.908 297.119 181.678 297.568 cv
182.009 297.622 182.234 297.934 182.181 298.265 cv
182.127 298.596 181.813 298.82 181.483 298.768 cv
178.366 298.262 176.462 298.033 175.218 297.082 cv
cp
f
402.563 317.39 mo
397.177 317.39 391.79 317.121 387.014 316.584 cv
385.621 316.427 384.358 315.883 383.324 315 cv
405 315 li
405 292.5 li
382.5 292.5 li
382.5 314.166 li
381.726 313.241 381.143 312.074 380.815 310.697 cv
380.815 310.697 380.679 302.973 380.514 292.5 cv
382.5 292.5 li
382.5 270 li
380.186 270 li
380.077 261.719 379.988 253.668 379.955 247.5 cv
382.5 247.5 li
382.5 225 li
380.578 225 li
380.617 224.324 380.641 223.91 380.641 223.91 cv
380.898 222.68 381.55 221.431 382.5 220.334 cv
382.5 225 li
405 225 li
405 215.966 li
409.122 216.057 413.15 216.395 416.72 216.973 cv
420.797 217.632 423.89 220.869 424.498 223.95 cv
424.869 225 li
405 225 li
405 247.5 li
425.145 247.5 li
425.092 247.649 li
425.121 249.143 425.148 250.628 425.176 252.105 cv
425.353 252.041 425.544 252.005 425.741 252.005 cv
425.797 252.005 425.853 252.008 425.91 252.014 cv
427.5 252.18 li
427.5 255.081 li
425.225 254.843 li
425.305 259.458 425.374 264.702 425.423 270 cv
405 270 li
405 292.5 li
425.488 292.5 li
425.481 293.618 425.472 294.675 425.461 295.663 cv
426.38 298.26 li
426.38 304.846 li
424.317 310.674 li
423.884 312.515 422.995 313.982 421.803 315 cv
405 315 li
405 317.371 li
404.189 317.384 403.376 317.39 402.563 317.39 cv
382.5 247.5 mo
382.5 270 li
405 270 li
405 247.5 li
382.5 247.5 li
.666667 .694118 .709804 rgb
f
405 225 mo
382.5 225 li
382.5 220.334 li
383.923 218.689 386.015 217.385 388.452 216.993 cv
392.833 216.289 397.789 215.941 402.706 215.941 cv
403.473 215.941 404.237 215.949 405 215.966 cv
405 225 li
.741176 .764706 .780392 rgb
f
382.5 247.5 mo
379.955 247.5 li
379.934 243.671 379.935 240.566 379.966 238.586 cv
375.159 239.09 li
375.159 238.764 li
375.159 237.301 376.264 236.073 377.719 235.921 cv
379.311 235.754 li
379.369 235.748 379.427 235.745 379.484 235.745 cv
379.668 235.745 379.845 235.775 380.011 235.83 cv
380.03 234.688 380.423 227.724 380.578 225 cv
382.5 225 li
382.5 247.5 li
f
405 270 mo
382.5 270 li
382.5 247.5 li
405 247.5 li
405 270 li
f
425.145 247.5 mo
405 247.5 li
405 225 li
424.869 225 li
426.38 229.27 li
426.38 244.008 li
425.145 247.5 li
f
430.062 255.35 mo
427.5 255.081 li
427.5 252.18 li
427.502 252.181 li
428.957 252.333 430.062 253.56 430.062 255.023 cv
430.062 255.35 li
f
382.5 292.5 mo
380.514 292.5 li
380.407 285.704 380.287 277.753 380.186 270 cv
382.5 270 li
382.5 292.5 li
f
405 315 mo
383.324 315 li
383.03 314.749 382.755 314.471 382.5 314.166 cv
382.5 292.5 li
405 292.5 li
405 315 li
f
425.488 292.5 mo
405 292.5 li
405 270 li
425.423 270 li
425.497 278.043 425.527 286.212 425.488 292.5 cv
f
405 317.371 mo
405 315 li
421.803 315 li
420.769 315.883 419.506 316.427 418.113 316.584 cv
414.057 317.04 409.562 317.303 405 317.371 cv
f
424.385 310.312 mo
414.831 311.386 402.839 311.386 393.285 310.312 cv
389.575 309.895 386.784 306.729 386.784 301.74 cv
385.384 285.441 386.12 253.052 386.784 218.785 cv
386.784 215.406 390.15 211.457 394.725 210.722 cv
403.48 209.314 414.526 209.33 422.991 210.701 cv
427.548 211.438 430.887 215.395 430.887 218.756 cv
431.628 253.035 432.452 285.44 430.887 301.74 cv
430.887 306.729 428.095 309.895 424.385 310.312 cv
cp
.741176 .192157 .603922 rgb
f
388.038 302.182 mo
388.038 292.952 li
388.038 244.658 li
387.789 237.843 388.035 227.677 388.666 220.481 cv
388.666 217.776 391.493 214.308 395.551 213.656 cv
399.828 212.968 404.331 212.62 408.57 212.62 cv
412.767 212.62 418.003 212.961 422.164 213.634 cv
426.195 214.288 429.005 217.751 429.005 220.452 cv
429.765 226.819 429.873 237.1 429.632 244.658 cv
429.662 292.952 li
429.632 302.182 li
429.632 307.958 388.038 307.958 388.038 302.182 cv
cp
.905882 .337255 .631373 rgb
f
388.009 229.212 mo
388.009 301.919 li
401.04 306.094 416.551 306.106 429.662 301.919 cv
429.662 229.212 li
421.167 220.717 396.79 220.431 388.009 229.212 cv
cp
.2 .262745 .356863 rgb
f
429.604 296.64 mo
429.226 296.544 428.877 296.417 428.547 296.273 cv
427.463 296.273 li
427.463 295.668 li
422.8 292.383 424.411 275.229 424.024 270.454 cv
423.626 265.533 423.21 246.647 424.706 241.833 cv
425.611 238.92 429.348 229.757 429.632 229.212 cv
428.718 228.354 li
424.463 224.771 416.025 222.877 409.112 222.746 cv
409.112 305.04 li
415.411 304.969 423.345 303.937 429.662 301.919 cv
429.662 296.649 li
429.604 296.64 li
cp
.180392 .396078 .470588 rgb
f
429.662 301.919 mo
421.814 291.095 li
423.151 256.193 li
429.657 256.479 li
430.062 256.479 430.062 301.919 429.662 301.919 cv
cp
.741176 .192157 .603922 rgb
f
393.787 242.755 mo
393.539 242.755 393.303 242.611 393.195 242.369 cv
387.294 228.98 li
387.15 228.653 387.299 228.272 387.625 228.128 cv
387.953 227.984 388.333 228.133 388.478 228.459 cv
394.379 241.848 li
394.522 242.175 394.374 242.556 394.048 242.7 cv
393.787 242.755 li
cp
f
423.694 242.755 mo
423.434 242.699 li
423.106 242.556 422.959 242.174 423.104 241.848 cv
429.01 228.464 li
429.154 228.136 429.538 227.99 429.861 228.133 cv
430.188 228.277 430.336 228.659 430.191 228.985 cv
424.285 242.369 li
424.179 242.611 423.942 242.755 423.694 242.755 cv
cp
f
387.848 301.919 mo
395.695 291.095 li
394.358 255.381 li
387.853 255.665 li
387.848 301.919 li
cp
f
408.414 298.713 mo
403.917 298.713 398.558 298.169 394.03 297.093 cv
393.068 296.863 392.398 295.987 392.398 294.999 cv
392.398 244.034 li
392.398 241.717 393.934 239.675 396.16 239.032 cv
399.995 237.924 404.642 237.365 408.429 237.365 cv
412.216 237.365 417.676 237.924 421.51 239.032 cv
423.736 239.675 425.271 241.717 425.271 244.034 cv
425.271 294.996 li
425.271 295.985 424.601 296.861 423.639 297.09 cv
419.097 298.168 412.914 298.713 408.414 298.713 cv
cp
.905882 .337255 .631373 rgb
f
387.415 232.191 mo
381.431 232.818 li
381.431 232.491 li
381.431 231.028 382.536 229.802 383.99 229.649 cv
385.582 229.482 li
386.563 229.38 387.415 230.148 387.415 231.134 cv
387.415 232.191 li
cp
.741176 .192157 .603922 rgb
f
430.349 232.191 mo
436.333 232.818 li
436.333 232.491 li
436.333 231.028 435.229 229.802 433.773 229.649 cv
432.182 229.482 li
431.202 229.38 430.349 230.148 430.349 231.134 cv
430.349 232.191 li
cp
f
421.191 307.979 mo
414.831 308.543 402.008 308.517 396.174 307.896 cv
396.174 309.758 li
399.364 310.093 404.444 310.262 408.729 310.262 cv
412.602 310.262 418.101 310.123 421.191 309.849 cv
421.191 307.979 li
cp
.905882 .337255 .631373 rgb
f
390.327 226.449 mo
390.198 226.449 390.071 226.388 389.992 226.273 cv
389.865 226.089 389.912 225.835 390.097 225.708 cv
399.036 219.565 418.193 219.499 427.369 225.58 cv
427.557 225.704 427.607 225.957 427.483 226.144 cv
427.358 226.331 427.107 226.382 426.92 226.258 cv
417.967 220.324 399.276 220.385 390.558 226.378 cv
390.327 226.449 li
cp
.741176 .192157 .603922 rgb
f
397.495 248.516 mo
404.273 246.929 413.491 246.929 420.27 248.516 cv
420.92 248.668 421.376 249.259 421.376 249.928 cv
421.376 252.398 li
421.376 253.199 420.727 253.848 419.927 253.848 cv
397.838 253.848 li
397.037 253.848 396.389 253.199 396.389 252.398 cv
396.389 249.928 li
396.389 249.259 396.844 248.668 397.495 248.516 cv
cp
.2 .262745 .356863 rgb
f
420.27 248.516 mo
417.062 247.765 412.229 247.373 409.021 247.333 cv
409.021 253.848 li
419.927 253.848 li
420.727 253.848 421.376 253.199 421.376 252.398 cv
421.376 249.928 li
421.376 249.259 420.92 248.668 420.27 248.516 cv
cp
.180392 .396078 .470588 rgb
f
397.495 271.144 mo
404.273 269.557 413.491 269.557 420.27 271.144 cv
420.92 271.296 421.376 271.887 421.376 272.556 cv
421.376 275.026 li
421.376 275.827 420.727 276.476 419.927 276.476 cv
397.838 276.476 li
397.037 276.476 396.389 275.827 396.389 275.026 cv
396.389 272.556 li
396.389 271.887 396.844 271.296 397.495 271.144 cv
cp
.2 .262745 .356863 rgb
f
420.27 271.144 mo
417.062 270.393 412.229 270.001 409.021 269.961 cv
409.021 276.476 li
419.927 276.476 li
420.727 276.476 421.376 275.827 421.376 275.026 cv
421.376 272.556 li
421.376 271.887 420.92 271.296 420.27 271.144 cv
cp
.180392 .396078 .470588 rgb
f
389.603 215.689 mo
389.458 215.689 389.313 215.64 389.195 215.54 cv
388.933 215.315 388.9 214.919 389.125 214.655 cv
390.863 212.613 393.791 211.423 397.829 211.12 cv
398.173 211.094 398.476 211.353 398.501 211.698 cv
398.527 212.043 398.269 212.344 397.923 212.371 cv
394.231 212.648 391.593 213.69 390.08 215.468 cv
389.956 215.614 389.779 215.689 389.603 215.689 cv
cp
.0235294 .164706 .211765 rgb
f
391.235 212.928 mo
390.409 213.414 389.696 213.983 389.125 214.655 cv
388.9 214.919 388.933 215.315 389.195 215.54 cv
389.313 215.64 389.458 215.689 389.603 215.689 cv
389.779 215.689 389.956 215.614 390.08 215.468 cv
390.409 215.082 390.801 214.737 391.235 214.42 cv
391.235 212.928 li
cp
1 .513726 .152941 rgb
f
428.068 215.689 mo
428.212 215.689 428.356 215.64 428.475 215.54 cv
428.738 215.315 428.77 214.919 428.546 214.655 cv
426.808 212.613 423.879 211.423 419.842 211.12 cv
419.497 211.094 419.195 211.353 419.169 211.698 cv
419.143 212.043 419.402 212.344 419.747 212.371 cv
423.438 212.648 426.077 213.69 427.59 215.468 cv
427.715 215.614 427.891 215.689 428.068 215.689 cv
cp
.0235294 .164706 .211765 rgb
f
426.435 212.928 mo
427.261 213.414 427.974 213.983 428.546 214.655 cv
428.77 214.919 428.738 215.315 428.475 215.54 cv
428.356 215.64 428.212 215.689 428.068 215.689 cv
427.891 215.689 427.715 215.614 427.59 215.468 cv
427.262 215.082 426.869 214.737 426.435 214.42 cv
426.435 212.928 li
cp
1 .513726 .152941 rgb
f
427.612 285.944 mo
428.697 285.944 li
429.229 285.944 429.662 285.513 429.662 284.979 cv
429.662 261.643 li
429.662 261.109 429.229 260.678 428.697 260.678 cv
427.612 260.678 li
427.079 260.678 426.647 261.109 426.647 261.643 cv
426.647 284.979 li
426.647 285.513 427.079 285.944 427.612 285.944 cv
cp
.2 .262745 .356863 rgb
f
389.198 285.944 mo
390.283 285.944 li
390.815 285.944 391.248 285.513 391.248 284.979 cv
391.248 261.643 li
391.248 261.109 390.815 260.678 390.283 260.678 cv
389.198 260.678 li
388.665 260.678 388.233 261.109 388.233 261.643 cv
388.233 284.979 li
388.233 285.513 388.665 285.944 389.198 285.944 cv
cp
f
423.254 308.709 mo
422.89 308.709 422.558 308.461 422.466 308.091 cv
422.357 307.655 422.624 307.214 423.06 307.106 cv
426.759 306.191 li
427.186 306.082 427.635 306.349 427.743 306.785 cv
427.852 307.221 427.585 307.662 427.149 307.77 cv
423.45 308.685 li
423.254 308.709 li
cp
.454902 0 .231373 rgb
f
394.249 308.709 mo
394.053 308.685 li
390.354 307.77 li
389.918 307.662 389.651 307.221 389.76 306.785 cv
389.868 306.349 390.316 306.085 390.744 306.191 cv
394.443 307.106 li
394.879 307.214 395.146 307.655 395.037 308.091 cv
394.945 308.461 394.613 308.709 394.249 308.709 cv
cp
f
44.9999 310.562 mo
44.9999 292.5 li
22.5 292.5 li
22.5 308.353 li
21.2256 307.336 20.2742 305.825 19.8174 303.907 cv
19.8174 303.907 19.7369 299.355 19.6248 292.5 cv
22.5 292.5 li
22.5 270 li
19.2801 270 li
19.1705 262.241 19.0698 254.289 19.0074 247.5 cv
22.5 247.5 li
22.5 225 li
19.2029 225 li
19.3888 221.512 19.643 217.119 19.643 217.119 cv
19.9827 215.496 21.0086 213.841 22.5 212.543 cv
22.5 225 li
44.9999 225 li
44.9999 209.203 li
48.7726 209.323 52.4409 209.651 55.7217 210.182 cv
59.7984 210.842 62.8921 214.078 63.5 217.16 cv
65.3823 222.478 li
65.3823 225 li
44.9999 225 li
44.9999 247.5 li
67.5 247.5 li
67.5 245.684 li
68.2205 246.05 68.7595 246.71 68.9685 247.5 cv
67.5 247.5 li
67.5 248.395 li
64.2271 248.052 li
64.3421 254.643 64.4318 262.517 64.4762 270 cv
44.9999 270 li
44.9999 292.5 li
65.3823 292.5 li
65.3823 298.055 li
63.3193 303.883 li
62.5092 307.321 60.1133 309.456 57.1152 309.793 cv
53.3553 310.216 49.218 310.472 44.9999 310.562 cv
22.5 247.5 mo
22.5 270 li
44.9999 270 li
44.9999 247.5 li
22.5 247.5 li
.666667 .694118 .709804 rgb
f
44.9999 225 mo
22.5 225 li
22.5 212.543 li
23.8326 211.384 25.5367 210.511 27.4546 210.203 cv
31.836 209.498 36.7911 209.15 41.7088 209.15 cv
42.8101 209.15 43.9092 209.168 44.9999 209.203 cv
44.9999 225 li
.741176 .764706 .780392 rgb
f
22.5 247.5 mo
19.0074 247.5 li
18.9437 240.566 18.92 234.848 18.9678 231.796 cv
14.1607 232.3 li
14.1607 231.973 li
14.1607 230.51 15.2656 229.283 16.7207 229.131 cv
18.312 228.964 li
18.3716 228.957 18.4308 228.954 18.4892 228.954 cv
18.6714 228.954 18.8474 228.985 19.0122 229.04 cv
19.0205 228.536 19.1015 226.903 19.2029 225 cv
22.5 225 li
22.5 247.5 li
f
44.9999 270 mo
22.5 270 li
22.5 247.5 li
44.9999 247.5 li
44.9999 270 li
f
67.5 247.5 mo
44.9999 247.5 li
44.9999 225 li
65.3823 225 li
65.3823 237.218 li
64.0932 240.858 li
64.1225 242.353 64.1509 243.837 64.1777 245.314 cv
64.3547 245.251 64.5441 245.215 64.7412 245.215 cv
64.7976 245.215 64.8546 245.218 64.9121 245.224 cv
66.5034 245.39 li
66.8604 245.427 67.1963 245.529 67.5 245.684 cv
67.5 247.5 li
f
69.0635 248.559 mo
67.5 248.395 li
67.5 247.5 li
68.9685 247.5 li
69.0305 247.734 69.0635 247.98 69.0635 248.232 cv
69.0635 248.559 li
f
22.5 292.5 mo
19.6248 292.5 li
19.5237 286.321 19.3968 278.27 19.2801 270 cv
22.5 270 li
22.5 292.5 li
f
41.5652 310.599 mo
36.1786 310.599 30.792 310.33 26.0151 309.793 cv
24.6997 309.645 23.5004 309.151 22.5 308.353 cv
22.5 292.5 li
44.9999 292.5 li
44.9999 310.562 li
43.8591 310.586 42.712 310.599 41.5652 310.599 cv
f
65.3823 292.5 mo
44.9999 292.5 li
44.9999 270 li
64.4762 270 li
64.5185 277.125 64.5198 283.896 64.4629 288.872 cv
65.3823 291.47 li
65.3823 292.5 li
f
63.3872 303.521 mo
53.8335 304.595 41.8408 304.595 32.2871 303.521 cv
28.5771 303.104 25.7861 299.938 25.7861 294.949 cv
24.3857 278.65 25.1221 246.261 25.7861 211.994 cv
25.7861 208.616 29.1519 204.666 33.7261 203.931 cv
42.4824 202.523 53.5283 202.54 61.9937 203.91 cv
66.5503 204.647 69.8882 208.604 69.8882 211.965 cv
70.6299 246.244 71.4536 278.649 69.8882 294.949 cv
69.8882 299.938 67.0967 303.104 63.3872 303.521 cv
cp
.631373 .603922 .603922 rgb
f
27.0405 295.392 mo
27.0405 286.161 li
27.0405 237.868 li
26.7905 231.052 27.0371 220.886 27.6675 213.69 cv
27.6675 210.986 30.4951 207.518 34.5527 206.865 cv
38.8296 206.177 43.3335 205.829 47.5723 205.829 cv
51.7681 205.829 57.0044 206.17 61.166 206.844 cv
65.1973 207.497 68.0068 210.96 68.0068 213.662 cv
68.7666 220.029 68.8745 230.309 68.6338 237.867 cv
68.6636 286.161 li
68.6338 295.392 li
68.6338 301.167 27.0405 301.167 27.0405 295.392 cv
cp
.768627 .8 .780392 rgb
f
27.0103 222.421 mo
27.0103 295.128 li
40.042 299.303 55.5522 299.315 68.6636 295.128 cv
68.6636 222.421 li
60.1685 213.926 35.7915 213.64 27.0103 222.421 cv
cp
.2 .262745 .356863 rgb
f
68.6064 289.85 mo
68.2271 289.753 67.8789 289.627 67.5488 289.483 cv
66.4648 289.483 li
66.4648 288.878 li
61.8013 285.593 63.4131 268.438 63.0264 263.664 cv
62.6274 258.742 62.2114 235.791 63.708 230.978 cv
64.6133 228.064 68.3501 222.966 68.6338 222.421 cv
67.7192 221.563 li
63.4648 217.98 55.0273 216.086 48.1138 215.956 cv
48.1138 298.25 li
54.4126 298.178 62.3462 297.146 68.6636 295.128 cv
68.6636 289.858 li
68.6064 289.85 li
cp
.180392 .396078 .470588 rgb
f
68.6636 295.128 mo
60.8164 284.305 li
62.1528 240.46 li
68.6592 240.745 li
69.0635 240.745 69.0635 295.128 68.6636 295.128 cv
cp
.631373 .603922 .603922 rgb
f
32.7891 231.898 mo
32.5752 231.898 32.3657 231.792 32.2427 231.598 cv
26.3413 222.275 li
26.1504 221.973 26.2397 221.574 26.5415 221.383 cv
26.8428 221.192 27.2412 221.282 27.4331 221.583 cv
33.3345 230.906 li
33.5254 231.208 33.436 231.607 33.1343 231.798 cv
33.0269 231.866 32.9072 231.898 32.7891 231.898 cv
cp
f
62.6963 231.898 mo
62.5776 231.898 62.458 231.866 62.3506 231.798 cv
62.0493 231.606 61.96 231.207 62.1509 230.906 cv
68.0562 221.587 li
68.2476 221.286 68.6475 221.198 68.9482 221.388 cv
69.2495 221.579 69.3389 221.978 69.1479 222.28 cv
63.2427 231.598 li
63.1196 231.792 62.9102 231.898 62.6963 231.898 cv
cp
f
26.8496 295.128 mo
34.6973 284.305 li
33.3604 240.46 li
26.854 240.745 li
26.8496 295.128 li
cp
f
47.4155 291.109 mo
42.3652 291.109 36.2261 290.423 31.4009 289.066 cv
31.4009 230.564 li
31.4009 229.954 31.7661 229.405 32.3286 229.167 cv
36.4868 227.402 42.6445 226.51 47.4307 226.51 cv
52.3877 226.51 60.208 227.467 63.5024 229.359 cv
63.978 229.633 64.2734 230.133 64.2734 230.681 cv
64.2734 289.053 li
59.6841 290.418 52.4834 291.109 47.4165 291.109 cv
47.4155 291.109 li
cp
.768627 .8 .780392 rgb
f
26.417 225.4 mo
20.4326 226.027 li
20.4326 225.701 li
20.4326 224.238 21.5376 223.011 22.9927 222.858 cv
24.584 222.692 li
25.564 222.589 26.417 223.357 26.417 224.343 cv
26.417 225.4 li
cp
.2 .262745 .356863 rgb
f
69.3506 225.4 mo
75.335 226.027 li
75.335 225.701 li
75.335 224.238 74.2305 223.011 72.7754 222.858 cv
71.1841 222.692 li
70.2041 222.589 69.3506 223.357 69.3506 224.343 cv
69.3506 225.4 li
cp
f
65.6494 262.081 mo
68.6636 262.081 li
68.6636 243.318 li
65.6494 243.318 li
65.6494 262.081 li
cp
f
27.2354 262.081 mo
30.2495 262.081 li
30.2495 243.318 li
27.2354 243.318 li
27.2354 262.081 li
cp
f
65.6494 281.516 mo
68.6636 285.581 li
68.6636 265.191 li
65.6494 265.191 li
65.6494 281.516 li
cp
f
27.2354 285.581 mo
30.2495 281.516 li
30.2495 265.191 li
27.2354 265.191 li
27.2354 285.581 li
cp
f
28.7427 210.456 mo
36.0469 206.947 li
36.9927 206.492 37.5947 205.536 37.5947 204.486 cv
37.5947 204.226 37.356 204.031 37.1011 204.083 cv
33.2988 204.866 li
30.646 205.413 28.7427 207.748 28.7427 210.456 cv
cp
.388235 .466667 .517647 rgb
f
31.0635 205.862 mo
29.6411 206.911 28.7427 208.596 28.7427 210.456 cv
31.0635 209.341 li
31.0635 205.862 li
cp
.878431 .741176 .396078 rgb
f
33.9492 206.215 mo
36.0752 206.215 li
36.0752 205.456 li
33.9492 205.456 li
33.9492 206.215 li
cp
.741176 .831373 .858824 rgb
f
31.5693 207.645 mo
33.6958 207.645 li
33.6958 206.886 li
31.5693 206.886 li
31.5693 207.645 li
cp
f
66.877 210.456 mo
59.5728 206.947 li
58.6265 206.492 58.0244 205.536 58.0244 204.486 cv
58.0244 204.226 58.2637 204.031 58.5181 204.083 cv
62.3208 204.866 li
64.9736 205.413 66.877 207.748 66.877 210.456 cv
cp
.388235 .466667 .517647 rgb
f
64.5562 205.862 mo
65.9785 206.911 66.877 208.596 66.877 210.456 cv
64.5562 209.341 li
64.5562 205.862 li
cp
.878431 .741176 .396078 rgb
f
61.6704 206.215 mo
59.5439 206.215 li
59.5439 205.456 li
61.6704 205.456 li
61.6704 206.215 li
cp
.741176 .831373 .858824 rgb
f
64.0498 207.645 mo
61.9233 207.645 li
61.9233 206.886 li
64.0498 206.886 li
64.0498 207.645 li
cp
f
58.2153 206.024 mo
59.5439 216.902 li
56.6201 206.341 li
58.2153 206.024 li
cp
.631373 .603922 .603922 rgb
f
38.8662 206.341 mo
35.9424 216.902 li
37.2715 206.024 li
38.8662 206.341 li
cp
f
62.1685 303.554 mo
62.1685 303.554 li
62.6445 303.506 63.1206 303.467 63.5967 303.414 cv
66.6865 303.066 69.1089 300.743 69.7285 297.029 cv
64.7627 299.423 li
63.1768 300.188 62.1685 301.793 62.1685 303.554 cv
cp
.839216 0 .0352941 rgb
f
25.9678 297.029 mo
26.5879 300.743 29.0098 303.066 32.0996 303.414 cv
32.4736 303.456 32.8477 303.485 33.2217 303.524 cv
33.2217 303.502 li
33.2217 301.769 32.2441 300.183 30.6948 299.404 cv
25.9678 297.029 li
cp
f
66.5225 298.575 mo
66.5225 302.357 li
68.1479 301.281 69.3237 299.454 69.7285 297.029 cv
66.5225 298.575 li
cp
.984314 .4 .243137 rgb
f
28.9688 298.537 mo
25.9678 297.029 li
26.3555 299.353 27.4487 301.131 28.9688 302.223 cv
28.9688 298.537 li
cp
f
67.5 165.854 mo
44.9999 165.854 li
44.9999 157.5 li
22.5 157.5 li
22.5 165.747 li
22.062 165.553 21.7563 165.115 21.7563 164.605 cv
21.7563 157.5 li
22.5 157.5 li
22.5 135 li
21.7563 135 li
21.7563 112.5 li
22.5 112.5 li
22.5 90 li
21.7563 90 li
21.7563 82.2139 li
21.7563 81.7041 22.062 81.2656 22.5 81.0717 cv
22.5 90 li
44.9999 90 li
44.9999 67.5 li
24.5661 67.5 li
24.5442 63.5551 24.5445 60.359 24.5762 58.3354 cv
22.5 58.5531 li
22.5 55.6521 li
23.9204 55.5035 li
23.9797 55.4972 24.0386 55.4941 24.0969 55.4941 cv
24.2791 55.4941 24.4552 55.5241 24.6206 55.5796 cv
24.6388 54.4705 25.01 47.8771 25.1741 44.9999 cv
44.9999 44.9999 li
44.9999 35.7158 li
45.7714 35.6986 46.5435 35.6901 47.3155 35.6901 cv
52.226 35.6901 57.1002 36.0369 61.3295 36.7217 cv
63.9052 37.1384 66.0882 38.5834 67.5 40.368 cv
67.5 44.9999 li
69.5682 44.9999 li
70.9902 49.018 li
70.9902 63.7569 li
69.7017 67.3979 li
69.7023 67.4319 69.703 67.466 69.7037 67.5 cv
67.5 67.5 li
67.5 90 li
69.9917 90 li
70.0383 96.9182 70.0737 104.9 70.0945 112.5 cv
67.5 112.5 li
67.5 135 li
70.1025 135 li
70.0953 136.973 70.0849 138.606 70.0713 139.801 cv
70.9902 142.398 li
70.9902 148.984 li
68.9277 154.813 li
68.8745 154.986 li
68.8745 157.5 li
67.5 157.5 li
67.5 165.854 li
44.9999 135 mo
44.9999 157.5 li
67.5 157.5 li
67.5 135 li
44.9999 135 li
22.5 112.5 mo
22.5 135 li
44.9999 135 li
44.9999 112.5 li
22.5 112.5 li
44.9999 90 mo
44.9999 112.5 li
67.5 112.5 li
67.5 90 li
44.9999 90 li
44.9999 44.9999 mo
44.9999 67.5 li
67.5 67.5 li
67.5 44.9999 li
44.9999 44.9999 li
.666667 .694118 .709804 rgb
f
44.9999 44.9999 mo
25.1741 44.9999 li
25.221 44.1773 25.251 43.6587 25.251 43.6587 cv
25.8945 40.586 28.9985 37.3955 33.0625 36.7422 cv
36.756 36.1484 40.8572 35.808 44.9999 35.7158 cv
44.9999 44.9999 li
.741176 .764706 .780392 rgb
f
69.5682 44.9999 mo
67.5 44.9999 li
67.5 40.368 li
68.3231 41.4085 68.884 42.5643 69.1079 43.6993 cv
69.5682 44.9999 li
f
19.769 58.8393 mo
19.769 58.5122 li
19.769 57.0493 20.874 55.8227 22.3291 55.67 cv
22.5 55.6521 li
22.5 58.5531 li
19.769 58.8393 li
f
44.9999 90 mo
22.5 90 li
22.5 81.0717 li
22.6544 81.0033 22.8252 80.9654 23.0048 80.9654 cv
24.6875 80.9654 li
24.6312 76.0178 24.5878 71.3941 24.5661 67.5 cv
44.9999 67.5 li
44.9999 90 li
f
67.5 67.5 mo
44.9999 67.5 li
44.9999 44.9999 li
67.5 44.9999 li
67.5 67.5 li
f
69.9917 90 mo
67.5 90 li
67.5 67.5 li
69.7037 67.5 li
69.7322 68.9597 69.7594 70.4101 69.7862 71.8545 cv
69.9641 71.7903 70.1544 71.754 70.3525 71.754 cv
70.4078 71.754 70.4636 71.7568 70.52 71.7626 cv
72.1118 71.9297 li
73.5669 72.082 74.6713 73.3086 74.6713 74.7719 cv
74.6713 75.0986 li
69.8349 74.5918 li
69.8951 78.0281 69.9482 83.5533 69.9917 90 cv
f
22.5 112.5 mo
21.7563 112.5 li
21.7563 90 li
22.5 90 li
22.5 112.5 li
f
44.9999 135 mo
22.5 135 li
22.5 112.5 li
44.9999 112.5 li
44.9999 135 li
f
67.5 112.5 mo
44.9999 112.5 li
44.9999 90 li
67.5 90 li
67.5 112.5 li
f
70.1025 135 mo
67.5 135 li
67.5 112.5 li
70.0945 112.5 li
70.1182 121.229 70.1227 129.455 70.1025 135 cv
f
22.5 157.5 mo
21.7563 157.5 li
21.7563 135 li
22.5 135 li
22.5 157.5 li
f
44.9999 165.854 mo
23.0048 165.854 li
22.8252 165.854 22.6544 165.816 22.5 165.747 cv
22.5 157.5 li
44.9999 157.5 li
44.9999 165.854 li
f
67.5 157.5 mo
44.9999 157.5 li
44.9999 135 li
67.5 135 li
67.5 157.5 li
f
67.6259 165.854 mo
67.5 165.854 li
67.5 157.5 li
68.8745 157.5 li
68.8745 164.605 li
68.8745 165.294 68.3155 165.854 67.6259 165.854 cv
f
68.9951 154.45 mo
59.4414 155.524 47.4492 155.524 37.8955 154.45 cv
34.1855 154.033 31.394 150.866 31.394 145.879 cv
29.9937 129.58 30.73 72.8008 31.394 38.5342 cv
31.394 35.1553 34.7603 31.2061 39.3345 30.4707 cv
48.0908 29.063 59.1367 29.0791 67.6016 30.4497 cv
72.1582 31.187 75.4966 35.1436 75.4966 38.5054 cv
76.2383 72.7842 77.062 129.579 75.4966 145.879 cv
75.4966 150.866 72.7051 154.033 68.9951 154.45 cv
cp
.866667 0 0 rgb
f
32.6484 146.32 mo
32.6484 137.09 li
32.6484 64.4072 li
32.3989 57.5913 32.6455 47.4253 33.2759 40.23 cv
33.2759 37.5254 36.1035 34.0571 40.1606 33.4048 cv
44.438 32.7173 48.9414 32.3687 53.1807 32.3687 cv
57.3765 32.3687 62.6128 32.71 66.7744 33.3833 cv
70.8057 34.0366 73.6152 37.5005 73.6152 40.2012 cv
74.3745 46.5684 74.4829 56.8481 74.2422 64.4072 cv
74.272 137.09 li
74.2422 146.32 li
74.2422 152.096 32.6484 152.096 32.6484 146.32 cv
cp
1 .239216 .152941 rgb
f
74.272 68.7705 mo
74.272 48.9609 li
65.7769 40.4658 41.3994 40.1802 32.6187 48.9609 cv
32.6187 68.7705 li
74.272 68.7705 li
cp
.2 .262745 .356863 rgb
f
68.3657 67.6865 mo
68.5034 63.1099 68.7925 59.2017 69.3159 57.5171 cv
70.2217 54.604 73.958 49.5059 74.2422 48.9609 cv
73.3276 48.1025 li
69.0732 44.52 60.6357 42.626 53.7222 42.4951 cv
53.7222 67.6865 li
68.3657 67.6865 li
cp
.180392 .396078 .470588 rgb
f
74.4341 71.2095 mo
74.3892 68.7578 74.334 67.2847 74.2676 67.2847 cv
67.7612 66.9995 li
67.6328 71.2095 li
74.4341 71.2095 li
cp
.866667 0 0 rgb
f
38.3975 58.4385 mo
38.1836 58.4385 37.9741 58.332 37.8511 58.1377 cv
31.9497 48.8145 li
31.7588 48.5127 31.8481 48.1138 32.1499 47.9229 cv
32.4517 47.7319 32.8501 47.8208 33.0415 48.123 cv
38.9429 57.4463 li
39.1338 57.748 39.0444 58.147 38.7427 58.3379 cv
38.6353 58.4058 38.5156 58.4385 38.3975 58.4385 cv
cp
f
68.3042 58.4385 mo
68.1855 58.4385 68.0659 58.4058 67.9585 58.3379 cv
67.6572 58.147 67.5679 57.7476 67.7588 57.4458 cv
73.6646 48.1274 li
73.8564 47.8262 74.2568 47.7378 74.5566 47.9277 cv
74.8579 48.1187 74.9473 48.5181 74.7563 48.8198 cv
68.8506 58.1382 li
68.7275 58.332 68.5181 58.4385 68.3042 58.4385 cv
cp
f
39.0972 71.2095 mo
38.9688 66.9995 li
32.4624 67.2847 li
32.4619 71.2095 li
39.0972 71.2095 li
cp
f
53.0239 142.038 mo
47.9736 142.038 41.8345 141.352 37.0088 139.996 cv
37.0088 57.1045 li
37.0088 56.4937 37.3745 55.9453 37.937 55.7065 cv
42.0952 53.9419 48.2524 53.0498 53.0391 53.0498 cv
57.9956 53.0498 65.8164 54.0068 69.1108 55.8989 cv
69.5859 56.1719 69.8813 56.6724 69.8813 57.2207 cv
69.8813 139.982 li
65.2925 141.347 58.0918 142.038 53.0244 142.038 cv
53.0239 142.038 li
cp
1 .239216 .152941 rgb
f
32.0254 51.9399 mo
26.041 52.5674 li
26.041 52.2402 li
26.041 50.7773 27.146 49.5508 28.6006 49.3984 cv
30.1924 49.2314 li
31.1724 49.1289 32.0254 49.897 32.0254 50.8823 cv
32.0254 51.9399 li
cp
.2 .262745 .356863 rgb
f
74.959 51.9399 mo
80.9434 52.5674 li
80.9434 52.2402 li
80.9434 50.7773 79.8384 49.5508 78.3838 49.3984 cv
76.792 49.2314 li
75.812 49.1289 74.959 49.897 74.959 50.8823 cv
74.959 51.9399 li
cp
f
34.3506 36.9956 mo
41.6548 33.4868 li
42.6011 33.0322 43.2031 32.0752 43.2031 31.0254 cv
43.2031 30.7651 42.9644 30.5708 42.7095 30.623 cv
38.9067 31.4058 li
36.2544 31.9521 34.3506 34.2876 34.3506 36.9956 cv
cp
.388235 .466667 .517647 rgb
f
36.6714 32.4014 mo
35.249 33.4507 34.3506 35.1353 34.3506 36.9956 cv
36.6714 35.8809 li
36.6714 32.4014 li
cp
.878431 .741176 .396078 rgb
f
39.5571 32.7549 mo
41.6836 32.7549 li
41.6836 31.9956 li
39.5571 31.9956 li
39.5571 32.7549 li
cp
.741176 .831373 .858824 rgb
f
37.1777 34.1846 mo
39.3042 34.1846 li
39.3042 33.4253 li
37.1777 33.4253 li
37.1777 34.1846 li
cp
f
72.4849 36.9956 mo
65.1807 33.4868 li
64.2349 33.0322 63.6328 32.0752 63.6328 31.0254 cv
63.6328 30.7651 63.8716 30.5708 64.1265 30.623 cv
67.9292 31.4058 li
70.5815 31.9521 72.4849 34.2876 72.4849 36.9956 cv
cp
.388235 .466667 .517647 rgb
f
70.1646 32.4014 mo
71.5869 33.4507 72.4849 35.1353 72.4849 36.9956 cv
70.1646 35.8809 li
70.1646 32.4014 li
cp
.878431 .741176 .396078 rgb
f
67.2788 32.7549 mo
65.1523 32.7549 li
65.1523 31.9956 li
67.2788 31.9956 li
67.2788 32.7549 li
cp
.741176 .831373 .858824 rgb
f
69.6582 34.1846 mo
67.5317 34.1846 li
67.5317 33.4253 li
69.6582 33.4253 li
69.6582 34.1846 li
cp
f
30.7573 77.7134 mo
76.167 77.7134 li
76.167 71.2095 li
30.7573 71.2095 li
30.7573 77.7134 li
cp
.2 .262745 .356863 rgb
f
31.1348 157.724 mo
75.7554 157.724 li
76.4453 157.724 77.0044 157.165 77.0044 156.475 cv
77.0044 74.084 li
77.0044 73.3945 76.4453 72.8354 75.7554 72.8354 cv
31.1348 72.8354 li
30.4453 72.8354 29.8862 73.3945 29.8862 74.084 cv
29.8862 156.475 li
29.8862 157.165 30.4453 157.724 31.1348 157.724 cv
cp
.866667 0 0 rgb
f
30.9072 72.8584 mo
30.3267 72.9653 29.8862 73.4722 29.8862 74.084 cv
29.8862 156.475 li
29.8862 157.165 30.4453 157.724 31.1348 157.724 cv
75.7554 157.724 li
76.4175 157.724 76.9541 157.207 76.9961 156.555 cv
52.9644 148.713 li
49.6401 144.505 56.2695 81.0239 52.228 75.8838 cv
30.9072 72.8584 li
cp
f
36.6191 154.472 mo
36.6191 73.6484 li
70.2715 73.6484 li
70.2715 154.472 li
36.6191 154.472 li
cp
1 .239216 .152941 rgb
f
383.359 80.4458 mo
380.694 80.4458 li
379.898 80.4458 379.254 79.8008 379.254 79.0053 cv
379.254 60.5014 li
379.254 59.7055 379.898 59.0606 380.694 59.0606 cv
383.359 59.0606 li
384.155 59.0606 384.8 59.7055 384.8 60.5014 cv
384.8 79.0053 li
384.8 79.8008 384.155 80.4458 383.359 80.4458 cv
.741176 .831373 .858824 rgb
f
384.8 63.2383 mo
379.254 63.2383 li
379.254 62.3418 li
384.8 62.3418 li
384.8 63.2383 li
.545098 .682353 .690196 rgb
f
384.8 77.165 mo
379.254 77.165 li
379.254 76.2681 li
384.8 76.2681 li
384.8 77.165 li
f
434.554 80.4458 mo
431.889 80.4458 li
431.093 80.4458 430.447 79.8008 430.447 79.0053 cv
430.447 60.5014 li
430.447 59.7055 431.093 59.0606 431.889 59.0606 cv
434.554 59.0606 li
435.35 59.0606 435.994 59.7055 435.994 60.5014 cv
435.994 79.0053 li
435.994 79.8008 435.35 80.4458 434.554 80.4458 cv
.741176 .831373 .858824 rgb
f
435.994 63.2383 mo
430.447 63.2383 li
430.447 62.3418 li
435.994 62.3418 li
435.994 63.2383 li
cp
.545098 .682353 .690196 rgb
f
435.994 77.165 mo
430.447 77.165 li
430.447 76.2681 li
435.994 76.2681 li
435.994 77.165 li
cp
f
427.486 174.94 mo
435.111 174.94 li
435.111 138.847 li
427.486 138.847 li
427.486 174.94 li
.498039 .211765 .262745 rgb
f
380.242 174.94 mo
387.867 174.94 li
387.867 138.847 li
380.242 138.847 li
380.242 174.94 li
f
405 198.396 mo
382.5 198.396 li
382.5 180 li
373.908 180 li
373.908 157.5 li
380.242 157.5 li
380.242 174.94 li
382.5 174.94 li
382.5 180 li
405 180 li
405 157.5 li
387.867 157.5 li
387.867 138.847 li
382.5 138.847 li
382.5 135 li
373.908 135 li
373.908 112.5 li
382.5 112.5 li
382.5 90 li
373.908 90 li
373.908 68.416 li
373.908 68.054 374.062 67.728 374.308 67.5 cv
379.254 67.5 li
379.254 79.0053 li
379.254 79.8008 379.898 80.4458 380.694 80.4458 cv
382.5 80.4458 li
382.5 90 li
405 90 li
405 67.5 li
384.8 67.5 li
384.8 63.2383 li
384.8 62.3418 li
384.8 60.5014 li
384.8 59.7055 384.155 59.0606 383.359 59.0606 cv
382.5 59.0606 li
382.5 44.9999 li
376.721 44.9999 li
376.723 44.832 376.725 44.6777 376.728 44.5376 cv
372.317 44.9999 li
371.921 44.9999 li
371.921 44.7144 li
371.921 43.2515 373.025 42.0249 374.48 41.8726 cv
376.072 41.7055 li
376.132 41.6993 376.19 41.6962 376.249 41.6962 cv
376.431 41.6962 376.607 41.7262 376.772 41.7817 cv
376.796 40.3555 377.403 29.8613 377.403 29.8613 cv
377.893 27.5185 379.814 25.1077 382.5 23.8047 cv
382.5 44.9999 li
405 44.9999 li
405 22.5 li
388.613 22.5 li
392.454 22.0938 396.989 21.8926 401.503 21.8926 cv
402.675 21.8926 403.844 21.9062 405 21.9332 cv
405 22.5 li
414.336 22.5 li
415.483 22.6229 416.56 22.7641 417.547 22.9238 cv
421.623 23.584 424.717 26.8198 425.325 29.9019 cv
427.207 35.2202 li
427.207 44.9999 li
405 44.9999 li
405 67.5 li
426.122 67.5 li
426.162 73.0367 426.198 80.9538 426.228 90 cv
405 90 li
405 112.5 li
426.288 112.5 li
426.303 120.093 426.315 127.769 426.323 135 cv
405 135 li
405 157.5 li
426.33 157.5 li
426.326 164.859 426.312 170.248 426.288 172.343 cv
427.207 174.94 li
427.207 180 li
405 180 li
405 198.396 li
382.5 112.5 mo
382.5 135 li
405 135 li
405 112.5 li
382.5 112.5 li
430.447 61.2546 mo
427.5 60.9457 li
427.5 58.0453 li
428.328 58.1319 li
429.366 58.2405 430.225 58.8955 430.633 59.7928 cv
430.515 60.002 430.447 60.2438 430.447 60.5014 cv
430.447 61.2546 li
.666667 .694118 .709804 rgb
f
405 44.9999 mo
382.5 44.9999 li
382.5 23.8047 li
383.337 23.3985 384.249 23.1001 385.215 22.9448 cv
386.264 22.7761 387.404 22.6279 388.613 22.5 cv
405 22.5 li
405 44.9999 li
.741176 .764706 .780392 rgb
f
414.336 22.5 mo
405 22.5 li
405 21.9332 li
408.327 22.011 411.54 22.2006 414.336 22.5 cv
f
379.254 67.5 mo
374.308 67.5 li
374.531 67.2936 374.829 67.1674 375.157 67.1674 cv
376.752 67.1674 li
376.703 56.3094 376.686 48.1803 376.721 44.9999 cv
382.5 44.9999 li
382.5 59.0606 li
380.694 59.0606 li
379.898 59.0606 379.254 59.7055 379.254 60.5014 cv
379.254 67.5 li
371.921 45.0415 mo
371.921 44.9999 li
372.317 44.9999 li
371.921 45.0415 li
f
405 90 mo
382.5 90 li
382.5 80.4458 li
383.359 80.4458 li
384.155 80.4458 384.8 79.8008 384.8 79.0053 cv
384.8 77.165 li
384.8 76.2681 li
384.8 67.5 li
405 67.5 li
405 90 li
f
426.122 67.5 mo
405 67.5 li
405 44.9999 li
427.207 44.9999 li
427.207 49.9595 li
425.918 53.6005 li
425.947 55.0948 425.976 56.5786 426.003 58.0571 cv
426.18 57.9928 426.37 57.9564 426.567 57.9564 cv
426.623 57.9564 426.679 57.9593 426.736 57.9654 cv
427.5 58.0453 li
427.5 60.9457 li
426.052 60.794 li
426.076 62.1965 426.1 64.4998 426.122 67.5 cv
f
382.5 112.5 mo
373.908 112.5 li
373.908 90 li
382.5 90 li
382.5 112.5 li
f
405 135 mo
382.5 135 li
382.5 112.5 li
405 112.5 li
405 135 li
f
426.288 112.5 mo
405 112.5 li
405 90 li
426.228 90 li
426.252 97.0152 426.272 104.712 426.288 112.5 cv
f
380.242 157.5 mo
373.908 157.5 li
373.908 135 li
382.5 135 li
382.5 138.847 li
380.242 138.847 li
380.242 157.5 li
f
405 180 mo
382.5 180 li
382.5 174.94 li
387.867 174.94 li
387.867 157.5 li
405 157.5 li
405 180 li
f
426.33 157.5 mo
405 157.5 li
405 135 li
426.323 135 li
426.331 143.388 426.334 151.174 426.33 157.5 cv
f
382.5 198.396 mo
375.157 198.396 li
374.467 198.396 373.908 197.836 373.908 197.147 cv
373.908 180 li
382.5 180 li
382.5 198.396 li
f
423.843 198.396 mo
405 198.396 li
405 180 li
427.207 180 li
427.207 181.526 li
425.145 187.354 li
425.091 187.528 li
425.091 197.147 li
425.091 197.836 424.532 198.396 423.843 198.396 cv
f
383.359 80.4458 mo
382.5 80.4458 li
380.694 80.4458 li
379.898 80.4458 379.254 79.8008 379.254 79.0053 cv
379.254 67.5 li
379.254 60.5014 li
379.254 59.7055 379.898 59.0606 380.694 59.0606 cv
382.5 59.0606 li
383.359 59.0606 li
384.155 59.0606 384.8 59.7055 384.8 60.5014 cv
384.8 62.3418 li
379.254 62.3418 li
379.254 63.2383 li
384.8 63.2383 li
384.8 67.5 li
384.8 76.2681 li
379.254 76.2681 li
379.254 77.165 li
384.8 77.165 li
384.8 79.0053 li
384.8 79.8008 384.155 80.4458 383.359 80.4458 cv
.576471 .662745 .698039 rgb
f
384.8 63.2383 mo
384.8 63.2383 li
379.254 63.2383 li
379.254 62.3418 li
384.8 62.3418 li
384.8 63.2383 li
.439216 .560784 .580392 rgb
f
384.8 77.165 mo
384.8 77.165 li
379.254 77.165 li
379.254 76.2681 li
384.8 76.2681 li
384.8 77.165 li
f
430.889 61.3008 mo
430.447 61.2546 li
430.447 60.5014 li
430.447 60.2438 430.515 60.002 430.633 59.7928 cv
430.798 60.1539 430.889 60.5543 430.889 60.9741 cv
430.889 61.3008 li
.576471 .662745 .698039 rgb
f
387.867 174.94 mo
382.5 174.94 li
380.242 174.94 li
380.242 157.5 li
380.242 138.847 li
382.5 138.847 li
387.867 138.847 li
387.867 157.5 li
387.867 174.94 li
.403922 .231373 .282353 rgb
f
385.767 21.7427 mo
429.514 21.7427 li
428.367 19.9468 426.267 18.2832 423.623 17.8555 cv
419.637 17.2104 413.86 16.8403 407.775 16.8403 cv
401.645 16.8403 395.778 17.2178 391.68 17.877 cv
389.033 18.3022 386.924 19.9556 385.767 21.7427 cv
cp
431.428 24.1812 mo
383.84 24.1812 li
383.451 24.1812 383.086 23.9961 382.856 23.6826 cv
382.627 23.3691 382.56 22.9648 382.677 22.5942 cv
383.803 19.0337 387.346 16.1035 391.293 15.4688 cv
395.575 14.7803 401.429 14.4014 407.775 14.4014 cv
413.984 14.4014 419.903 14.7827 424.014 15.4482 cv
427.954 16.0859 431.482 19.0269 432.593 22.6001 cv
432.707 22.9702 432.64 23.373 432.409 23.6851 cv
432.18 23.9971 431.815 24.1812 431.428 24.1812 cv
cp
.545098 .682353 .690196 rgb
f
425.212 186.992 mo
415.658 188.066 399.601 188.066 390.047 186.992 cv
386.337 186.575 383.546 183.408 383.546 178.421 cv
382.146 162.122 382.882 59.0029 383.546 24.7363 cv
383.546 21.3574 386.912 17.4082 391.486 16.6729 cv
400.242 15.2651 415.354 15.2817 423.818 16.6519 cv
428.375 17.3896 431.713 21.3457 431.713 24.7075 cv
432.455 58.9863 433.278 162.121 431.713 178.421 cv
431.713 183.408 428.922 186.575 425.212 186.992 cv
cp
.592157 .486275 .47451 rgb
f
384.8 178.862 mo
384.8 169.632 li
384.8 50.6099 li
384.551 43.7935 384.797 33.6279 385.428 26.4321 cv
385.428 23.7275 388.255 20.2593 392.313 19.6069 cv
396.59 18.9194 402.72 18.5708 406.958 18.5708 cv
411.154 18.5708 418.829 18.9121 422.991 19.5859 cv
427.022 20.2388 429.832 23.7026 429.832 26.4033 cv
430.592 32.771 430.699 43.0508 430.459 50.6094 cv
430.488 169.632 li
430.459 178.862 li
430.459 184.638 384.8 184.638 384.8 178.862 cv
cp
.741176 .67451 .654902 rgb
f
430.488 54.9727 mo
430.488 35.1631 li
421.993 26.668 393.552 26.3823 384.771 35.1631 cv
384.771 54.9727 li
430.488 54.9727 li
cp
.2 .262745 .356863 rgb
f
424.582 53.8887 mo
424.721 49.312 425.009 45.4038 425.533 43.7192 cv
426.438 40.8062 430.175 35.708 430.459 35.1631 cv
429.544 34.3047 li
425.29 30.7222 414.413 28.8281 407.5 28.6978 cv
407.5 53.8887 li
424.582 53.8887 li
cp
.180392 .396078 .470588 rgb
f
430.65 57.4116 mo
430.606 54.96 430.551 53.4868 430.484 53.4868 cv
423.978 53.2017 li
423.85 57.4116 li
430.65 57.4116 li
cp
.592157 .486275 .47451 rgb
f
390.55 44.6411 mo
390.335 44.6411 390.126 44.5347 390.003 44.3403 cv
384.102 35.0166 li
383.91 34.7148 384 34.3159 384.302 34.125 cv
384.605 33.9346 385.003 34.0249 385.193 34.3252 cv
391.095 43.6489 li
391.286 43.9507 391.196 44.3496 390.895 44.5405 cv
390.787 44.6084 390.668 44.6411 390.55 44.6411 cv
cp
f
424.521 44.6411 mo
424.402 44.6411 424.283 44.6084 424.176 44.5405 cv
423.874 44.3496 423.784 43.9502 423.976 43.6489 cv
429.881 34.3301 li
430.072 34.0293 430.471 33.939 430.772 34.1299 cv
431.074 34.3208 431.164 34.7202 430.973 35.0215 cv
425.067 44.3403 li
424.944 44.5347 424.735 44.6411 424.521 44.6411 cv
cp
f
391.249 57.4116 mo
391.12 53.2017 li
384.614 53.4868 li
384.613 57.4116 li
391.249 57.4116 li
cp
f
406.802 174.58 mo
401.751 174.58 393.986 173.894 389.161 172.538 cv
389.161 43.3071 li
389.161 42.6958 389.526 42.1475 390.089 41.9087 cv
394.247 40.144 402.03 39.252 406.816 39.252 cv
411.773 39.252 422.033 40.209 425.327 42.1011 cv
425.803 42.3745 426.099 42.875 426.099 43.4233 cv
426.099 172.524 li
421.509 173.889 411.869 174.58 406.802 174.58 cv
cp
.741176 .67451 .654902 rgb
f
384.177 38.1426 mo
378.192 38.7695 li
378.192 38.4429 li
378.192 36.9795 379.298 35.7529 380.753 35.6006 cv
382.344 35.4336 li
383.324 35.3311 384.177 36.0996 384.177 37.085 cv
384.177 38.1426 li
cp
.2 .262745 .356863 rgb
f
431.176 38.1426 mo
437.16 38.7695 li
437.16 38.4429 li
437.16 36.9795 436.056 35.7529 434.601 35.6006 cv
433.009 35.4336 li
432.028 35.3311 431.176 36.0996 431.176 37.085 cv
431.176 38.1426 li
cp
f
420.04 18.7666 mo
421.369 29.644 li
418.445 19.083 li
420.04 18.7666 li
cp
.592157 .486275 .47451 rgb
f
396.626 19.083 mo
393.702 29.644 li
395.031 18.7666 li
396.626 19.083 li
cp
f
382.909 63.9155 mo
432.384 63.9155 li
432.384 57.4116 li
382.909 57.4116 li
382.909 63.9155 li
cp
.2 .262745 .356863 rgb
f
383.286 190.266 mo
431.973 190.266 li
432.662 190.266 433.221 189.707 433.221 189.017 cv
433.221 60.2861 li
433.221 59.5967 432.662 59.0376 431.973 59.0376 cv
383.286 59.0376 li
382.597 59.0376 382.038 59.5967 382.038 60.2861 cv
382.038 189.017 li
382.038 189.707 382.597 190.266 383.286 190.266 cv
cp
.498039 .211765 .262745 rgb
f
383.06 59.0605 mo
382.479 59.1675 382.038 59.6748 382.038 60.2861 cv
382.038 189.017 li
382.038 189.707 382.597 190.266 383.286 190.266 cv
431.973 190.266 li
432.635 190.266 433.171 189.749 433.213 189.097 cv
421.391 178.599 li
418.065 174.391 406.598 76.6914 402.557 71.5518 cv
383.06 59.0605 li
cp
f
384.477 187.014 mo
384.477 59.8506 li
430.782 59.8506 li
430.782 187.014 li
384.477 187.014 li
cp
.713726 .47451 .407843 rgb
f
390.527 19.4526 mo
392.881 19.0044 li
394.196 18.7539 395.147 17.604 395.147 16.2656 cv
395.147 16.2539 li
393.848 16.3979 392.545 16.5615 391.238 16.7715 cv
387.99 17.2935 385.372 19.4731 384.177 21.8926 cv
386.849 21.8926 li
387.697 20.6182 389.023 19.7393 390.527 19.4526 cv
cp
.741176 .831373 .858824 rgb
f
385.77 19.6758 mo
385.112 20.3604 384.563 21.1099 384.177 21.8926 cv
386.849 21.8926 li
387.541 20.8525 388.555 20.082 389.721 19.6758 cv
385.77 19.6758 li
cp
.878431 .545098 .141176 rgb
f
390.94 17.9888 mo
390.94 18.3101 391.559 18.5708 392.321 18.5708 cv
393.084 18.5708 393.702 18.3101 393.702 17.9888 cv
393.702 17.667 393.084 17.4063 392.321 17.4063 cv
391.559 17.4063 390.94 17.667 390.94 17.9888 cv
cp
.466667 .592157 .603922 rgb
f
387.857 18.5708 mo
387.857 18.8926 388.476 19.1533 389.239 19.1533 cv
390.002 19.1533 390.62 18.8926 390.62 18.5708 cv
390.62 18.2495 390.002 17.9888 389.239 17.9888 cv
388.476 17.9888 387.857 18.2495 387.857 18.5708 cv
cp
f
428.794 21.8164 mo
428.794 21.8164 li
430.955 21.8164 li
429.773 19.394 427.168 17.1997 423.925 16.6748 cv
422.646 16.4678 421.364 16.3066 420.08 16.165 cv
420.08 17.5142 421.046 18.6704 422.375 18.9092 cv
425.11 19.4009 li
426.615 19.6714 427.945 20.5435 428.794 21.8164 cv
cp
.741176 .831373 .858824 rgb
f
426.092 19.6758 mo
427.187 20.0874 428.136 20.8291 428.794 21.8164 cv
430.956 21.8164 li
430.588 21.064 430.07 20.3413 429.451 19.6758 cv
426.092 19.6758 li
cp
.878431 .545098 .141176 rgb
f
424.101 17.9126 mo
424.101 18.2339 423.481 18.4946 422.719 18.4946 cv
421.956 18.4946 421.338 18.2339 421.338 17.9126 cv
421.338 17.5908 421.956 17.3301 422.719 17.3301 cv
423.481 17.3301 424.101 17.5908 424.101 17.9126 cv
cp
.466667 .592157 .603922 rgb
f
427.183 18.4946 mo
427.183 18.8164 426.564 19.0767 425.802 19.0767 cv
425.039 19.0767 424.421 18.8164 424.421 18.4946 cv
424.421 18.1733 425.039 17.9126 425.802 17.9126 cv
426.564 17.9126 427.183 18.1733 427.183 18.4946 cv
cp
f
382.047 83.0332 mo
433.204 83.0332 li
433.204 80.1753 li
382.047 80.1753 li
382.047 83.0332 li
cp
.498039 .211765 .262745 rgb
f
382.047 81.4072 mo
433.204 81.4072 li
433.204 78.5493 li
382.047 78.5493 li
382.047 81.4072 li
cp
.839216 .572549 .494118 rgb
f
382.047 82.2202 mo
433.204 82.2202 li
433.204 79.3623 li
382.047 79.3623 li
382.047 82.2202 li
cp
.713726 .47451 .407843 rgb
f
382.047 111.555 mo
433.204 111.555 li
433.204 108.697 li
382.047 108.697 li
382.047 111.555 li
cp
.498039 .211765 .262745 rgb
f
382.047 109.929 mo
433.204 109.929 li
433.204 107.071 li
382.047 107.071 li
382.047 109.929 li
cp
.839216 .572549 .494118 rgb
f
382.047 110.742 mo
433.204 110.742 li
433.204 107.884 li
382.047 107.884 li
382.047 110.742 li
cp
.713726 .47451 .407843 rgb
f
382.047 140.077 mo
433.204 140.077 li
433.204 137.219 li
382.047 137.219 li
382.047 140.077 li
cp
.498039 .211765 .262745 rgb
f
382.047 138.451 mo
433.204 138.451 li
433.204 135.593 li
382.047 135.593 li
382.047 138.451 li
cp
.839216 .572549 .494118 rgb
f
382.047 139.264 mo
433.204 139.264 li
433.204 136.406 li
382.047 136.406 li
382.047 139.264 li
cp
.713726 .47451 .407843 rgb
f
382.047 168.599 mo
433.204 168.599 li
433.204 165.74 li
382.047 165.74 li
382.047 168.599 li
cp
.498039 .211765 .262745 rgb
f
382.047 166.972 mo
433.204 166.972 li
433.204 164.114 li
382.047 164.114 li
382.047 166.972 li
cp
.839216 .572549 .494118 rgb
f
382.047 167.785 mo
433.204 167.785 li
433.204 164.927 li
382.047 164.927 li
382.047 167.785 li
cp
.713726 .47451 .407843 rgb
f
390.62 57.4116 mo
424.521 57.4116 li
424.521 45.4204 li
390.62 45.4204 li
390.62 57.4116 li
cp
.592157 .486275 .47451 rgb
f
396.529 45.4204 mo
390.62 45.4204 li
390.62 57.4116 li
396.529 57.4116 li
396.529 45.4204 li
cp
f
393.059 57.4116 mo
422.082 57.4116 li
424.521 45.4204 li
414.895 41.8975 400.884 41.8975 390.62 45.4204 cv
393.059 57.4116 li
cp
.741176 .67451 .654902 rgb
f
390.687 45.6128 mo
390.554 45.228 li
400.896 41.6792 414.892 41.6797 424.592 45.2295 cv
424.451 45.6113 li
414.833 42.0918 400.946 42.0913 390.687 45.6128 cv
cp
.592157 .486275 .47451 rgb
f
392.998 43.6699 mo
395.654 43.0356 li
396.075 42.9351 396.334 42.5127 396.234 42.0923 cv
396.169 41.8213 li
396.068 41.4004 395.646 41.1411 395.226 41.2412 cv
392.569 41.8755 li
392.148 41.9761 391.89 42.3984 391.99 42.8188 cv
392.055 43.0903 li
392.155 43.5107 392.577 43.7705 392.998 43.6699 cv
cp
1 .427451 .309804 rgb
f
395.408 41.626 mo
392.664 42.271 li
392.566 42.2944 392.483 42.354 392.431 42.4399 cv
392.378 42.5254 392.362 42.6265 392.386 42.7241 cv
392.45 42.9966 li
392.491 43.166 392.641 43.2852 392.815 43.2852 cv
392.903 43.2744 li
395.56 42.6401 li
395.762 42.5923 395.887 42.3882 395.839 42.186 cv
395.773 41.9165 li
395.732 41.7451 395.583 41.626 395.408 41.626 cv
cp
392.815 44.0981 mo
392.815 44.0981 li
392.264 44.0981 391.788 43.7227 391.659 43.1851 cv
391.595 42.9126 li
391.521 42.6045 391.571 42.2852 391.737 42.0146 cv
391.904 41.7437 392.166 41.5542 392.475 41.48 cv
395.131 40.8457 li
395.762 40.6968 396.413 41.0986 396.564 41.7266 cv
396.63 41.9971 li
396.781 42.6362 396.386 43.2788 395.749 43.4312 cv
393.093 44.0654 li
393.002 44.0869 392.908 44.0981 392.815 44.0981 cv
cp
.898039 .172549 .141176 rgb
f
422.452 43.6699 mo
419.796 43.0356 li
419.375 42.9351 419.115 42.5127 419.216 42.0923 cv
419.28 41.8213 li
419.381 41.4004 419.804 41.1411 420.224 41.2412 cv
422.88 41.8755 li
423.301 41.9761 423.561 42.3984 423.46 42.8188 cv
423.396 43.0903 li
423.295 43.5107 422.872 43.7705 422.452 43.6699 cv
cp
1 .427451 .309804 rgb
f
420.098 41.6357 mo
419.854 41.6357 419.715 41.752 419.676 41.916 cv
419.611 42.1865 li
419.588 42.2847 419.604 42.3853 419.656 42.4712 cv
419.709 42.5566 419.792 42.6167 419.891 42.6401 cv
422.635 43.2852 li
422.809 43.2852 422.959 43.166 423 42.9956 cv
423.064 42.7251 li
423.088 42.6265 423.072 42.5259 423.02 42.4399 cv
422.967 42.3545 422.884 42.2944 422.785 42.271 cv
420.129 41.6367 li
420.098 41.6357 li
cp
422.635 44.0981 mo
422.542 44.0981 422.448 44.0869 422.357 44.0654 cv
419.701 43.4312 li
419.393 43.3569 419.131 43.1675 418.964 42.897 cv
418.798 42.626 418.746 42.3066 418.82 41.9976 cv
418.885 41.7271 li
419.035 41.0981 419.688 40.6968 420.318 40.8457 cv
422.975 41.48 li
423.283 41.5542 423.545 41.7437 423.712 42.0142 cv
423.878 42.2852 423.93 42.6045 423.855 42.9136 cv
423.791 43.1841 li
423.662 43.7227 423.187 44.0981 422.635 44.0981 cv
cp
.898039 .172549 .141176 rgb
f
385.207 192.586 mo
430.36 192.586 li
431.151 192.586 431.792 191.945 431.792 191.155 cv
431.792 190.266 li
383.775 190.266 li
383.775 191.155 li
383.775 191.945 384.416 192.586 385.207 192.586 cv
cp
.545098 .682353 .690196 rgb
f
419.242 16.8662 mo
419.214 16.8647 li
411.499 16.3188 403.999 16.3188 396.284 16.8647 cv
396.034 16.8838 395.866 16.7109 395.851 16.4883 cv
395.835 16.2642 396.003 16.0698 396.228 16.0542 cv
403.98 15.5059 411.52 15.5059 419.271 16.0542 cv
419.495 16.0698 419.663 16.2642 419.647 16.4883 cv
419.633 16.7021 419.454 16.8662 419.242 16.8662 cv
cp
.368627 .203922 .203922 rgb
f
419.242 18.2241 mo
419.214 18.2227 li
411.499 17.6777 403.999 17.6777 396.284 18.2227 cv
396.034 18.2446 395.866 18.0684 395.851 17.8462 cv
395.835 17.6221 396.003 17.4277 396.228 17.4121 cv
403.98 16.8638 411.52 16.8638 419.271 17.4121 cv
419.495 17.4277 419.663 17.6221 419.647 17.8462 cv
419.633 18.0601 419.454 18.2241 419.242 18.2241 cv
cp
f
44.9999 433.288 mo
44.9999 427.5 li
22.5 427.5 li
22.5 429.072 li
22.2325 428.592 22.0071 428.067 21.8291 427.5 cv
22.5 427.5 li
22.5 405 li
20.6601 405 li
20.6215 404.15 li
20.552 397.078 20.5893 390.331 20.6879 382.5 cv
22.5 382.5 li
22.5 360 li
21.0936 360 li
21.2684 352.215 21.4824 342.788 21.4824 342.788 cv
21.653 341.973 22.002 341.15 22.5 340.371 cv
22.5 360 li
44.9999 360 li
44.9999 337.5 li
25.3904 337.5 li
26.4619 336.81 27.701 336.306 29.0489 336.089 cv
33.2924 335.406 37.5009 335.069 41.6728 335.069 cv
42.7844 335.069 43.8934 335.093 44.9999 335.141 cv
44.9999 337.5 li
57.7358 337.5 li
59.7887 338.84 61.2146 340.866 61.6016 342.827 cv
63.4248 347.98 li
63.4248 360 li
44.9999 360 li
44.9999 382.5 li
62.4459 382.5 li
62.5346 390.108 62.5855 398.245 62.5761 405 cv
44.9999 405 li
44.9999 427.5 li
61.2438 427.5 li
60.321 430.438 58.1218 432.252 55.417 432.557 cv
51.9445 432.947 48.4724 433.191 44.9999 433.288 cv
22.5 382.5 mo
22.5 405 li
44.9999 405 li
44.9999 382.5 li
22.5 382.5 li
.666667 .694118 .709804 rgb
f
44.9999 360 mo
22.5 360 li
22.5 340.371 li
23.1983 339.279 24.1892 338.273 25.3904 337.5 cv
44.9999 337.5 li
44.9999 360 li
.741176 .764706 .780392 rgb
f
57.7358 337.5 mo
44.9999 337.5 li
44.9999 335.141 li
48.0415 335.272 51.0631 335.582 54.0674 336.068 cv
55.4218 336.288 56.6642 336.801 57.7358 337.5 cv
f
22.5 382.5 mo
20.6879 382.5 li
20.7264 379.444 20.7742 376.223 20.8286 372.754 cv
16.1723 373.242 li
16.1723 372.926 li
16.1723 371.509 17.2422 370.32 18.6518 370.173 cv
20.1934 370.011 li
20.2504 370.005 20.307 370.002 20.3629 370.002 cv
20.5399 370.002 20.711 370.031 20.8716 370.085 cv
20.8805 369.536 20.9786 365.124 21.0936 360 cv
22.5 360 li
22.5 382.5 li
f
44.9999 405 mo
22.5 405 li
22.5 382.5 li
44.9999 382.5 li
44.9999 405 li
f
62.4459 382.5 mo
44.9999 382.5 li
44.9999 360 li
63.4248 360 li
63.4248 362.256 li
62.1768 365.783 li
62.2051 367.23 62.2319 368.668 62.2582 370.1 cv
62.4308 370.038 62.6153 370.002 62.8073 370.002 cv
62.8609 370.002 62.9151 370.005 62.9698 370.011 cv
64.5112 370.173 li
65.9204 370.32 66.9907 371.509 66.9907 372.926 cv
66.9907 373.242 li
62.3057 372.751 li
62.3587 375.779 62.4061 379.086 62.4459 382.5 cv
f
22.5 427.5 mo
21.8291 427.5 li
21.7633 427.291 21.7039 427.075 21.6514 426.855 cv
20.6601 405 li
22.5 405 li
22.5 427.5 li
f
41.5361 433.337 mo
36.9091 433.337 32.282 433.077 27.6548 432.557 cv
25.472 432.311 23.6189 431.082 22.5 429.072 cv
22.5 427.5 li
44.9999 427.5 li
44.9999 433.288 li
43.8455 433.32 42.6906 433.337 41.5361 433.337 cv
f
61.2438 427.5 mo
44.9999 427.5 li
44.9999 405 li
62.5761 405 li
62.5723 407.689 62.559 410.16 62.5347 412.291 cv
63.4248 414.807 li
63.4248 421.186 li
61.4268 426.832 li
61.3729 427.061 61.3118 427.283 61.2438 427.5 cv
f
61.4922 426.481 mo
52.2383 427.521 42.9844 427.521 33.73 426.481 cv
30.1367 426.077 27.4326 423.01 27.4326 418.179 cv
26.0762 402.391 26.7896 371.017 27.4326 337.824 cv
27.4326 334.551 30.6934 330.726 35.124 330.014 cv
43.606 328.649 51.9429 328.666 60.1426 329.993 cv
64.5566 330.708 67.7896 334.54 67.7896 337.796 cv
68.5083 371 69.3062 402.39 67.7896 418.179 cv
67.7896 423.01 65.0859 426.077 61.4922 426.481 cv
cp
.584314 0 0 rgb
f
28.6479 419.394 mo
28.6479 410.453 li
28.6479 363.674 li
28.4058 357.071 28.6445 347.225 29.2554 340.254 cv
29.2554 337.635 31.9941 334.275 35.9243 333.643 cv
40.0674 332.977 43.6426 332.64 47.7485 332.64 cv
51.813 332.64 55.3101 332.97 59.3413 333.622 cv
63.2461 334.255 65.9673 337.61 65.9673 340.227 cv
66.7031 346.395 66.8076 356.352 66.5747 363.674 cv
66.6035 410.453 li
66.5747 419.394 li
66.5747 424.988 28.6479 424.988 28.6479 419.394 cv
cp
.819608 .160784 .121569 rgb
f
42.2358 357.713 mo
42.9897 357.851 45.0464 358.003 48.2734 358.003 cv
51.5039 358.003 53.5615 357.851 54.313 357.712 cv
53.3096 347.189 li
53.2373 346.345 52.5483 345.712 51.7061 345.712 cv
44.8398 345.712 li
43.998 345.712 43.3091 346.345 43.2373 347.184 cv
42.2358 357.713 li
cp
48.2734 359.219 mo
40.9829 359.219 40.9829 358.668 40.9829 358.085 cv
42.0269 347.074 li
42.1523 345.607 43.3618 344.497 44.8398 344.497 cv
51.7061 344.497 li
53.1841 344.497 54.394 345.607 54.52 347.08 cv
55.561 358.027 li
55.5635 358.668 55.5635 359.219 48.2734 359.219 cv
cp
.584314 0 0 rgb
f
28.6191 363.674 mo
28.6191 408.631 li
41.2417 412.675 53.9033 412.687 66.6035 408.631 cv
66.6035 363.674 li
58.375 355.445 37.1245 355.168 28.6191 363.674 cv
cp
.2 .262745 .356863 rgb
f
61.1431 387.873 mo
60.7568 383.106 60.354 380.563 61.8032 375.898 cv
62.6802 373.077 66.2998 364.201 66.5747 363.674 cv
65.689 362.842 li
61.5679 359.372 54.9697 357.537 48.2729 357.411 cv
48.2729 411.654 li
54.3745 411.585 60.4844 410.585 66.6035 408.631 cv
66.6035 408.631 61.5176 392.498 61.1431 387.873 cv
cp
.180392 .396078 .470588 rgb
f
66.6035 408.023 mo
59.0024 395.177 li
60.2969 390.506 li
66.5996 398.657 li
66.9907 398.657 66.9907 408.023 66.6035 408.023 cv
cp
.584314 0 0 rgb
f
28.4634 408.023 mo
36.0645 395.177 li
34.77 390.506 li
28.4673 398.657 li
28.4634 408.023 li
cp
f
47.5967 402.556 mo
42.7178 402.556 37.7778 401.895 32.8716 400.587 cv
32.8716 373.039 li
32.8716 372.02 33.5244 371.115 34.4893 370.786 cv
38.8779 369.29 43.2754 368.534 47.6113 368.534 cv
51.9468 368.534 56.3447 369.29 60.7329 370.786 cv
61.6978 371.115 62.3511 372.02 62.3511 373.039 cv
62.3511 400.585 li
57.4292 401.894 52.479 402.556 47.5972 402.556 cv
47.5967 402.556 li
cp
.898039 .811765 .572549 rgb
f
28.0444 366.56 mo
22.2476 367.167 li
22.2476 366.851 li
22.2476 365.434 23.3174 364.245 24.7271 364.098 cv
26.2686 363.936 li
27.2178 363.836 28.0444 364.581 28.0444 365.535 cv
28.0444 366.56 li
cp
.819608 .160784 .121569 rgb
f
67.269 366.56 mo
73.0659 367.167 li
73.0659 366.851 li
73.0659 365.434 71.9956 364.245 70.5864 364.098 cv
69.0449 363.936 li
68.0957 363.836 67.269 364.581 67.269 365.535 cv
67.269 366.56 li
cp
f
30.1626 335.612 mo
30.0234 335.612 29.8833 335.565 29.7686 335.468 cv
29.5137 335.25 29.4829 334.867 29.6997 334.611 cv
31.3838 332.633 34.2202 331.48 38.1309 331.187 cv
38.4644 331.161 38.7578 331.412 38.7827 331.747 cv
38.8081 332.081 38.5571 332.373 38.2222 332.398 cv
34.6465 332.667 32.0908 333.677 30.6255 335.398 cv
30.5049 335.54 30.334 335.612 30.1626 335.612 cv
cp
.898039 .937255 .694118 rgb
f
31.7446 332.938 mo
30.9443 333.408 30.2539 333.961 29.6997 334.611 cv
29.4829 334.867 29.5137 335.25 29.7686 335.468 cv
29.8833 335.565 30.0234 335.612 30.1626 335.612 cv
30.334 335.612 30.5049 335.54 30.6255 335.398 cv
30.9438 335.024 31.3237 334.69 31.7446 334.383 cv
31.7446 332.938 li
cp
1 .513726 .152941 rgb
f
65.0596 335.612 mo
65.1992 335.612 65.3394 335.565 65.4536 335.468 cv
65.709 335.25 65.7397 334.867 65.5225 334.611 cv
63.8389 332.633 61.0024 331.48 57.0913 331.187 cv
56.7578 331.161 56.4648 331.412 56.4399 331.747 cv
56.4146 332.081 56.6655 332.373 57 332.398 cv
60.5757 332.667 63.1318 333.677 64.5972 335.398 cv
64.7173 335.54 64.8882 335.612 65.0596 335.612 cv
cp
.898039 .937255 .694118 rgb
f
63.4775 332.938 mo
64.2778 333.408 64.9688 333.961 65.5225 334.611 cv
65.7397 334.867 65.709 335.25 65.4536 335.468 cv
65.3394 335.565 65.1992 335.612 65.0596 335.612 cv
64.8882 335.612 64.7173 335.54 64.5972 335.398 cv
64.2783 335.024 63.8984 334.69 63.4775 334.383 cv
63.4775 332.938 li
cp
1 .513726 .152941 rgb
f
65.9722 422.67 mo
65.8491 421.229 li
64.4336 422.459 62.2827 422.707 59.5127 423.155 cv
59.1812 423.209 58.9561 423.521 59.0103 423.853 cv
59.0635 424.184 59.377 424.408 59.707 424.354 cv
62.8247 423.85 64.729 423.621 65.9722 422.67 cv
cp
.984314 .4 .243137 rgb
f
29.0942 422.67 mo
29.2178 421.229 li
30.6333 422.459 32.7842 422.707 35.5542 423.155 cv
35.8857 423.209 36.1108 423.521 36.0566 423.853 cv
36.0034 424.184 35.6899 424.408 35.3599 424.354 cv
32.2422 423.85 30.3379 423.621 29.0942 422.67 cv
cp
f
112.5 435.994 mo
108.519 435.932 104.538 435.677 100.557 435.229 cv
97.1072 434.841 94.4779 432 94.2723 427.5 cv
112.5 427.5 li
112.5 405 li
93.5073 405 li
93.4586 398.187 93.5017 390.574 93.5979 382.5 cv
112.5 382.5 li
112.5 360 li
93.9551 360 li
94.0525 354.749 94.1569 349.438 94.2593 344.143 cv
94.2593 341.744 96.01 339.049 98.6888 337.5 cv
112.5 337.5 li
112.5 335.34 li
113.193 335.322 113.884 335.313 114.575 335.313 cv
118.741 335.313 122.873 335.648 126.969 336.312 cv
128.161 336.505 129.267 336.925 130.246 337.5 cv
112.5 337.5 li
112.5 360 li
134.957 360 li
134.972 360.696 134.986 361.391 135 362.084 cv
135 382.5 li
135.356 382.5 li
135.463 390.574 135.511 398.187 135.457 405 cv
135 405 li
135 421.742 li
134.893 423.634 134.766 425.368 134.616 426.927 cv
134.616 427.121 134.612 427.312 134.603 427.5 cv
112.5 427.5 li
112.5 435.994 li
112.5 382.5 mo
112.5 405 li
135 405 li
135 382.5 li
112.5 382.5 li
89.6489 371.46 mo
89.6489 371.144 li
89.6489 370.655 89.7759 370.194 90 369.794 cv
90 371.423 li
89.6489 371.46 li
.666667 .694118 .709804 rgb
f
112.5 337.5 mo
98.6888 337.5 li
99.6659 336.935 100.766 336.522 101.951 336.332 cv
105.493 335.762 109.008 335.433 112.5 335.34 cv
112.5 337.5 li
.741176 .764706 .780392 rgb
f
134.957 360 mo
112.5 360 li
112.5 337.5 li
130.246 337.5 li
132.893 339.054 134.616 341.738 134.616 344.114 cv
134.731 349.42 134.848 354.74 134.957 360 cv
f
112.5 382.5 mo
93.5979 382.5 li
93.6424 378.764 93.6983 374.93 93.7617 371.029 cv
90 371.423 li
90 369.794 li
90.4265 369.031 91.2046 368.487 92.1284 368.391 cv
93.8086 368.215 li
93.8547 365.5 93.9039 362.759 93.9551 360 cv
112.5 360 li
112.5 382.5 li
f
135 405 mo
112.5 405 li
112.5 382.5 li
135 382.5 li
135 405 li
f
135.356 382.5 mo
135 382.5 li
135 362.084 li
135.042 364.143 135.082 366.191 135.121 368.224 cv
136.719 368.391 li
138.128 368.538 139.198 369.727 139.198 371.144 cv
139.198 371.46 li
135.173 371.038 li
135.244 374.936 135.306 378.767 135.356 382.5 cv
f
112.5 427.5 mo
94.2723 427.5 li
94.2637 427.312 94.2593 427.121 94.2593 426.927 cv
93.7928 421.497 93.5712 413.935 93.5073 405 cv
112.5 405 li
112.5 427.5 li
f
114.438 436.009 mo
113.792 436.009 113.146 436.004 112.5 435.994 cv
112.5 427.5 li
134.603 427.5 li
134.398 432 131.768 434.841 128.319 435.229 cv
123.692 435.749 119.065 436.009 114.438 436.009 cv
f
135 421.742 mo
135 405 li
135.457 405 li
135.406 411.371 135.265 417.042 135 421.742 cv
f
134.394 429.154 mo
125.14 430.194 115.886 430.194 106.632 429.154 cv
103.039 428.75 100.334 425.683 100.334 420.852 cv
98.978 405.063 99.6914 371.26 100.334 338.067 cv
100.334 334.794 103.595 330.969 108.026 330.257 cv
116.508 328.893 124.845 328.909 133.044 330.236 cv
137.458 330.951 140.691 334.783 140.691 338.039 cv
141.41 371.243 142.208 405.063 140.691 420.852 cv
140.691 425.683 137.988 428.75 134.394 429.154 cv
cp
.85098 .831373 .635294 rgb
f
120.513 428.72 mo
115.953 428.72 111.936 428.459 107.375 427.946 cv
104.206 427.59 102.157 424.806 102.157 420.852 cv
101.55 413.126 li
101.55 360.879 li
101.55 339.282 li
101.55 336.663 104.289 333.303 108.219 332.671 cv
112.362 332.005 116.544 331.668 120.65 331.668 cv
124.715 331.668 128.819 331.998 132.851 332.65 cv
136.755 333.283 139.477 336.639 139.477 339.255 cv
139.477 360.879 li
139.477 413.126 li
138.869 420.852 li
138.869 424.806 136.821 427.59 133.651 427.946 cv
129.091 428.459 125.074 428.72 120.513 428.72 cv
cp
.898039 .937255 .694118 rgb
f
101.521 360.879 mo
101.521 413.126 li
114.144 417.17 126.805 417.183 139.505 413.126 cv
139.505 360.879 li
126.844 355.209 114.182 355.209 101.521 360.879 cv
cp
.2 .262745 .356863 rgb
f
133.837 392.376 mo
133.779 392.113 133.711 391.855 133.662 391.59 cv
133.547 390.977 133.597 390.382 133.767 389.831 cv
133.483 387.369 133.346 384.891 133.391 382.396 cv
133.401 381.836 133.526 381.337 133.729 380.898 cv
133.248 380.252 132.953 379.455 132.979 378.579 cv
132.96 378.239 132.983 377.879 133.063 377.498 cv
134.208 372.012 136.795 366.411 138.919 360.635 cv
132.73 357.949 126.542 356.607 120.354 356.631 cv
120.354 416.161 li
126.42 416.176 132.496 415.252 138.58 413.403 cv
136.47 409.93 134.292 406.373 133.218 402.522 cv
132.207 398.895 132.759 395.613 133.837 392.376 cv
cp
.180392 .396078 .470588 rgb
f
107.603 376.217 mo
107.354 376.217 107.122 376.064 107.032 375.817 cv
101.613 360.986 li
101.499 360.672 101.661 360.323 101.976 360.208 cv
102.289 360.09 102.639 360.254 102.755 360.57 cv
108.173 375.401 li
108.288 375.716 108.126 376.064 107.811 376.18 cv
107.603 376.217 li
cp
.85098 .831373 .635294 rgb
f
102.406 413.911 mo
102.259 413.911 102.11 413.876 101.973 413.801 cv
101.53 413.562 101.366 413.008 101.605 412.565 cv
108.301 400.213 li
108.541 399.771 109.094 399.604 109.536 399.847 cv
109.979 400.086 110.143 400.64 109.903 401.082 cv
103.208 413.435 li
103.043 413.738 102.729 413.911 102.406 413.911 cv
cp
f
133.424 376.217 mo
133.215 376.18 li
132.9 376.064 132.738 375.715 132.854 375.4 cv
138.263 360.645 li
138.379 360.329 138.729 360.168 139.042 360.283 cv
139.357 360.398 139.519 360.748 139.403 361.063 cv
133.994 375.818 li
133.904 376.064 133.671 376.217 133.424 376.217 cv
cp
f
138.583 413.86 mo
138.259 413.86 137.945 413.688 137.78 413.383 cv
131.123 401.081 li
130.883 400.639 131.048 400.086 131.491 399.846 cv
131.932 399.606 132.486 399.771 132.726 400.214 cv
139.383 412.516 li
139.623 412.958 139.458 413.511 139.015 413.751 cv
138.877 413.825 138.729 413.86 138.583 413.86 cv
cp
f
120.499 407.659 mo
117.193 407.659 113.861 407.355 110.529 406.753 cv
107.784 406.257 105.773 403.888 105.773 401.098 cv
105.773 374.126 li
105.773 372.603 106.741 371.229 108.192 370.765 cv
112.314 369.444 116.441 368.777 120.513 368.777 cv
124.585 368.777 128.712 369.444 132.834 370.765 cv
134.285 371.229 135.253 372.603 135.253 374.126 cv
135.253 401.095 li
135.253 403.885 133.242 406.254 130.496 406.75 cv
127.152 407.354 123.81 407.659 120.5 407.659 cv
120.499 407.659 li
cp
.898039 .937255 .694118 rgb
f
101.521 364.777 mo
95.7241 365.385 li
95.7241 365.068 li
95.7241 363.651 96.7944 362.463 98.2036 362.315 cv
101.521 361.968 li
101.521 364.777 li
cp
f
139.477 364.777 mo
145.273 365.385 li
145.273 365.068 li
145.273 363.651 144.203 362.463 142.794 362.315 cv
139.477 361.968 li
139.477 364.777 li
cp
f
128.16 331.841 mo
122.976 331.208 117.831 331.209 112.869 331.84 cv
112.716 330.635 li
117.777 329.991 123.023 329.99 128.308 330.634 cv
128.16 331.841 li
cp
.388235 .466667 .517647 rgb
f
135.253 428.567 mo
135.031 428.567 134.817 428.445 134.71 428.233 cv
134.56 427.934 134.68 427.568 134.98 427.417 cv
137.294 426.253 li
137.595 426.104 137.959 426.224 138.11 426.522 cv
138.261 426.822 138.14 427.188 137.84 427.339 cv
135.526 428.503 li
135.438 428.547 135.345 428.567 135.253 428.567 cv
cp
.839216 0 .0352941 rgb
f
105.702 428.567 mo
105.596 428.567 105.489 428.54 105.392 428.481 cv
103.438 427.317 li
103.149 427.146 103.055 426.773 103.227 426.485 cv
103.398 426.195 103.771 426.101 104.06 426.274 cv
106.014 427.438 li
106.302 427.609 106.396 427.982 106.225 428.271 cv
106.111 428.462 105.909 428.567 105.702 428.567 cv
cp
f
103.336 334.807 mo
103.035 336.428 103.703 337.911 104.828 338.12 cv
105.953 338.329 107.109 337.186 107.41 335.564 cv
107.711 333.943 107.043 332.46 105.918 332.251 cv
104.793 332.042 103.637 333.187 103.336 334.807 cv
cp
.74902 .768627 .623529 rgb
f
105.651 332.5 mo
104.734 332.5 103.854 333.513 103.604 334.856 cv
103.469 335.586 103.537 336.306 103.796 336.881 cv
104.04 337.423 104.424 337.768 104.877 337.852 cv
105.869 338.033 106.872 336.964 107.142 335.515 cv
107.277 334.785 107.209 334.065 106.95 333.49 cv
106.706 332.948 106.322 332.604 105.869 332.52 cv
105.651 332.5 li
cp
105.095 338.418 mo
105.095 338.418 li
104.99 338.418 104.883 338.408 104.778 338.389 cv
104.143 338.271 103.617 337.815 103.298 337.105 cv
102.993 336.429 102.911 335.595 103.067 334.757 cv
103.391 333.015 104.687 331.749 105.968 331.982 cv
106.603 332.101 107.129 332.556 107.448 333.266 cv
107.753 333.942 107.835 334.776 107.679 335.614 cv
107.382 337.213 106.271 338.418 105.095 338.418 cv
cp
.85098 .831373 .635294 rgb
f
108.517 333.592 mo
108.215 335.213 108.883 336.696 110.008 336.905 cv
111.133 337.114 112.29 335.97 112.591 334.35 cv
112.892 332.729 112.225 331.245 111.1 331.036 cv
109.975 330.827 108.818 331.972 108.517 333.592 cv
cp
.74902 .768627 .623529 rgb
f
110.832 331.285 mo
109.915 331.285 109.035 332.298 108.785 333.642 cv
108.65 334.371 108.718 335.091 108.977 335.666 cv
109.221 336.208 109.605 336.553 110.058 336.637 cv
111.054 336.823 112.053 335.75 112.322 334.3 cv
112.458 333.57 112.39 332.851 112.131 332.275 cv
111.887 331.733 111.503 331.389 111.05 331.305 cv
110.832 331.285 li
cp
110.276 337.203 mo
110.276 337.203 li
110.17 337.203 110.064 337.193 109.958 337.174 cv
109.324 337.056 108.798 336.601 108.479 335.891 cv
108.174 335.214 108.092 334.38 108.248 333.542 cv
108.572 331.801 109.871 330.533 111.149 330.768 cv
111.784 330.886 112.31 331.341 112.629 332.051 cv
112.934 332.728 113.016 333.562 112.859 334.399 cv
112.563 335.998 111.452 337.203 110.276 337.203 cv
cp
.85098 .831373 .635294 rgb
f
109.773 335.249 mo
109.773 335.885 110.147 336.4 110.608 336.4 cv
111.07 336.4 111.444 335.885 111.444 335.249 cv
111.444 334.613 111.07 334.098 110.608 334.098 cv
110.147 334.098 109.773 334.613 109.773 335.249 cv
cp
.494118 .52549 .552941 rgb
f
104.666 336.4 mo
104.666 337.037 105.04 337.553 105.501 337.553 cv
105.962 337.553 106.336 337.037 106.336 336.4 cv
106.336 335.765 105.962 335.249 105.501 335.249 cv
105.04 335.249 104.666 335.765 104.666 336.4 cv
cp
f
137.57 334.807 mo
137.872 336.428 137.204 337.911 136.079 338.12 cv
134.954 338.329 133.797 337.186 133.496 335.564 cv
133.195 333.943 133.862 332.46 134.987 332.251 cv
136.112 332.042 137.269 333.187 137.57 334.807 cv
cp
.74902 .768627 .623529 rgb
f
135.255 332.5 mo
135.037 332.52 li
134.584 332.604 134.2 332.948 133.956 333.49 cv
133.697 334.065 133.629 334.785 133.765 335.515 cv
134.035 336.965 135.038 338.039 136.029 337.852 cv
136.482 337.768 136.866 337.423 137.11 336.881 cv
137.369 336.306 137.437 335.586 137.302 334.856 cv
137.051 333.513 136.171 332.5 135.255 332.5 cv
cp
135.811 338.418 mo
134.635 338.418 133.524 337.213 133.228 335.614 cv
133.071 334.776 133.153 333.942 133.458 333.266 cv
133.777 332.556 134.303 332.101 134.938 331.982 cv
136.218 331.744 137.515 333.015 137.839 334.757 cv
137.995 335.595 137.913 336.429 137.608 337.105 cv
137.289 337.815 136.763 338.271 136.128 338.389 cv
136.023 338.408 135.917 338.418 135.811 338.418 cv
cp
.85098 .831373 .635294 rgb
f
132.389 333.592 mo
132.69 335.213 132.023 336.696 130.898 336.905 cv
129.773 337.114 128.617 335.97 128.315 334.35 cv
128.014 332.729 128.682 331.245 129.807 331.036 cv
130.932 330.827 132.088 331.972 132.389 333.592 cv
cp
.74902 .768627 .623529 rgb
f
130.074 331.285 mo
129.856 331.305 li
129.403 331.389 129.019 331.733 128.775 332.275 cv
128.516 332.851 128.448 333.57 128.583 334.3 cv
128.854 335.75 129.853 336.822 130.848 336.637 cv
131.301 336.553 131.686 336.208 131.929 335.666 cv
132.188 335.091 132.256 334.371 132.121 333.642 cv
131.871 332.298 130.991 331.285 130.074 331.285 cv
cp
130.63 337.203 mo
129.455 337.203 128.344 335.998 128.046 334.399 cv
127.89 333.562 127.972 332.728 128.277 332.051 cv
128.596 331.341 129.122 330.886 129.757 330.768 cv
131.037 330.529 132.334 331.8 132.658 333.542 cv
132.814 334.38 132.732 335.214 132.428 335.891 cv
132.108 336.601 131.583 337.056 130.948 337.174 cv
130.842 337.193 130.736 337.203 130.63 337.203 cv
cp
.85098 .831373 .635294 rgb
f
131.133 335.249 mo
131.133 335.885 130.759 336.4 130.298 336.4 cv
129.836 336.4 129.462 335.885 129.462 335.249 cv
129.462 334.613 129.836 334.098 130.298 334.098 cv
130.759 334.098 131.133 334.613 131.133 335.249 cv
cp
.494118 .52549 .552941 rgb
f
136.241 336.4 mo
136.241 337.037 135.867 337.553 135.405 337.553 cv
134.944 337.553 134.57 337.037 134.57 336.4 cv
134.57 335.765 134.944 335.249 135.405 335.249 cv
135.867 335.249 136.241 335.765 136.241 336.4 cv
cp
f
247.5 178.798 mo
245.604 178.672 243.709 178.502 241.813 178.289 cv
238.219 177.885 234.3 174.818 234.3 169.986 cv
233.989 166.364 233.908 162.216 233.954 157.5 cv
247.5 157.5 li
247.5 135 li
234.596 135 li
234.762 129.864 234.92 124.319 235.018 118.341 cv
230.904 118.772 li
230.904 118.456 li
230.904 117.039 231.975 115.851 233.384 115.703 cv
235.064 115.527 li
235.08 114.599 235.096 113.583 235.113 112.5 cv
247.5 112.5 li
247.5 90 li
234.323 90 li
234.607 88.2287 235.018 86.4782 235.553 84.7618 cv
235.927 81.6416 239.052 78.2368 243.207 77.5689 cv
244.642 77.3382 246.073 77.1469 247.5 76.9948 cv
247.5 90 li
270 90 li
270 78.0205 li
273.479 79.3227 275.872 82.5501 275.872 85.3515 cv
275.906 86.9006 275.939 88.4503 275.973 90 cv
270 90 li
270 112.5 li
276.433 112.5 li
276.574 120.192 276.814 127.818 277.031 135 cv
270 135 li
270 157.5 li
277.513 157.5 li
277.52 162.431 277.405 166.68 277.087 169.986 cv
277.087 174.628 273.471 177.641 270 178.229 cv
270 157.5 li
247.5 157.5 li
247.5 178.798 li
247.5 112.5 mo
247.5 135 li
270 135 li
270 112.5 li
247.5 112.5 li
280.454 112.697 mo
278.572 112.5 li
280.454 112.5 li
280.454 112.697 li
.666667 .694118 .709804 rgb
f
270 90 mo
247.5 90 li
247.5 76.9948 li
250.293 76.6971 253.07 76.5495 255.832 76.5495 cv
259.998 76.5495 264.129 76.8854 268.225 77.5484 cv
268.841 77.6482 269.435 77.809 270 78.0205 cv
270 90 li
.741176 .764706 .780392 rgb
f
247.5 112.5 mo
235.113 112.5 li
235.121 111.918 235.13 111.316 235.14 110.699 cv
234.287 107.527 233.85 104.254 233.85 100.962 cv
233.85 95.9287 li
233.85 93.9396 234.009 91.9571 234.323 90 cv
247.5 90 li
247.5 112.5 li
f
270 135 mo
247.5 135 li
247.5 112.5 li
270 112.5 li
270 135 li
f
280.454 112.5 mo
278.572 112.5 li
276.429 112.275 li
276.43 112.35 276.431 112.426 276.433 112.5 cv
270 112.5 li
270 90 li
275.973 90 li
276.115 96.5442 276.255 103.078 276.377 109.46 cv
277.975 109.628 li
279.384 109.775 280.454 110.963 280.454 112.381 cv
280.454 112.5 li
f
247.5 157.5 mo
233.954 157.5 li
234.017 151.085 234.317 143.62 234.596 135 cv
247.5 135 li
247.5 157.5 li
f
255.693 179.069 mo
252.963 179.069 250.231 178.979 247.5 178.798 cv
247.5 157.5 li
270 157.5 li
270 178.229 li
269.858 178.253 269.716 178.273 269.575 178.289 cv
264.948 178.809 260.321 179.069 255.693 179.069 cv
f
277.513 157.5 mo
270 157.5 li
270 135 li
277.031 135 li
277.282 143.295 277.504 150.992 277.513 157.5 cv
f
275.65 172.214 mo
266.396 173.254 257.142 173.254 247.888 172.214 cv
244.294 171.81 240.375 168.743 240.375 163.911 cv
239.019 148.123 240.947 112.497 241.591 79.3042 cv
241.591 76.0313 244.851 72.2056 249.282 71.4937 cv
257.764 70.1299 266.101 70.146 274.301 71.4731 cv
278.714 72.188 281.947 76.02 281.947 79.2764 cv
282.666 112.48 284.679 148.122 283.162 163.911 cv
283.162 168.743 279.244 171.81 275.65 172.214 cv
cp
.807843 .458824 0 rgb
f
261.769 167.526 mo
257.209 167.526 252.584 167.266 248.023 166.754 cv
244.854 166.397 242.806 163.612 242.806 159.659 cv
242.806 154.363 li
242.806 102.116 li
242.278 95.665 242.155 88.063 242.806 78.6968 cv
242.806 76.0771 245.544 75.1475 249.475 74.5156 cv
253.617 73.8496 257.8 73.5122 261.906 73.5122 cv
265.971 73.5122 270.075 73.8428 274.106 74.4951 cv
278.011 75.1274 280.732 76.0527 280.732 78.6689 cv
281.344 87.1221 281.355 94.9492 280.732 102.116 cv
280.732 154.363 li
280.732 159.659 li
280.732 163.612 278.685 166.397 275.515 166.754 cv
270.954 167.266 266.329 167.526 261.769 167.526 cv
cp
.898039 .615686 .270588 rgb
f
244.456 105.821 mo
244.106 105.821 243.773 105.619 243.622 105.279 cv
243.418 104.819 243.625 104.281 244.085 104.076 cv
254.511 99.4463 268.42 99.3955 279.519 103.945 cv
279.984 104.136 280.207 104.668 280.016 105.134 cv
279.825 105.601 279.294 105.823 278.827 105.632 cv
268.162 101.26 254.816 101.305 244.825 105.742 cv
244.705 105.795 244.579 105.821 244.456 105.821 cv
cp
.807843 .458824 0 rgb
f
242.776 105.761 mo
242.776 139.276 li
244.517 154.43 li
244.948 158.188 247.674 161.302 251.354 162.17 cv
258.713 163.906 264.726 163.913 272.112 162.183 cv
275.822 161.313 278.585 158.199 279.014 154.413 cv
280.762 138.973 li
280.762 105.761 li
268.1 100.091 255.438 100.091 242.776 105.761 cv
cp
.2 .262745 .356863 rgb
f
280.589 140.492 mo
280.762 138.973 li
280.762 134.72 li
242.776 134.72 li
242.776 139.276 li
242.916 140.492 li
280.589 140.492 li
cp
.807843 .458824 0 rgb
f
275.829 118.924 mo
276.974 113.438 278.051 111.294 280.175 105.517 cv
273.986 102.831 267.798 101.49 261.609 101.513 cv
261.609 163.474 li
265.282 163.482 268.411 163.129 271.649 162.388 cv
275.475 161.513 278.075 157.96 277.718 154.053 cv
276.509 140.85 li
275.497 137.222 275.749 119.306 275.829 118.924 cv
cp
.180392 .396078 .470588 rgb
f
248.858 121.099 mo
248.61 121.099 248.378 120.946 248.288 120.7 cv
242.87 105.869 li
242.755 105.553 242.917 105.205 243.232 105.089 cv
243.545 104.975 243.896 105.136 244.011 105.452 cv
249.429 120.283 li
249.544 120.598 249.382 120.947 249.066 121.062 cv
248.858 121.099 li
cp
.807843 .458824 0 rgb
f
274.68 121.099 mo
274.471 121.062 li
274.155 120.946 273.994 120.597 274.109 120.282 cv
279.519 105.527 li
279.634 105.213 279.98 105.051 280.298 105.166 cv
280.613 105.281 280.774 105.63 280.659 105.945 cv
275.25 120.7 li
275.16 120.946 274.928 121.099 274.68 121.099 cv
cp
f
261.755 142.82 mo
256.875 142.82 251.936 142.159 247.029 140.853 cv
247.029 118.23 li
247.029 117.171 247.707 116.23 248.71 115.89 cv
253.077 114.408 257.454 113.659 261.769 113.659 cv
266.084 113.659 270.46 114.408 274.828 115.89 cv
275.831 116.23 276.509 117.171 276.509 118.23 cv
276.509 140.85 li
271.587 142.158 266.637 142.82 261.755 142.82 cv
cp
.898039 .615686 .270588 rgb
f
272.863 126.975 mo
272.863 121.201 li
272.863 120.664 272.512 120.184 271.997 120.033 cv
268.563 119.028 265.135 118.52 261.769 118.52 cv
258.403 118.52 254.975 119.028 251.54 120.033 cv
251.025 120.184 250.674 120.664 250.674 121.201 cv
250.674 126.975 li
250.674 127.646 251.218 128.189 251.889 128.189 cv
271.648 128.189 li
272.319 128.189 272.863 127.646 272.863 126.975 cv
cp
.2 .262745 .356863 rgb
f
271.997 120.033 mo
268.563 119.028 265.135 118.52 261.769 118.52 cv
261.552 118.524 li
261.552 128.189 li
271.648 128.189 li
272.319 128.189 272.863 127.646 272.863 126.975 cv
272.863 121.201 li
272.863 120.664 272.512 120.184 271.997 120.033 cv
cp
.180392 .396078 .470588 rgb
f
242.074 103.761 mo
242.074 107.406 li
240.651 103.386 239.925 99.1519 239.925 94.8867 cv
239.925 89.8535 li
239.925 85.5884 240.651 81.3545 242.074 77.334 cv
242.074 103.761 li
cp
.807843 .458824 0 rgb
f
281.554 103.761 mo
281.554 107.406 li
282.978 103.386 283.704 99.1519 283.704 94.8867 cv
283.704 89.8535 li
283.704 85.5884 282.978 81.3545 281.554 77.334 cv
281.554 103.761 li
cp
f
242.776 112.09 mo
236.979 112.697 li
236.979 112.381 li
236.979 110.963 238.05 109.775 239.459 109.628 cv
242.776 109.28 li
242.776 112.09 li
cp
.898039 .615686 .270588 rgb
f
280.732 112.09 mo
286.529 112.697 li
286.529 112.381 li
286.529 110.963 285.459 109.775 284.05 109.628 cv
280.732 109.28 li
280.732 112.09 li
cp
f
245.017 75.2075 mo
245.017 80.2632 li
250.972 79.5137 li
250.972 74.458 li
245.017 75.2075 li
cp
244.675 80.9917 mo
244.449 80.9063 li
244.376 80.8418 244.333 80.7485 244.333 80.6504 cv
244.333 74.9063 li
244.333 74.7344 244.462 74.5889 244.632 74.5674 cv
251.271 73.7319 li
251.376 73.7217 251.467 73.7505 251.539 73.8149 cv
251.612 73.8794 251.655 73.9727 251.655 74.0708 cv
251.655 79.8149 li
251.655 79.9868 251.526 80.1323 251.356 80.1538 cv
244.718 80.9893 li
244.675 80.9917 li
cp
.807843 .458824 0 rgb
f
272.657 79.5137 mo
278.612 80.2632 li
278.612 75.2075 li
272.657 74.458 li
272.657 79.5137 li
cp
278.954 80.9917 mo
278.911 80.9893 li
272.272 80.1538 li
272.103 80.1323 271.974 79.9868 271.974 79.8149 cv
271.974 74.0708 li
271.974 73.9727 272.017 73.8794 272.09 73.8149 cv
272.163 73.7505 272.256 73.7227 272.358 73.7319 cv
278.997 74.5674 li
279.167 74.5889 279.296 74.7344 279.296 74.9063 cv
279.296 80.6504 li
279.296 80.7485 279.253 80.8418 279.18 80.9063 cv
278.954 80.9917 li
cp
f
261.605 169.19 mo
255.766 169.19 249.997 168.632 244.338 167.515 cv
244.009 167.45 243.794 167.13 243.859 166.801 cv
243.924 166.472 244.249 166.257 244.572 166.323 cv
255.736 168.525 267.342 168.525 279.061 166.322 cv
279.392 166.261 279.708 166.477 279.77 166.807 cv
279.832 167.136 279.615 167.454 279.285 167.516 cv
273.351 168.632 267.442 169.19 261.605 169.19 cv
cp
.603922 0 0 rgb
f
249.982 169.651 mo
249.821 169.64 li
247.961 169.395 246.076 169.084 244.22 168.718 cv
243.562 168.588 243.133 167.95 243.263 167.291 cv
243.393 166.633 244.025 166.204 244.69 166.334 cv
246.496 166.69 248.33 166.992 250.14 167.231 cv
250.805 167.319 251.272 167.929 251.186 168.594 cv
251.104 169.206 250.582 169.651 249.982 169.651 cv
cp
f
274.216 169.546 mo
273.618 169.546 273.097 169.104 273.014 168.495 cv
272.923 167.83 273.389 167.217 274.054 167.126 cv
275.668 166.907 277.314 166.639 278.948 166.332 cv
279.61 166.208 280.242 166.643 280.367 167.302 cv
280.491 167.961 280.057 168.597 279.397 168.721 cv
277.724 169.035 276.036 169.309 274.382 169.535 cv
274.216 169.546 li
cp
f
gsave
270 433.453 mo
270 427.5 li
247.5 427.5 li
247.5 432.941 li
244.722 432.565 241.791 430.614 240.652 427.5 cv
247.5 427.5 li
247.5 405 li
239.98 405 li
240.176 398.559 240.492 391.168 240.714 382.5 cv
247.5 382.5 li
247.5 360 li
240.989 360 li
241.047 352.293 241.162 343.368 241.411 341.258 cv
241.564 339.984 242.175 338.663 243.127 337.5 cv
247.5 337.5 li
247.5 334.457 li
248.002 334.285 248.525 334.151 249.065 334.064 cv
253.309 333.382 257.517 333.045 261.689 333.045 cv
264.475 333.045 267.245 333.196 270 333.494 cv
270 337.5 li
280.004 337.5 li
281.095 338.848 281.73 340.404 281.73 341.848 cv
281.862 347.916 281.996 354.005 282.118 360 cv
270 360 li
270 382.5 li
282.626 382.5 li
282.867 390.631 283.14 398.249 283.279 405 cv
270 405 li
270 427.5 li
282.452 427.5 li
281.29 430.678 278.261 432.645 275.434 432.962 cv
273.622 433.166 271.811 433.329 270 433.453 cv
247.5 382.5 mo
247.5 405 li
270 405 li
270 382.5 li
247.5 382.5 li
247.5 337.5 mo
247.5 360 li
270 360 li
270 337.5 li
247.5 337.5 li
clp
239.98 333.045 mo
283.279 333.045 li
283.279 433.453 li
239.98 433.453 li
cp
.666667 .694118 .709804 rgb
f
grestore
247.5 337.5 mo
243.127 337.5 li
244.205 336.184 245.719 335.071 247.5 334.457 cv
247.5 337.5 li
.741176 .764706 .780392 rgb
f
270 360 mo
247.5 360 li
247.5 337.5 li
270 337.5 li
270 360 li
f
280.004 337.5 mo
270 337.5 li
270 333.494 li
271.365 333.641 272.727 333.825 274.084 334.045 cv
276.541 334.442 278.633 335.807 280.004 337.5 cv
f
247.5 382.5 mo
240.714 382.5 li
240.777 380.051 240.833 377.498 240.876 374.838 cv
236.763 375.269 li
236.763 374.952 li
236.763 373.535 237.833 372.347 239.242 372.199 cv
240.923 372.022 li
240.934 371.394 240.943 366.075 240.989 360 cv
247.5 360 li
247.5 382.5 li
f
270 405 mo
247.5 405 li
247.5 382.5 li
270 382.5 li
270 405 li
f
282.626 382.5 mo
270 382.5 li
270 360 li
282.118 360 li
282.158 361.997 282.198 363.984 282.235 365.956 cv
283.833 366.124 li
285.242 366.271 286.313 367.46 286.313 368.877 cv
286.313 369.193 li
282.287 368.772 li
282.372 373.461 282.494 378.058 282.626 382.5 cv
f
247.5 427.5 mo
240.652 427.5 li
240.337 426.639 240.159 425.69 240.159 424.66 cv
239.682 419.104 239.745 412.738 239.98 405 cv
247.5 405 li
247.5 427.5 li
f
261.552 433.743 mo
256.925 433.743 252.298 433.482 247.671 432.962 cv
247.614 432.956 247.557 432.948 247.5 432.941 cv
247.5 427.5 li
270 427.5 li
270 433.453 li
267.184 433.646 264.368 433.743 261.552 433.743 cv
f
282.452 427.5 mo
270 427.5 li
270 405 li
283.279 405 li
283.443 412.95 283.422 419.696 282.945 424.66 cv
282.945 425.69 282.767 426.639 282.452 427.5 cv
f
281.509 426.887 mo
272.255 427.928 263 427.928 253.746 426.887 cv
250.152 426.483 246.234 423.416 246.234 418.585 cv
244.877 402.797 246.806 368.992 247.449 335.8 cv
247.449 332.527 250.709 328.702 255.141 327.989 cv
263.622 326.626 271.959 326.642 280.159 327.97 cv
284.572 328.684 287.806 332.516 287.806 335.772 cv
288.524 368.977 290.537 402.796 289.021 418.585 cv
289.021 423.416 285.103 426.483 281.509 426.887 cv
cp
.113725 .596078 .552941 rgb
f
267.628 424.022 mo
263.067 424.022 258.442 423.762 253.882 423.25 cv
250.712 422.894 248.664 420.108 248.664 416.154 cv
248.664 410.859 li
248.664 358.612 li
248.137 352.161 248.014 344.56 248.664 335.192 cv
248.664 332.573 251.403 331.644 255.333 331.012 cv
259.477 330.346 263.659 330.008 267.765 330.008 cv
271.829 330.008 275.934 330.339 279.965 330.991 cv
283.869 331.623 286.591 332.549 286.591 335.165 cv
287.202 343.618 287.214 351.445 286.591 358.612 cv
286.591 410.859 li
286.591 416.154 li
286.591 420.108 284.543 422.894 281.373 423.25 cv
276.813 423.762 272.188 424.022 267.628 424.022 cv
cp
.270588 .721569 .631373 rgb
f
250.314 362.316 mo
249.965 362.316 249.632 362.115 249.48 361.775 cv
249.276 361.315 249.483 360.776 249.943 360.572 cv
260.37 355.942 274.278 355.893 285.378 360.442 cv
285.844 360.633 286.066 361.165 285.875 361.631 cv
285.685 362.097 285.153 362.321 284.687 362.128 cv
274.024 357.757 260.676 357.798 250.684 362.238 cv
250.563 362.292 250.438 362.316 250.314 362.316 cv
cp
.2 .262745 .356863 rgb
f
248.635 362.258 mo
248.635 395.772 li
250.375 410.926 li
250.807 414.684 253.532 417.798 257.213 418.666 cv
264.571 420.401 270.584 420.409 277.971 418.679 cv
281.681 417.81 284.443 414.694 284.872 410.909 cv
286.62 395.469 li
286.62 362.258 li
273.958 356.587 261.297 356.587 248.635 362.258 cv
cp
f
253.64 391.014 mo
248.635 395.772 li
250.375 410.926 li
250.649 413.315 251.854 415.442 253.64 416.899 cv
253.64 391.014 li
cp
.113725 .596078 .552941 rgb
f
281.688 375.421 mo
282.833 369.935 283.91 367.79 286.033 362.013 cv
279.845 359.327 273.656 357.986 267.469 358.009 cv
267.469 419.97 li
271.141 419.979 274.27 419.625 277.508 418.884 cv
281.333 418.009 283.934 414.456 283.576 410.549 cv
282.367 397.347 li
281.355 393.718 281.607 375.802 281.688 375.421 cv
cp
.180392 .396078 .470588 rgb
f
281.131 391.079 mo
281.131 417.236 li
283.176 415.78 284.577 413.508 284.872 410.909 cv
286.62 395.469 li
281.131 391.079 li
cp
.113725 .596078 .552941 rgb
f
254.717 377.595 mo
254.469 377.595 254.236 377.442 254.146 377.195 cv
248.729 362.364 li
248.613 362.05 248.775 361.701 249.091 361.586 cv
249.402 361.469 249.754 361.632 249.869 361.948 cv
255.287 376.779 li
255.402 377.094 255.24 377.442 254.925 377.558 cv
254.717 377.595 li
cp
.2 .262745 .356863 rgb
f
280.538 377.595 mo
280.329 377.558 li
280.014 377.442 279.853 377.093 279.968 376.778 cv
285.377 362.023 li
285.492 361.708 285.842 361.548 286.156 361.662 cv
286.472 361.777 286.633 362.127 286.518 362.441 cv
281.108 377.196 li
281.019 377.442 280.785 377.595 280.538 377.595 cv
cp
f
267.613 399.316 mo
264.172 399.316 260.699 398.987 257.23 398.335 cv
254.7 397.859 252.888 395.611 252.888 393.036 cv
252.888 374.727 li
252.888 373.667 253.565 372.727 254.568 372.386 cv
258.936 370.904 263.313 370.155 267.628 370.155 cv
271.942 370.155 276.318 370.904 280.687 372.386 cv
281.689 372.727 282.367 373.667 282.367 374.727 cv
282.367 393.033 li
282.367 395.608 280.554 397.855 278.022 398.332 cv
274.541 398.986 271.061 399.316 267.613 399.316 cv
cp
.898039 .819608 .670588 rgb
f
248.635 368.586 mo
242.838 369.193 li
242.838 368.877 li
242.838 367.46 243.908 366.271 245.318 366.124 cv
248.635 365.776 li
248.635 368.586 li
cp
.270588 .721569 .631373 rgb
f
286.591 368.586 mo
292.388 369.193 li
292.388 368.877 li
292.388 367.46 291.317 366.271 289.908 366.124 cv
286.591 365.776 li
286.591 368.586 li
cp
f
250.533 337.146 mo
257.172 336.312 li
257.172 330.567 li
250.533 331.402 li
250.533 337.146 li
cp
.113725 .596078 .552941 rgb
f
284.813 337.146 mo
278.174 336.312 li
278.174 330.567 li
284.813 331.402 li
284.813 337.146 li
cp
f
250.533 335.932 mo
250.533 337.146 li
257.172 336.312 li
257.172 334.716 li
250.533 335.932 li
cp
.2 .262745 .356863 rgb
f
278.174 334.716 mo
278.174 336.312 li
284.813 337.146 li
284.813 335.932 li
278.174 334.716 li
cp
f
255.842 426.146 mo
255.681 426.137 li
253.82 425.891 251.936 425.581 250.078 425.215 cv
249.42 425.085 248.991 424.445 249.121 423.787 cv
249.251 423.128 249.885 422.699 250.549 422.83 cv
252.355 423.187 254.189 423.488 255.999 423.727 cv
256.664 423.814 257.132 424.425 257.045 425.091 cv
256.964 425.702 256.441 426.146 255.842 426.146 cv
cp
.603922 0 0 rgb
f
280.074 426.041 mo
279.477 426.041 278.955 425.6 278.872 424.99 cv
278.782 424.325 279.247 423.713 279.912 423.622 cv
281.531 423.402 283.179 423.135 284.808 422.828 cv
285.472 422.709 286.102 423.138 286.227 423.798 cv
286.351 424.457 285.916 425.093 285.257 425.217 cv
283.587 425.53 281.899 425.805 280.24 426.03 cv
280.074 426.041 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.1.0
%%For: (\702\740\753\745\760\750\777) ()
%%Title: (170903_Cars and trucks top view isolated on transparent background.eps)
%%CreationDate: 9/3/2017 4:29 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6B7&VtgHYVK^5c^<"/J6h`4_tp',$Ii5^G:q^nI,lAp3mes0Fp>/s:eDm-`Y[/D"2aA'(XEZg"Ad`F<sIBb!4)UJjsWIr5LY
%5ZA;_!;sb4n\<W),ND\jIn5\[/&SgP)&.C/7ITtLB$9Q6[f`U:=sn9he\N1VE2U0Kk0H;uV,`tW9HkjuA;unH21'1W&<L?0b2co+
%iN#-j"Y,&K-sqGF[6[hj*t/,_TPi9Ij^F<g&i'[k$U%b[Fe_1bB`l9>4G=qm+t)?LMgAIB00j+'!>bSL!\XXi]qu6C"5IM(V#l^1
%Du`oN$(Q3J:*5aa5XR+!O0S]%.9:FDm/Ne2r4bl_q?3G$!$;bk4,$!>[_ZAR$#1Bkk,\XN8-:OnKU@E2/EuP>9,m*9<#d:*`'>%:
%6RHVY?ire6<</?uBN!oB&2J%7G>5.<0_D!lJKnI$l93=BM;Fn=qunW_\V$/q3GdrnX,\n7Wfg2MMNr[+<qR4>bq5N(BulftAE[ri
%U87JIq>g;_fc!35D[-urIWm\dkI"YXoJG-6jLhO;9'/!?1s-/15RO_M71QQ7aoiF+Ymq/ca3"Hl2S2jh""\BB/45=0JErd#N4REi
%[aeo6j^HK6\kX\q!<rLWA;D\Q+4^@#YmLUU%.oS)43P=5:'pZ,@])ZIFJ_u2R;HVg5"m;S@s<IL\'2GVekMf]TSd10Op,F0S=-%#
%d=E&4n\6mX:3e:qL>_0%cQ%+LSXTAps$DRB=k3\#USA(`b5ci-%YPmKQ?hO[*rhA!7p]Z@*tJ2Lq#^=9JNOPB/'Fjm:aT8o27J(U
%1nu"]dW2Ul%k<Qge2FJhDmb%r<sE7Ipi862?@Dt_e2Bh*_r<nb/XRo;Fp7AAjP]n8INce`$e?mX^pFC<7@R.N\'pojk('Z-Co`)l
%-u&_IV`_aQTEr#Y8"SZn5EIOdEHqXl"T0QJ6@aP3>Ot/]f9PUucs()u[Z@K^_a'olFgN2ueA'o?&h"0Q/+]O-!'C6c5d4OK+\f<H
%>)&""K3M\FKDsa3<\f,_FGQn!`%,1hBnHU,)>-b4s3J*jb.&SB$N*u4l(J1LJ0j!6Y<Mc_>rGnV^[:__Ok)VR5]@`KiiM"R3%X*i
%^a&+`!MX).Qnq]2KJ1u.gW*-m*2\6A$<Eb>5Qtr:JPg.G`F&Rpm`Pc4>,u5aHWmme<!(1uYho_N9XFCFkaNe:c?;7?^^\,s%,3D9
%m?!XS_M$"?C6apT8:D/_OB\@&1sgT?o+(JoIo0+(G6(IE-":,KIio1;kqPR*<Df8as/tfn6]K;m4cmROU'_]G9ZFIIngpsUXR-T&
%^nJ,oH%CSX(<FKA_1jg?@OideD%,I/OJ$ctam[<JeP-.6WW?Rt$%q>p1rZ(*#i+u?H-3&g%:(bN?igrh%ZQ%"K/AlpLL?2>Q7DCN
%+qVh3TsMs)@_3?k>n4dh&7:XkF#5p8Z=Y!PZ?Ud'!mgt<.;_)kJSgL[4jBUMBb5Sc)\k?5d<`R)]\3[FrbT&)i+3TNZ=fDW"!,;e
%Rt*3?lY0[o9#G=BH[5ooE.P,rBAgLWIgpkC#S+KUYmdrW%VukGV4BYAoL!C'/ZOPCe/O#HF<.KCaT)Q(iT:r5PK:E_>2=r,_G1oi
%W;7&2&q-$!IOt)g%iPBE3Y>%BR3G[mVFslUI0D2EplLK0Sn1:fnfc5\Y7n_o%fA/`K8'n&/@nQ**7#NM%Yh[f&586:qK._T;H"=i
%<;n0FFj/j\5YE?N`9AL-\16^?o24"E,oejLWm7hs?5[E@HjN4SIi4ot(id,hAZ`.KHi!UN\>gWqn^)cNE3O[`(Ts\1LFk_6LJ?tG
%CaS\rI`1jM5t`k*!tBkFO#?q`7OaeD?:@)s$P#@0ViID%WAEj8AooAn#;$2TFb3<:1a.V,eU&4%=8@rs-2lj&OttctZ]?GQ5.\pU
%iW9:Edi$e1la=OR@Oh+0;`S8@Q!6rDB$!l-WSH9&j_?pf`:C#de*&G3F)s%'o7?RU319BC(qH$W/`q)3\_LXH\!Y>jk&N/1'>E4+
%/uelt>K)=t21L(5c+,7s%H_d3KUDH.Nj$1fhjEljTc^D+I"R!bg_rpSoR@]`cKaJf5H(IP*sVT6^t5*9,lcjPi(tBdqhEZn::Akm
%a3FV=D<?2)=f_5g_$=$9VL>B-B:PuNiBZKp#!W,Up!5;[lfZ@0(;9Y3S-aXPE'Be&JpH_B5%Xspk[@-MV9D\aTQU0'2-T(ajCA)q
%R/+((G4\Q:kSEtD!IYqjkmr+uXeHU^>0G5a4&,]SEjaid)4pl1T[-;]2C>VL:ncYtIkkKE3Lt+W7>C?kf<[XOAf4rbbkOjK9]ph\
%nWsb@rqc1&UL5"26/LK+fB2O3UM/V%hEle(%!m:k$Srn!HuapNk4]"m?Q?Q-jd8I>phlRQT0TcOa+0I1-tpW=BR_'h^df*eS?s>(
%aoR?2GXC-FrQ)e#[N-^:8]ecn[N5;<n`CX2ENNj^)Jso\#CHL"KB#'hJj6U$rgA?1.h-g)pZafhjBP/9r^YK,Boh/o`T!-.ifqbK
%E>#gKP\IRh4^J*2`rbMl+7Tqk=D,WT2ZF_'D+&epU`!OQA_G$_VXJejac?k:%Yd/XR%)'OWW=bDrI#?aYCVb%O.-],>1FJdJT[IO
%X.s"-f58;B:46OE$r01("*jY;oO?CflSj6eZiI95G^Wrgo(C8XXFo,Kpsd6C&9@q\d=:s;moO]%Gs2DtVdmqsmp:Ct5@7dlq`#]Z
%LL9fQLg9*7li+1#d:Rn#oFk@[/gsg15/3k6bl6:jntZpMF4J<Z#Ve7MEl,jl7]N/)3dRj*\'PZ-pt=::.IpL0?2E2Qqn.<O7D;AX
%+26D%qu)HEiQG;_2JJrDD.s_*rX@>Vet(,1`t-D=qN01W5]o86E9C]-;uR:$3r0FtD?_0V(BjmcO"Br`?"iloB+APfIPJk$h^A?#
%J'Bseq<:V[Nc/JN$O!dH#sO$0)bBJi:%nV'PpNcfgNkmfLo)[mX&]])1OqY'j-"kVZ,K:Z9eO]f\_@9dI?bWiZfB(]Q--<or*V%?
%Z40+t<FYdfB;Bcqj(CoAkn;G:?R;N!qPjGaiJ%=K#?oG$JmukUMlM/\;qC9K#%rj3L.?l"cYWJ=22]Jh8rf4bd5<$'C4Ou]"o`,A
%%tS!6Y7dkto@S31BXRc/lYV(/:ul,LC\jIYRU81`coOYNf,1ji]/]Qq(UJOB\P;0IS4)ll`8&RRU<;I@ap`B0?QEY-HhZMFb']aJ
%nT,N$*$.QE`kNEoq$q%7r!9PeMm=1KIS8jkrNdo;mr0&]Nt?@G,;7?:bkG6S+&e]K=d3&WLm]?*^=?ANb',h'i^\g8)0i"u5ZsUG
%R:UdC%VJWghr-,D+!KbN&n^2Uauo%=bi>*0?QJPJW:?.]SF=YmHl^+/=CV9t&"+M,r)PGaP(R[qIpjPqP")pC]_oq\GOmeCICBU8
%^Z@U7Ib&,GpFS0/>l+r48IJd-i7]1/RL_Vgi7\7aE\Eh%aB=13h[e:[B\76XC5ZbBJSLfB[7.=.5d`U;[7.1*5W)oI7d^Pqr6$H%
%jq6BrW8KnJ!P%>_TC58?U)Wo)_4hl#\rjH@'oYBM<hZAgHMJ%X1B'4](J/-=U5oCsR+Fu<BB0?P3Q8c%H$Ke`kFROLm4DZkf!I%f
%s&Z\6!Hs6.!iu\,Acgo:%X83XmXQ+)hfD>4ECJ.3MAhO(7]39<N6^K+,,Qp@e[7]s(FBd%?R8mj$h(3c0%O:`>1:sTk/7l*+5C&k
%FYf-*h"WX?U!`W2fu:83+69$dWJWnpk2mN\@ejH@0u.G*RJ"l*l(,'3s#T"QGKi=-CsIf"Ib0$dn6ht<r<rLL?O6iagK\fV!hXPB
%3C*c)J^%G._0<JSc,X:)F4)rh.0h-pZ@ri31/'a^7*36j[N-^:8]ecn[N59fo]?t`F00'`)Jso\-\V:k&!HOo&b/F(?[V+IpsO(-
%p4'ip9mhltho5T`@fLYb0T5neIp];G^]04r#4;J4b`5KS=mYs5i='Y0k;roq^>JLJ8eucfZP3m$p3^LlHEu2p?0qC4S@d$nkH>f3
%g<e.VE6N_0pFXMB5eo%deM;VL(T:op)Zr>:Xh\.;I0esen7D25*uHs'e[13?oR#UV7K-j+$\"YnY?2M3$qk1)_3EUR;mhXX4uQ<U
%kI<?a_ne9;+^=lYm4>H&q#^Qk?RE\Ni(gt`l^]%-GNh1YVeX`+SKEU>dK_is]t._I[*HV7X2Xqg@f:,JI^W?C>HFIA7^0f\5'Auo
%^Pql*0^6%\WF<rHr$q/uI#+Q,5g&7^%70m1b;<o8L#mRsBRK'tPVesZjK45N0&?Mr//e,mH3FGc^$g*@hTsN;g6-qpIQL`olfN6e
%"jHnt"Z*#O$0W0#\hSZ^''4=>/+[>dJ%/Uh=Emt"]IXh)((2e6//KqFi.Vt_'aCeT//DP-$SRElQc6hb@c:n4AtZ7:k4/&Mf=tEQ
%=tCeEP*)Ir:S$edUe`SUbksfUGPf8THS17//t84s,ku8l>2]E#ip>\jb8:pMA)ce<4G(@m\7EI;%'tE)KV&VjB)Rl!5B^.619hZ9
%s"=@sk/YG:7f7<`2D/lTR]XDGE<F[+%$$5bR/TI*j#lb=IfdD%[kB=N?hu62:#oW<%BXCE>l=6>hmn&I*g,^%pf7=K`5k+p5[/W]
%^,VV[O+FT;lg"XdKq;WD#mGD!LOB#eB@Y&+aWdH^Q=85*7`k/_QhU;sjD4e73PaP:A`%Pa0Pd!MNSB'VA!Fq@D'!;&/C1CmpX"Z_
%n)TQtpf.Ec45p)IGPt!6d>)`>%+Ke+LM"deCaqYhi>76&XPa<lIMu3nk;b-*`B)!IbfINO3ek"Da-c)kGd38`qgD$2#4!+TA6>pC
%bkO`@=N?e/(gj@S/ClQ<A/tbIr!/[o__*`0m9f39qbU2P?U">W2*\7ldjbI%F_2P@5.\PkV@)B`s$_-+'F2XN122;iR\<$YP0riC
%+TY%1AIBbI%QAQcm;l[b+24NpM8)Y2-Ka>dS$LVsZT\88W-9_?Ad'7PYEH$Y*L;9T#k<,9Sb!-aht*S9`B?R%D)2:g%/I`Rq7gP*
%45RL-B4S(9bdO.2)3K?4,`<%S()QCd@5mcI1IqVscd]o**I.LR7?>c")t^`XIS.LaH.W1.aa>]Jq?j37IH(4]/j3?B&+UZdm'g.H
%AXW"1i60*gQV$)ScI6UeO*ML2^1Q<EQQJT>qLL;,@.<&5n26RKQ7Z.s2eQbLhT*a!3F%AQ^@+ZVls=&.N4kV%r<&fGAoim`ggW1N
%R*GS:cfTT`L5Xa?@Q(]_bq3OK,J%!IXI??gS<"Tqk&<NI6`S+IDD@\d9]sX=FD`h(>>43^n[hNYDG7B?mqI6^^s(-dU?l>I2^bpl
%J#8\-q4')ppi"C>^=t<Cq#!I-efjRQh(.Go^:(OQ@WATi59>GAqUU.f])T7R+CfE=k;U$rj(jZKqtkg4RIBQ-jd;MY?>G,F.K9#8
%m;bk#1j9!\bNrsYA+49gf*ZDFn>kY`pV<O#ibk!7!e0HA1`rLmBCEI#q,P^(\p#t'9q^oY7lH8/kuks6D_elnru88MNWHj?R@B6:
%Zf13Xig09'm*UlK>Z*1mJZk6_a,.)#YZK:'HEj4?$ed$"YEI*'mkjkUMkZeOWN7_>1->Gc2Y!\5WL9cqK[2Aeej]bkV7sk72(\3k
%=)*4&m@g_#%#=DSjH4iF!N!7jb3'*d62SX[;qaKB-LYksH1Q58K)0HC)H@R#g_\9$54ct<Et\fS(jTr65;Deh(AT`]Hsi2`D<B0I
%g!N#1TNbq=aNeWF41@N'+spL37/srfW+]W.>R*]iMC)q!2Yq=SPeUk4[oi!g73qYGkP>%ZHI"bb[#@::1FCBQjq.`D`$`f$>Q(?;
%OD'qkQui?E,m-B\'CY'/)G13W[dE"NO#OhXMebIcctMaZIP51c36j,Vcht<JabYF$2U3Y@c2-)VB3^ktZ-eUQApnLf@u&%UpeAcJ
%H!EXAr7KqW/*NBCHi-nsk0bKgf2$?=DBt[S)i;;jDnUS^)eQ!ShQs_Zkc9gC1T$Rc+E)%g3ZlscbQWYAK$sT.Nf_KFJd*0%XT-:'
%3B>P77ZW"kh'W'jR9e#&SUTXkZOIT*/)^<%+-/#AaI)?io_[2t^-nL_n,+>@e42>Zo63kr(RIh>6GNOg,kilPr>]Vp_Nf<n<9^kt
%T"?sj2iAV$F5Ujj%gf$k5!FmpS'JqJq2OZ.5eS":s0Z0T>LRq%U\BJCUpF[lJQDJSh76Y7irVF</Wdd"ITO!,l7YVjm''F!S4a^p
%:/2Rg"&.Xb]@l/[c+_oVf^B>_aY,dsJu1Ns;smOZlh"tAIS!rPIK":bc--E,TDg``/f$XT<51*U>V(:SQ9Hl!d?1n+X0n>Rr7qjm
%3+D]1N`c9-%R0\58?7RebIh@H<ThDa:n@s!?I$bi!Ru^=6&Ae@8\K"`a>\VHn#VH(.JR2B2$AE$UYh@<$mhoc=Uud)_gWhLWcb\[
%h@#kJWdr-(0*Cud8o(hn3Z\;RdZS=Q[_Ue<8n6*2X`,Cp0a*0&g%c)O:#HOS0T!\$3gmj*kl2'DrXf,.qu!Mi?(s8+_OIJ#TKf#i
%bb#o?Jt4Z]ka7n@.k&2Sc@D8>/dh[DL[NN*Toia8WOb<_'hU>?UD(Eg=j-K2$sOLlk4iE)JQ?J[.@/K[7YN>@1Rn6]KfG<1SbF\p
%9b4B.iQT-7?87"l<RG#EBZWdb%_DW3a8_OB0mJ!HGs?k:!iLU)-RM[g"2):"0>YD'=?l.C!RN\k6sWP@"-(39(>(*M]tmg];J)gf
%1^9.3U'puq'6r8b8t&Z=6aZsC,k1=hkc1h!Id!?oWc`q(XOpP83M;>Q4K$7uJ;NfZ^p#<>DiE^Z?KT(V-q]@"*u%RL3$E7A_<O6n
%#1dPoLPJYB+kb:*eUO<U/Q;i>8":Y%#fb[M-?D@2nUDdI0;Eo$-;Z&\Vd:6-B(/Ij8,C6bPfPIrC4T=`/l$Dl-nu&/,*l^a<J:sh
%,4P)Q@<bN[_1N0#MN]2cYpq*/*Yt]^5cs:L,qMl.JQi(+C.Z&^.hILr5o(>2^G2<Y"YdCcY=1p7DcL-+6u`6+$^d@i;k2&_?to^@
%s"7!MN3&c<*[>[)Jmp34AL.ANPmT4&&`<aA97lLo/Dt7D=!,6."3B)KXhb[-=%/n?D7OnFr@_Q.q$$f9??M+U-9+b_i7`i0F".\*
%8eIkEkbtf00eh[$n]2$7"fs,GB`TRgC>_#?.GnZQhaA8"Hn<jDbfYuS2A18!,p#/S0EM0'B*l3^)"9).5N#mOqYS.1/1\%X'NK_5
%)Q3g?'m]SIb(?;-[VYu4UhD&0e#<uGOOG"&$X-1F%!4$kU&5eR6P#NVLAmj$N^#^]OVVj7Ji]c9r:.NgAXoVa2s>:%lh*J_(Cg%(
%0]H6CKi37_F5Y@bpiEa]15tn#OE@niaSraCh)l89D`AB[V+.S@C]0_Qcn'fV(4Wa8Ad_Z4s,ic]T%lmh=E::`b-8!l#&.oSe@PL^
%AS49+LIl52%:g%ICh$dIhR*F'cG%j/<AjeS/!IE.<aS&G*aF+"X`aIn5I=aHBBn=r+GMPHT!`RJl-mbb=&mr;<.W]N^E3Ze5c$nt
%E/&Jo6X:u5k"H$g-3r#/MZI,,X>KULfBskYCsmg^.K6k%52:]pIIUrc"!0)deMI,*pWJQrGu3/mi?&gXm;+aBPd<.3&'X_U^u''Q
%dI"XPK1.bS!hf)PWW*e5VE"OlbPu@,^/nD(f7)"qJ'S.YpKL,KqnT]aJgp_rY-gHT\=rfqJJ5tT9f`s74^G@m+.hNDB1/>i+(J$Y
%&-+HSCIU__,LK;^3rOho&.]Q<9M!1WCS;F'.[pMO<93`+i4N^PV]Vp,b`!=+RJ6d`,<eVdKT"7X)Ff1B\`%NOF-nh3D/K,,VLZ6i
%[.Fm.Bu_@<B;,J^@pW(8%^]PJ++QT`0'DkJBjY>0(A^eL#L$/od+`-FRS0Ia4VM#SQd/(Cb_1J!QF#e)Iej-8l2eW7ba6*jq+Sjj
%I?9)r#b,K0f_!eM8b/:2E;FNdFpCLkprhh]&4&GmngRMrm!Yh?N.Jb5bFtI5fqtN>a#s<*&#9TWM3Qhf=mtVR^@B)_Y#=mJ'8B5@
%1B)2.9]uM(-<RRX"mts,'P%*qc^E^dXUhe=2OJTien:@Is"Q=Q<GO,2=.^b:W@0TcA(cC=.1!"=lj!#aV`rVqHD"YhLL%N]H@a2S
%NOIDVH:PSrf<ecA-$taBC=T?=4=12UDZbPuYuEG^2E(,bc"FG"`*@!h\NjU`0E[YFJ"ZPOE+lqJ7$/9+ajbjl)jF(!<t1g0V@Kh]
%Shk>CSA6S;8\*0/!jin4>=^`(hhQE`*k^JO&/j"`rtE&2?"6[,,rq@8/lAl`#NQ,uNs(EUg!U'cT[_AtSYl^PeiI!*)X(pA]a#g#
%%pSIu8e[\1G0ES-*"IKIVW2bL79]bEMVe6(#>4ibK0Z;K%(*<+`!`Zb/%icomF3Seo0_g[?,\lkB<nB"eWSV!-G#IU^H?>#AZ^*S
%GDE:a`B7#k&h`I3V<QTN21g2pH8sHU`ipJne:E((ek$7Io8`-ofbOu43^A`spd'G_k%*:*,,jp.^#*ci"B%5,%b[K0,3Qj0(MJ1g
%+^1fi>%mF3D*nX(;?S!^hl(?loh!Nh)=i]3lUVrpa[%e10:2+%fAjaNLGj'OZkh-q786[Ei-kfFg,?(m85df]n2JqVH-J_'/ROS_
%1Ofm>I/JL3R['Tn4dl],*0UDADAaHX0ECN%L/]?f[EcPn!%cW90FVr;N/`r9Gr-2Fm',$G*TS,X"iojnDbOLUa$h'j\+G8(F9B_.
%?n3$Q!"\/`+*q]p`Kcb:"hc!qNVs11Z4=CLCR8>2U5JT)VaZ(8D#tsarC]MegOIjLfC&=o&&$SKVd0(^r!HQ`3Ud)VD.W_5RQYb:
%8YQ_V:]Ei_2:3_`)6>+,1<6tX'XK`LUXEj?OOPaS#Z@4.J;iO1N]`=[f1&--k,cM,e#Nrm#MNPo<]^JfqRT[HU/."#8'5h:]@!0F
%D2bKMAd4g,K;WRo6/\bQr&L?[P3Q#I9IID+3`Ycah^]1&@aH>"?'VI]iilZD>OZ^uZ%OR4qeK/Z+Tn%tLV9#H<(UQ)8![DXdMd_:
%h<eq8K.r2PJg+GML?D<S=%IG`9V;N?_gib;#bNR<a>!PL/L]<RLqe!/!&;b36&<:q386FX-O[50=$4=b=d(/$A3UU.g(3Bq;cP(;
%/;6*T@"g&+KF-q6;U"YGk#95GfjIE,l0f@N8"sibV/-Cs5$(Dq$eWp#0dFCiff-o/O</Rr2o79(/X"U&TGD1aEU$"-<WaC^+#e#g
%,S2+t`SsE22bI3=C)%;"AD5kUYE[mYNG"Y3;bGr_NQ38an!j93)[e9L?J:'5K^!:nR36l73s2VH8*E;r%q7PGr,<GNIC'*.XoU4J
%bD3s]+E=E(9;=R5@iI\2]W$l?c:@7U$78+4S[$]$QfK-=,k);$0YT'*JV5o0)m<Eb@mN0-O`k-rm!]Q*6-YNF-N;#"KK[T'K7MD4
%ce7r"a]W;tF9BR6d6Rf6F\.eC8Jr=8j?B)id6Tp#Rt/n6!_2eAk0CKRF)No$B6KXk'L/0%;Y+HjNJs71K(M\c8106K9@ce18Bhj9
%8Rs,k=u0'AcXnnmj4g-e1X<;SQFis*eZH<MZ*r5!p<?bmL(=H4$nt"SL=9<s54%UNpWtJCB#<*u8?k+[4>6skDs&18dlVLM;Op:3
%Q;Pe.O&5_PGa2Sm#/.RDF^klqKKl=kN>+(+W:,+noDqgMpf:q*^cg07btO'0-X*jVf:[>LB3<1(#pfe/h1jV[lQ`]9&#d&A<&9&?
%Pgd%rX+.'59Oe(4,)'WsM%uaXYoVk!-+)DB-a\l;lsjm6]%p[$/Ob+:/>R$Jek^QbU&4)N)lr/1]*.alPFguGUaFI7@L+C(:&8j(
%6GfbZ2sMF3']XNoV!Uta5.Ot$?T&+*c$!.U,MKGG^h9t"1uu%9RLa6KY5\MFiPX<$P/_4BeeuE+X_F)pRHtM$nq"@S[pOX7X$4HT
%RK9G.Z**3tnR_@OfOSGBJ%&K8h3$<E9SAtV>G+2o=U+)5WupOIdT,h(@kQa$.KL!c<GRJq68-0WIl,dY,-0rWJ2T)bUOgT:5#jZB
%Bf5Q6h,`Xh'RTJ-jo-Y*X#C298/4LYE#*l#cX=e-*/q]c*<dHO9_EsVE:(#L`c)I\N`M=?oaI1KE&Uq]-IG`<.BsQN8Gr75$o^mq
%pOfn/0bn)MJ9Jao>n*$J"k#Of_s0rm1Ftc8TqTH;TF%Al1I%W"a3"Sp&O-9Y8im7EA9:"U)F.gd1frDGC]k&M`JUq9NEugo/=;5p
%"-9/8c$A8&*;I?Enf_*I3E1tclW&<1l!5'(7R6VO2//VA8Vf<?1IPe-WqZB4W"`/?4-aM:FC71AqEgMIZTHG0JAUYRLXRY$+1VTM
%kYGmrm^m/m-Ya\p4(q$'PUWCN%/ngk>AOJF5($$-RN.tR#q&*Ala>lJU%bG7fC#AS3?JLhrE)RnCBO>'%R3-J"bci/<n2Qn8+$MZ
%oE"SH_XGLUBGW`Y5phYNH@^\4N?e1ZJ;:5Xo58-6/^n^8ob#UYKU*Pg>C-2M',*H@PJTs4=,q'B>!taZmuF_=%bEZQG*r?8pIR#8
%^e+:12%!sTe=;olPC%XiY)g&Q\$#7u?IHHbk:Z+o$:!=aqd=-ZX1KG"Dm-@64_do./8;k5F?s0aBhkA>d=,l"eR4X"m`J7q?e?_O
%^s&iCSJhu],ipj0mFqGIS`&-OkJ5/1\c?G'Cl8f57ij:uG!>8,<B/A8BUu/Gg>Km?"h7MQ\kf&U9;-tW,GjV40Q3S$$lAN_RVc*o
%[Q_F>W;r/:lFa-@;6gS.`iV+65P.kc?lIjeT(!T\ml7o+Bt!j?i,S19B%tVA:,;mRJKR['h6U?WB<AR-\4?d!opMAbG>/`q8DkK&
%,$,=e=XDC8:h7KKQEuD1eRGfD9U*#LL+R59R*+M)0b"8gUAJ"mKnK!)LWJo.hYN7U]6VW(SO\n6hI4%$?1.oWZbao5HHOTDr>"S^
%-mL<^a0-!I:PFGgr8[Wf]Jlq5faN))XKmG^bV9"f>IqPjXMf=S@iOsoc#,c&5N0%91\%#`Y\-lT&!HU\MgTnRd#0>_DnhHq`Ra?"
%D<7gBTKtT/?/:h8%gV@.Vke8Rh+Y3#Hln`#d"q$]bJS."=Lh#;[FT7]1[,g!>TR,(MQGCil\gP=6n&k_T%kee\,@#uD.]F"g\k59
%P29FaAj_@()JB?>/,T0`5"sS"DWG=YhR_OG,o_J96b[1^NP)Ej.r>2J^3d)5K.@!spJ]E2B+mD0]r,r%>VI$qhGt9.k]-naEN<)p
%TGdDS'WGUmi^G9G&70O''<D%7,^Hio)MtBCYHfU*\?UO3]\M/=<4"!"1*W,i^4DbcR4V/$)(VoF`q+1-figO@O7jcY_aM5Kp'q63
%a*3O_4D74<\UKD`3gKA]AFFVQ95Zu^)7$p*YORHU--&KDgT4=b-%4R`#+Cb-Fnpc)WnU!X9*7Xq:\R3'9g.0m$Z.H4?%+Z&b3^h=
%A2[F"?CR/(4\3cnElrcils<a8[^ku"'<68kZO0+SQSt/'=WX@Xl(S8[[@_8iV5WLKf@<"$4tWD(\$Xu!CbTneK?ZsV`A=LtOaq&2
%nkr4JM9(-hf6Z/aadcc8e7RhXf>cWd3T.`_9OrW;ZcT$Sl?cQ#2g`.ue[MktA5.hh:u?Or[$q(qa^^*[-^Oup[!)hUF91K[_.<BG
%WB76V%g;-'HE/;`l*j3p[WV/4dBrS3Uf>(>fKDjAlmGDbarjP`WLP;-*"Q<t+[=d7K0n,cbjF`4d*WJL?HQKERr3(8/(QefNHSs3
%CW/s^W>*j_Kd6K<4#beaY\)6Uk(Se"-\^=8CqSA8>RB/_2[@DrMJ2W-@)7iI8CCJ0^"T8N-WP)c$6'd^"e+,$ljZ>8FGijKa5T#P
%l]<i?7Jg!9N:2u898V*e?oY/\O#76ogXa.,"^t^D@bQ1Q89e,l]N"Q?BWW4K25JFm9UXSi8F*tG-DMCNFrX8]7N?R3%hgV:/Fp@-
%k\CrWfooN!pEjYk$=Kna`V9'tiqtf^RSD=m'o"k#=0nl@q[Oe6(cr]a>LMAf>IcT3n(f@P9$;Q&-9sA;&,eV=fNcrm>8Om_Cj;hc
%I:J<.l_UY4Vp3%dGH%[DOWEE)UQ_6RhlNZ5^*+Z`N'7rcn8ds<Q"rnI?>G0WI2Rc7FrK$q^-B&1XZlk\j2'L#r5R^RV:nZY?]WZ?
%`a1'O/#]Ql8Vtlp=cZpVE`tAr>hjpCFsB]CdEtKDZY?"NfemL@()VM!Ah)("27j%A;-Flml*Z<>4M]+Qou(FB]0XkNBL`%0f*1uU
%Yn9X!g_DoD)$83&JsU^R?9:sEhb,LXKP[`dCPh^sC.PkYAm`Ek"qh%=E(:.=9.YGHg+E@3RafDG']/o.lCjX!/62Co+tmh!(Va74
%m-dM.HCH=#`]GWe\>VaQJrldm4ukW\Ap6%?(qiAde2KFU^2t9#9t$(M(pqnIgJMPD^t94Xf/b.7pRNhs,h1+i^T'lfKWQTje+)7c
%$D)/06(Si>o@Q+:_M]gQO_Rq=P>FDRQ[Am2@C:Umfu<=o:`fTdeBJ'+K1k_+QGt23(cB3S1F.U7MQ@(@dnY8U+P:m1*&jp4M]L"T
%j:9[kRmG7@8Pta,),:reSlH_m$T/$EHaRB=4kaY"(MO+3K;o>C*"^)M#Nr^LlKSBIooL<(M2@kb[N]oK#UNlDhQNR)[6,gABddbF
%@,F`s_da!(NFNALG\HCNY\MQMm+\P71kOuI,^(*e5-SaY#qV'G:g+c%AjJ31-X/4h/X_::9QH2.^2Y7=PB+551?uEKR>LdW3_.>s
%2*shCM9"lr3=$dN2sWHq(eJ]jX$NWnRN8[b')5n-C),;)>/dpi1kM3j9oIO,X2J6EAW5q1QKhm5fFLMS[A6*#6j0,Y[m-cV>//n6
%%LqL*$9?[]$fV(e:]2kX7';N]-d`!14Y3/Y:Il`Z#aQ4tmLupR!T<m8[g#/Vd7ITol6d_44R%13O$r7/Um$eEC_JXH\9doOJe^!c
%&J<4U@WaX,1+7"XGF1]NP.A:iZH'E;$5$bZOb.cq7FHa!d(BAa2.0CD&<f%R"V[>gUpLV@_XPI]l'Au'T?ekZk/oEI-.!i)d.@>q
%UR9)\S;D.7K_3C&]0J9<I*iUoS`3YD368K`Oo/79IbW#be^^fckI:r4dkfcGm\09E3):h..'g+PXu<*q0MR8K)(d?NJ]Kp<X361o
%G^PoCmVTUsWurQ,4lm;(2]"0&[WoDfD'&Dsopum3k+s=?arb-=e0=VVeDfM6"U[9VW<K@tQEQnPPB?2d?edCD&&9tWmjT68oA%d3
%a0VV!;^Kd!3EpME'af^DijXd9D#3P]-"X_\><B7dC)quA)_=h/ri7SW<_^Y@e.%nK#e/H4EiXd%D:S?n-6CTiZZ*.@Y"-A7\:k<>
%rtPZUkNf*:j=[iOm-edqp7bPU9i[XtqdWcQ[LC!,ZpWdXR/jV:0>geE4SF3H7gVp;brOAKZ+IXHTQ&D4'+];55gKlF<n4'rOoch-
%,MC\8I5QFt-eH/84i9#0TlB;!pECH'oZU_p:WqB"^L!^O=-5j>05&a=\=16>&PZokbtq$O+SNI[est7)jQuKe`c<ud)8:-lC0RrK
%@!?['lTpX`q;^O)+V(<YCS+`;!Q2P"`5PmL3h$U\m2)qORqmu<*0pt+rhS=lB@>YU$1>M6D3J]s#.GiSLG(<hIm(c$).P&9k%Or$
%re6fqH+2b4b]C)3m02;^c@Q)'?#@%fi2Z,]<;=/=/cmDS@p8oARmt;ae[jRn]<R:8_6ruS[nr7J4"#5F@#EVCdZpFPMMK_@@%4hN
%(V^<Wa:?8sH_DU\6cZ7$(D,%*)Z:hb[!D`q(,YWaJN?F%bY+9Sa*4];A&P)[-ao=aC;[nmU3*6fJJP[u9_L3d"*T^!%T[qC3oG<f
%.r3]_q$lYOQL&K_f&j:Xo@+uFa$#jLUr6HJ/Ek'Ph3d+'G2kW*k\RcUg<$52HS2URpTuYYV2s.,U>A#[NKa1)##ZnWc+\9^9ZJcd
%dJ3Fg>LOIr9%$VGPHn4&JI=rZn"u6(]%r4t.UCZ8)Z'%U<,(7LmP)=e_<K49#Y0=rffn;K_\s8MS-d=/+b($PIG)q72P_6GKXoqE
%*D0L<ITPO`2t+a]mAO9NDr50KW\An^.DAu?ld0Sbhqbr/N_niUG]&X!+Y]H/<.GGHGLCg34HEq[BfRgt_`TQ";EA*(gR#*Jq%=P?
%%TY><9]mj1/#D2+EG!Z^*@A^LiZV5L[)/C_b$*&kY;QEmW_7A^lg-Z0b/[q?<265TmtTi8W&dTd0"7F\NG#'lXF@JVD*p]SG^S6"
%!e-?j!+F(2<VC"%Z/ohfgOF,D9@ngdpOe@k^4>nq-BrP[*b1862m#2MAf.G2<o0V)OK!stn(;YEa16=P6S;pG/=LC_R2U%5k.S.:
%I=<!il)O*KE#'J"%3Uq$$Zff%'dD>6<m0s,,ko\CUY`1e;nCIPPgUJ>CamO7_em+,na5q+(,?d72C#qhFuT+E[h#/'Ue_YjV>0qd
%K.Qaq`nkDo^7AQ[U]]lT0Qi\m5&eA.aW>B]?)-tPc;cJ)8`>CCN*-+*3=#g&jrta*500cpO4f(!+BsSZ!I$VfG"u'N[<-im8W^En
%YnRJ,N"*6G*"Kj>C:X_"mpS/fZMFWnHoG!\]'n'U3Ta$bXfW;D0?\-"+CX=coDCMFTOl;DPo^DjjlAl:1p_TKi?&]/dTV`QR=h#.
%Dr+[IZ@!mX+k]US:@OFAj_QF:"CfDr%^$:Re!hZ2=_>VMWm*r/P`XG=\gk?>gH`t.1Q_g#$Q>O.Kqk3`OqY:knR*8Xd#@G]GMtGW
%ZINC7`mg\0S*P^eUi<ebFgUlkXS\12MZ9VY6Es&19J^ksVC*7Fm!r!hK]D)I>Ta1OMu5>t6/8MY*S[Y.4NiKJ$A6:=*Esgnh)dWt
%VQ4QVPM5O,]S-@LT/Z'g)Il;r?Q13:AY$LF%)7o\o.=6HO'Cl>L9[c@?[KE<7'!YIekeM)"'knE#]?92[N<mF-bESBL>snDd;4Q>
%KsKHib9boC2^'jdPd[C$CgoUXX`h[*:2?tl5Z+Qn#24@6KYSL!TB);9&3B'I[(A=Lgh#Nihust3;pGS+2H_`[]n1r;%eLnC(%fNK
%KrC?q#_hdO<%c;=p@_R8e['sBl!YqYb-_mtj7-qGRkC3HZ`@@4i670eO7UJ?_<mIfF9J2j\-m-V-KO0,.KTMg`HS)^nG$T<e_20O
%A:=Y\)1Js!/N4>0.!_'aoug,B;cp6;R/Z521'6[UdC[NF'_=mK>Utf9K3^^E_MRqW_JG`\OAi3@\h*E$B2\M5#B88]+4(K!Zko([
%MMI7JX+sIXE15pN+<KUM:V[.n.k!SI>Fd0sQK"h,fQgtnE8H"We')]_2^K"U$*.I2&T=@+b8jlj>[.)Mdd\&$/%J]#^h%^JQeZlc
%W2GbFH+-u#L/&4YdaH3J0-6J=McQQSmagl\P*;3sanCng7KcQXU[GbC4l,W4206\(C@]ZhGp-$)??)_BN7^edg.!0CA'$W:YpEsg
%:KQ)g;8N)%/mO''SQ>@*j)&Z=)N&9I<AJ.W-p!'b[!)&*d9^lea`_3S(pb5Y,@ZggZWggTK/a+oWK$+l,I5/eVY1'"H*m)O_XZEL
%1Ir`EII"#mB%McC4Xgf'?n):+jM]OgOgII_JC@VtQ$dp/`7)9^`?9RK$>&1FC(B\p-!FIk780,c=tXJII13Sda2GC]EP\aliV&S<
%d/,^7(E5#8bcJ0S&tG#<""*b]\EiAp[PT+CWKaj;T$,%<lSI.IT#Nj=oCo%JmHI2O1k7_1CLWQC5(Kot2O(AHFdJr@a^?e!dY_nh
%bo"crF^U@2L:mI).Dd+%Lt=P4\ANqA6-p7]qRWZ32^_f9jfgt"k7BnOQd]j4rUB2PqW.G94g"0:0=aQi1P/[/%,80B5a'/>BtJc,
%k-m<$X+K$Vd8BUKn.a-efC]ciUF2c7@Y'M%D^^.`3Z`,dTY\mj_gA6PQmn@72sIo`ApBE]!APP.S:MVHQ=Z?j1']r?!4O^^NJH?a
%Cn_L0DP-WX-G>ir8aia,RBE?mApVAIWlVf"7aKlAEZ&L]'9Ntph_/U#=J[=.BP\!XRN*LS_b)H7bGEgcX_`<N5hhbE+:MD6VR)i3
%.2YoTiFI"B2en$uSgs%+m#&\YeNF=mOjU3$@OWa\ZgaJZVRi>$'@:G*Pa3mq>O&gm>akIiC&^?O,U_/>c,oY7HtMt!)$FN][_&>n
%oE@_E7ft5Xs*`oe?,"iB6+>T53kTh(^*:@7]$UZJ3sMuk(A@g!8$gB:n)EO2"@NIpYYX,>LaQh,Q+I;2TNCMQ=,#oTkd"9Zfi9p5
%B%IicS*As@N?MlK`*HETI]k'E#a&E;bM/W2*Fe5HfsU^'-XAO#,&!Zam)$5cr(.'p.[LX#Z0l\mj?BZT/c^qHXCj$#V.\ofLbGb*
%k4)4?Ab16&.udJ).:[[YEk8!s<5"E"LO84l`O&Q0=#s$Bn,4h_AE5lOADAb8>Mh%IC`dHEVlgB*an>moNDHnHLTB+'[PMh'1T6e.
%=Sb"_/<W`:"tQ*6H*`Bg-/<GE<d&h(%9ic8#'.?*)YoR:hg(4l';^rk!bS<00G33"C'c\iB3jqE/UStO'An)H9$3]0M+p4bT/a>5
%:i++[m+MG]'WRfN)S87H.S@rrf+.CXpS_"A\>ES*d]lZ99$t7t/ea0j[i1g;[\D>kH@XZnG`,I_9c:d&FkCUV)jU.SZP)Yu+^YYT
%2HVYEBJ4qY^fC1A0"8!hr;YMq:]Aa3o$Z_[3a_%X6P#5?a$9,-$iY++]YHZ#U'U`hi#/=ZpkK1:>-/tEK[]8k5_][R^k2b^M?9Xj
%@4a63"8E]4]UJ;MC;uf^KuY)>l0O=Vbnn2&]^#r)SC5"D`\54iE^'Kl[p@O`feG":T%V]Dk0FP:)39m^TjpldJ*u<jEQ'rZ!5;kL
%hJ:XZ=P!sK/JQEp;>Km)Gla5?^IS:eA@O4mF6Ao$^5<"%3+_QRYC>kR90K%u$GX:F6!M_$HB.i2B*u8IO2$LFBTqMFpQ)hoeE\Bt
%+8K*_qBR94qsZC8MN:Ei$`VJtc[q`20rXR!c3:h9,iVM0M[6'3<A:+S]ju,4'"gA'i%-?W*J8\\/:mZ#(pK%sL(P6dC]N(Hg6^W5
%.`4S.m_5u[$UYh8%TnZE/g?rh,`=%q@e:<>&-Gnu'IH5t<nPh@O9>D,&/Ba\12jjncJN46X&cO5LcC,s-M)mF"P-J2AIqgmF%aZ-
%9h`?rJ?39Y@hrpa@G;FXf'*sdq7&W2^pZNtR4,oc4sF)5(.gI;[&iPK-<Ua<XWo8K?NELXJh%g4MAS_On<Qq"0dZ@U<X$[ISU);$
%fVW\h@L+Rd7BVj*0q7\0Ch,FLO$*uhIjNhk]ET\\M6n]enjd"^)THbqH$o'*qPdt<=GO\;FGW+:2IWhrnMRHC.m9Xhja/0j<jH+T
%\^AUPLAoX,Amq2g55^qiVKG)3n\GC?E@si=5V[9V..srb=9%JOB0m8>kXJq?;kr3iqQkWmo[hd:h[-k;"8WWHUAgPWG!%'7]Q[6L
%TU!Edp+,6R6[*!]VC2G2JdlDr^!mn-b8ni@q&)`*93t6/"gU=nEn/d(-;*@ngRL5t-:"_thfaAa;AFuK^-9W,S\ZU/WZMCp-J\*K
%d+Yu_kK&5-Hb8/<[\d<?q6Bk=krfCKfJP%0FEVHTKP8eNc.*!/`@4YBSM)S8If8^,AT[*)(.>JO>5;k6=#[`Te8L,kM+Z)FCP0:n
%9CI/0f(q@L*q/\B91g.O7*q!)18#nebmWf,!C!D*104!V<qu"OkWY8:'q!UO)'=<4kl4!!nK4?_=4YFqAZGcj2\;GIZ#gOeO)\j+
%FlFRt-'B-,=;AbGo/[C]JbSr/Zgfsgdj=tK<\/Ws2!CS3>$(8TD6gMX56:2!#IKOsHJCWI*'QP#e,pU2I0]#eZG-d=Vh+TWe/+=t
%DWC;1EUcQ]Z/?I),<0/):N_/6`0kR!Q$7+n1[PgM$+;+,?tqf<7o;\Sg'NGJ9AJo4c8*S1O1@^Rqpg;gVqroe]p_.Qj)C%SORg:b
%3eP7VAuHK*P:sbarI$lCFag.SA@9tE?F!Zp?-`%'B>J!EL'b!h8!ic5oCtR.ZDWb5.Hbom#$OOol`\'T_=25$(u/5#$3il<9CNXO
%R*V<&jo,cI'BJ/dM]<*G<dHH&9#sg$(3irp!.QRLLWR&TLcJXS5QWZhrU_-8&*rO0R<bpqNaZr5-'Q!IEr_EeR(.6FfnRTU8g]c1
%^'buK9<e!CKMm&qJZ%uY9Z!Y(_t@,@'-oIYe^ER<C@dAh:Rc"$GU@"o93X*,=;B;ib@ht[6s9.?S'lZP0R3hcdELqUHO)fKi%J)(
%EfG)M-*]9Vi(Xj=/jVBqHeS?i\sL!f9Y&(mATuV@7#]G6D",QKBH^6!n#p=ZaUJaD47nadYA?FrrVuN3OFK`'6i,lkC,E.[,dA>*
%E9S?lb,&/\[[G`_p@>E%f"*BFprKIIHTtuo";HXk+@AL0?I^S?DD^g%-Ll8U#ILhM"Eb`16(+r:a?Km'Y+Ih/r2*m905X&iS\K\6
%\P&8t)*(F^U3N@#O(U3@0R7klRCK=>X<fZ,b6$ZO'W\u58(.:Z^!)pj]5a3cP[9QumHS<]rQ[qH*p$FL%fHjf9W4VqeqBrMlGMt+
%2KpcF-PcCon'Q;(F.-b#BdPj'a_/pFIUuXWl`[GQnOYF?5Np5_g@+R?os%N13e6C7g5l+c\48,`mVCK$g'$1lWC6s#rP2`bpc70P
%ooIBSAS-"N34W7r!IMOLP#:o3!IheqNm;sh>C<_&Y*Q%_B@SB^;3ihp6/-Z@;&fcZO^s3I*@BEF'Rn&+[^V,8q/l3"FPgk9bG'J0
%BDsEk*+kt^jfM-:\5YV;$O5'=!c["&.Mt9-*^EJe/;&X8SsFueZeP64`jWI0S/kfMOBB1ToE8+9foW0eIn;TH<[?N4f+n'1$Cs;h
%(0k$ig(#`RVU'iE>bi?EPsI'0gH1/qp4DVbb[E2Id!>tP1IX+0EO$5c7P:!i_9M</lX9?>o+m:MUZ(-3h:N)jmD;;RmE9g;?QQ9O
%q;ISQ'\@MhK@8oQF&6IUH9ij+ap6IuE"q*A$9e]=.MZWoi831I*8KF94qA]>n(!'\%N>^$[l;aOeALiM0XK>7$"aS6n_hf0pG&$s
%mk+i@U;KAQYH>MAcOM/X?sudP"Y\"),?W0\$Ge7Tp*t;MHs6s7R[]`'rQ?8;edan#?HL%HMq2D-[3TVobL`*"@.gt?'!,+-o>-0\
%%>)h^js\m=^3^BZkHVq_HfaBQ38!;PQ@_,6\?t$cSh@,kQe.NiNSCM18Et_.MY:+YQ^C]gB8L7sgRsr\nSS/J8NBuc/a[@u*gcTP
%[G@[(n*YTQe[R._AY2bOV;,"P[?Q/'3aXqOSdJ,WXc(KQe_n$GFN8oh*YYZPV3bZ\AZ=Gh:"OQ/glcX\.VLJZT9d%l"eO1F)Q[:;
%b=fh2b4;!?cr^bsjdY@F;*%lmq)`.j>iR'P8mCU7n%S5>QK+<MpWMg-j7DB-,*Q<Xh_b(n$]c+@Ep7Eo\pUt,?=/.Z]1^=N60g,g
%ojW:DNB;Cfbq+&k;iTo<>,&a:FFI%j=l2p'=!GtGN>6'gjD@<o?F<kaa-ZOcrKD,<-'`)o=-!&DFQG?",Hb9hp@hU*@bZYgO'C4i
%'lA<n@AS-ndTC4tp4k0S_-q.;\22omqdsWQBDL*!E;adA4juHmdNB-)h*"us?VN;`ip't4U9T#jZ56h!b-Ca,h9t5)osrV#?`h$[
%dd#T1CLOVTX0gK1<D?S"DcSOB@VbB!RNO9NXDJd+LUFXSJ>Z/n%]/KT[F<lBB<APL\[Qa3EEHPr(dhE+lf,fc-[cY4)b._(lYHHg
%k^$4c\m6,TT47+J(H[]DaV.TTc^blQl\3CXKCp0.e6RPF2GVk>dTpCsS^5!N&"<"jLkb6mHbiO[VV[%Q<S@rM]d\S1-G+=<3X$?<
%.WpVaTuT[*&um!so:]3JO[=]]a\m@HWE6r@WCS0`kO\T0KBI\7I/'<$LC:A!210b@\d?-?_3;+.?\6OUhckuJZ'p-&CrFmGQ8bV;
%o_ZYEOjMlCi`Gc3M`"Gf\23g@NH.[=gh7U%%iYWBjWP6Hf:O7W@_P6RNg@hMoIEjuS8G--OdjhS?:8#_Y=@ADPuqS$F=DiS2FB.@
%a\=CW458PMRLbmUIb*.6YOn/?n"'maB'#<(CpqO3S*3bJe;QjupENO\4.:sPcJEK6-`rgT]`o.?kj.9RBs\biCda'OHR9M"5+KWg
%[;mc5DffDDZ'4M#:$apU]+WRfY)Ztnj%aB*l'UAaMI'VT\!60`\<RsR4`?m0&,<:(X5i@pi/ZgJHf;NZKL1N$L;-o01'aP>AW@"L
%A`gRq^1#/#?u"3m%C<+G&3SX]Z=i,JG-;a#YW7\'AZndqA'8]2A33;8CMrh$89!A@HA($31G/#?omFg9DT!$qWa:q#p\aSC+&3V6
%]Hi/;q3:Z#`>@Ur1&n&P`;-li>nNB?cJbaK@;Cs^#^a2SRW*Wj=V>U2<X+/)\'c)hr(:=T1cGW5H6Y)"LT/e'GdVZ8(+[cn,JJ)6
%aO8'tnj$+*f-;`6gaYpmbMnFZDM;9B]6^q5D`eAiXG3eF$Tn1Rq;bSjhWL>J[:aBur@/e':=!jCh4paJEfs$%b5M=bR:;])hpgcZ
%32^fn8O6(R?$FhW9Oh.PeQ5#^=*?O32iPA,mHs7<&AZo6iV&i!k\_?9]ejD7BB>q#mKff0lqTUThVTcYTCP(oS)a14J]?L318/9!
%2kG=OFpj:%DHBaX_n5BFqq&OF_-LeoJ"mq=44>+5]pJ&MPJ-ChaR=$gT(MaNdcID*Z]gC(rlb6hFFjCnd9Shi7T7QarNkA0_0ItH
%37+t#l%<;D;r_*FLKj;%bcf'FU"*P`g2;'I_<7_.K%D'&7&G93:YaH<C5KEBXcZlGD8%=HMd\\mdUdaHkN(TBZJ2EJi9kmWCkGM0
%\GUfU3#EX5C?<A!oZHR*R[2:GqW[&3==jDmdn$:HYG]@`f%Rj#8Lb\<bgg2WOYJcJGM2YY[siL5X.a.Oo]B/^Hp6a9#.MKsLLO5.
%50S`,?o*R6X-M/OpIMf<`2G&_UNE3]4M#B?p5doHXa4lkFL%N3KYq`=X+s:spSK#*Nl+6Pm!)lENZ8j.NMkgV[D%,'3e-@cm+jm5
%T7FJ7$Gb+-j?lQ.0#..t_9[Du`V%/=^2a,@FrFtFf;JL813Hd31:YfBjA,1q,1dcH#q>IbFsAW3S[EY`e*"!bm*9nQRGlF5QA1ml
%n!W<aJSSrBL"sN)YjaDm*aAi?C;UE*CG&n_X.`P?bXF*-KeGet"m5B+J!2OhQ*#\^p=[u9ED'ZN.NWJ5QAa)PiGL*SoGB#+V1[T%
%@68R;WXik+X,Y9pnl>8>AGbZ+(r*TGQ$/VJiq"4<IG3=<]rnJKhJU3PU&^Xm8^qNW2ttJ[dS6pRT=L5IT&+A2,GC[_HLnLa(O9;K
%n'Y!5jh%Dq::UmM7dYZ:O[$?/D/Pj;m7]M>^t/?$%juc'q4[XihL>t&<J$:2<TF)KZ/"/b$9lGef8i]hBA;OGX,CHdaXjj\B0h`I
%T?i/a[:_k`\9a!;?"I>_+]a&kgbp@[@3IRW9m,+Nlgr#eU93M!O4lntqF8)X(Q-p#=1B[I>S[\.lfrVdgtO5a<g9okr4K%-m'@3;
%o-C56V9Sj@oqK=qWpT,-YV$nOU0cKa:[5(3c=Mu"HEYiDDf1?<AhD<[H&g5$c\lQlok*(i2Y`3U:8>&D^2C<H]q-B0L3JT7X6g.e
%F-_T4l'kYNjPGcTOnN"gT%e%\CTV@C3h;A%rO8r\g<EkNXh,aW\!M!eqsF/rZ/'lkZH&O/OLj;jXL!tYaqh<rDT]58H$mQfR#U\9
%DO4kYQb.t2bA5^g"HPi)n&jt1pjSFUQ?kh\VYB)TVsE3_L4%VaYLZ\Li.O1u`TmZfkm<prh#%,ld1Yc_4(D#em(bD%3V=]IWB*70
%"DW^#"NWor7Ni-/-)oLU%U+Sbj*tkFs2TZii4kd1#%SJJT*^<-1LL.AIj%2gJ%Qu_6'Le+D_USaR]gaG0JUVt07Xt!c+F&IX)W@D
%'=[_r(8s=m59d`uqXA\B4I?&b^]+!M'1fpRDL_ZU^ENG<'*,?g-H:oo-S#5e^kb8+i*TNIAI458;e/1)8,g3P?t$,V:uO'p3X/Au
%+R`rnAHJc\LF4EFr<'^Fr8W9G[4hsfC-t>[P_W&u+$h.nlut=#J4(2oa)J].5ctr)@2K;7E/_^[mSm=%A9Q0!A<>h\@N^R-`pKKj
%[pbMCT:FLja9pu2(;m<YEKj/d4:?=@8LE3bOJ2@ZL&49HX>4tBp_Brs-;tfYfkHjc.?Qc8W'O*D4Hb]1]HaoY&m+Io6tB96jZoVp
%+/-U^MiR]\]iB^EBY\q.nN^"s1+M8P^bM&h7OYO`);"_D<tB9M`3qlt3WMm2aJad8K0\[0KG$3p3-l_3XVt_?&(XC3#FZ9f;$iQo
%Q.!PU-#Qh-oq6X(^pC0b<)O5`,pK)s%M(Ztl!]5X22mBJ7u@Pnd=_*)=72bMA5pG-6)!p)6AZX^*'KDU(*##g*it\D%l>RVUCn%I
%!_7lpQP'BCkNIJm[irl@KCojYm\*$Z<5S;5`%6KQN/-UODaCZ:E9+?"@UZ"R\<s3MUL\u>=gc'c".7oQQ])&-nsO/3@Ms&(^J^Is
%16nQ*S^oCjZCCU:;'8@T#R1j)@1KB*.PlelO\lFO$^"?(-m]%=<.a0uEAV+;<1,J*Ll=qcHrqfZn1d7$JK:!upcspQq#`uF"AO`o
%W.`?L5j;dCOod`q61Q0\qQO;+bSWr?7O;;'<(\7-PSE=Y$%`ZjD&+3CW=PF1O\lF?%h$d$5"6tMi1go1+-NB0l_Va_TgWEj_W=.Y
%oJ&s0JKL."iIZ(A@D,X.0pIKQ8iV3#aQA#m#UKY)<.]]R7j$;TPo2rGaJadX+,F@\cS9CuB8i?+%$JpHN<PlWLHF,p';Lf/8:maL
%8r&068eMWUB9EW.FVYeE93rT*WA<=`_hEee%N?Xg'I6Q_Oq@h?(+8fk?5uIo.I!)?NCYR2$o%pF<.a+"EA_7@k/D>YR$(3)r)h&'
%nhWm35pV^<q*EqOq[5bON/&6KdOCM)J_&-a@L=Ta"N?GglGn@uMrTUJ-(T)P;/,uf+f6BG8s&rn0XUXQ.K+LI0dWB2potCXiF`QR
%"eAVEi^\%^A&%0FEQ"6-::^9N[!p"+;\2PI.(E\jrRe<!E?$^1Uf.af(.,U*1J1>,.@$Rbcde*TRMX!V@nJfDq@D^oF9>YCN,b5>
%<%9&SUB*n96kg"BUQiVd6D5W,LPo#%$<3u-_$<;%KnsBD#!A,"j%VL\fMH9<1.k/+.\.bc_6Bo#Ofd/kQP`ZL.@2-=<m3O4)H>r8
%acYRta*t-Ej+oE9ST6]q_:%:U$o&3lFGeu^6`37?]=-aELbU3HE]FbG*K;;@JX&um*6G@Dm+2S#NYk^C.@29Ef$QHd)HuA>_%DDt
%KoCP!N]b7IP"n"WfoToh1ldq-=#rcj,e5tA?Rs>[@SB@k>`KM%8)oD>Gbn=ar%P:6m+2S#NYk^C.>K,e2B<>I6VIS5SY?,3eWKf6
%@E&mh8il)1&`OjU#&CK/EFWMtABBKl<O5b!M's5g7Oa%R"@ku(%Mp@S1rtgdOq53A9#ShP"!1("nKo5>m.F8GOV(J%^euVE'l3c4
%N0LGF]Yp2#::^:YZsq#dHN9@(;&h$fG+9j]E?$^1Uf.anp.D@&d3u7)@&Xj^OgVVi7a&7#G_e(#ST6_'BH<'Up&HY/U,\<A*BD<N
%i](C@8Z,gR<*De%Lck`2V+?WJF]U>-[Q3mi@nJfDE+H/_g)Q(qp&HY/U,\<@*B?d'i](C@8Z,gR'O"":Lck`2V'u+I>TGg4]AbeZ
%9M)-%NpQF@#D>R'4TJ-OBL$Z^j=Kn[j+oE9ST=Z7F"b%C1OdVRRpmYa;@.mo-9t`]ib"PpV%cB31*&;8>`;QY+A4!d4qNn"7,2T9
%i1X*fDo1JN##:YM;,S<?knLr@##UeIS#o`(`0c]_\bq8j@`B#/!)'4\NYGPVp1p'67uSn]Pf&UmRgqquLhVC9;ZoT-6tJ,k[N3CU
%N%+"UbE5'UBH/`9Y]Pc`89T,d^Qt:-`0c]_\K%TUNlD[[!)'3qN\H:3ADD!Bj<;O-FNWR`L/"/4EPs]LdOC>(ajlOP>%Ybd@nJfD
%Ehq&C)FmI'/=e!DLN.HI^Qt:-`0c]_3?6_Vl%%+t@N&Y='Es;qNpP@Q1QE;NdOEe/0_[%/2lgiO9S4m]Yc00iLA#bo)(%g%"`M7%
%F0XE\@YBmK=Xl`,!Q!7E"2D2]n5--D-fOW)"/jDb#cS&:knLr@Jk_.>la>9#QP]fUPp5u8BuQ#Sp&HY7+urP+m9$Q/N]b5s@&]C6
%OU[ci8#+!DJ>H0I7gM"i^L8P2nIT2\V,@Fd!j/4P`#aH*;^=l=X!?r<c&mbu""]]]3)XH2N?Ruq/=dtE6Ek0FUf'8E&7^6e;D(Ht
%Ct]kg+nbmeSK^(W>THtNX`h@q(gs<W_3%(MBFM-N@-J@35E)Wfla>!"LDU+EQ#\mj@FG7N;.:'OdO>M7>od(OX`h@q(lbL/iC?uc
%hMn#p1WF#6AEa4m%MKs:&TKU#N)C!-$&O\3*A0f18W]b^"<Rn^,pI68)XpS'N&T_b@Df%ga=&J@YauQF$H?2)N16qM]Yp2#::^:Y
%Zsq#e;ZQ,TOW5gQG3mfn1QE;NdOBqr)ak^,`Xl&KlU_[.@>pJm\Cl$F%l'rW;_CQAXeTmS'Yo#m,Y,/@,Q"meN$H?,FNW]9V0+VT
%Qi^AcMVnbMX@1(Q2Feft9M)-%Nbf973>tC]!N[Y;E[81VZ<p8K3+>QQVd,5r>"@V/.=h)e8GHUu*SIVBAfNP&Uf.an2MaC:1kqA!
%=AOeU6runPCP`p!N%+"UlUR=h`JpAWZ\?X<aAN>6b/.c3]7\?^0hNm>',I!obr-@_PVgHZ$%`\0"H=SNr%d7K8sSol>Wuu^Zl'`)
%o`-P6,$;\%cku$N0I)T&`W/Z.#_#0F0k6#&!)'4\NYGPVp;o9`*(PqgQ:e\-fs'^[1eR*8=?8liKTDubeEL@1*(PqgQ:_`/$+,`4
%&:4DC:6?O<Y)_ktEf;u<(]u=S+uiJ7*K;69!%aZb35W_d)!^09,E="g!)'.nNbm@T3>t9O!E_BOE[81VZ;8h%i](BUYZ-M<8>1/_
%L=cU4FGb_n`mp3"QAuQt&S$?f;D(HtCcW[q9'cR\3^j(DX!@L@*@$Rh`b8&B#X?23E,OHiT.r6&+A4(AEgUf0(pOSt1LhheObE?%
%L]sV5(Sd3?aO1BH%t$L,LmtLN4Hq>U9t6h#Yd?G\8L]2_U^1#&,Jn!HCpi7K`ftSfj[Z*]1QIh(=AOh889)&tS6BOE&S"Eoj`"a_
%W5I""@L?L+.=rf1fJ"1%gQ(;;`ftSfj[c%e1ldq)=AOh889T.:S7H6O&S"Eoj`70F3Z:L^!N[Y;E+Bt8-KA^-,7cN+Uf.an2Mg',
%N?b;#erq:<P$B"fVjj)o`0c]_\K!'*NlDZ0!:*4=nADasEm?[$j+oE9ST6]q6.>q/0uOdAH;YG"\iOk,4>Z#R0dWB234]0Y'*s9o
%[l<LQ^^]oJ+TBY]@9F=n"XqNFXE*5b&1&BGE$qliaMSuujZqE%&"K^,4T+&rk>[#od._^b,fDYPj@4^N=@'rtREX`;<=-G\QB>13
%,D[NOEql$EMP?T(Jd'hpWe.7AbWO18AP`\1QAnHC09Po@3J\-F2Ch^b8W54Q[5jX+b_.tX.mS!+R)/qP=c!0l+W;j9eg@CNP9A'/
%9O9"o@1FeaoohCl%BDCW.0qY7@26C4-W=SY>ZO+L$6oCY'Bc;n%[,=RfZpiL`H!tM*SI"[aW/5'V)Ns`.0?EoH39RuaPaAV/g*[F
%75!Mecd"hafnQpko@QF75Ib9AT5j0EEY'0=d^>_R*2D5q=d`/]k#;q<(FO0`'0.D=QDB,R8T'Q""\o4:EAFY99McFW-n@nEOcap`
%IQ,;V"4_!r!^ec,b2_3G9Y_8pJ&&1Yk<S@k_.CO0Z)iHn[PRMWR92)>XP;@nqV<-LNRYIeMQpUM$3L>[o:Vj7KI5D4P@8$gd"KVO
%EFFm+$8Tb$'FnnOi)m&eON@mCK%)$M4P#1]!(Tl8O\B(]"h2"4.5;1W$HV0O5pG]q`#.G(Zoo]a`pfKlgJ\_p$HJ8%"?A5MeL&EO
%LN=01+>4%ec4p%f0t)T\g%_6BSVSi>jCROiT[WIj5ahh+!lN3g3G$PrA;.H=:_W,]DGcM58MX.)e0H8Z/e=m50d`j!k]305R3Lk3
%KM[b(ZA`@_:Q097Q&QX;MXpm`pl^J*4Gu@+!h*e4"TXJ>Y0/=r%g:<0&uTt04f)kZ@o*O?^a=V`3`]ar"I.Ia1BfZ@KEq3PJBNbK
%N,fWr0<E%2A9\hIC(Y2BKaTXKQA$-*hrLo^30lBZUgc_i0;*Vo'a.\r@+:NC?DO+uA4d8'FpT!*0EToR5`QsY4P_:t2TElpJW32f
%.R5mlRZn,S:j?Ose$:T&(`<0Al`)[:?q$-)!BlH(#Us;_+,0"41@P]I+R:Cq&0"Ye30T,DOIY$p9Jkb=ot-6$ZU+9k"ZeZ]d[^Hl
%Js@(FpCKMt6_'W55hq/GOe*!20>i\Xi(MF>=R9[n"Y(0'PClJ]Fhk&8W>lE1=H$IP6tASqifW-#hi81O2MfGkYq6hr\="+Nq/K;k
%lV]24,aQA1.&mWY$j)<%EKHq$(4]l/KfK,sBtmX[no?R%X,p23g2n[fWl.G9ATA.6$F$]XP.h0A5aRXJ^Jt;@MEFQ//]a.[Q5nIA
%N[0F6gHlOm.d%p7jB%U\+:!1bGDe*'WkarhL)cOG%`\l,mBil%l;@c=Bn;QeRAJ%U5YRTI?GZV.,!!]Z(en!Z,Y+8s63ma9G_I.(
%?k+\B*lJu%4P9g9&;Z-u72O-uJ3:mA1i*6pAVK;0R@_i:*04UGKL-l0/t?da!5^$KKeS.E-,i:\.L1Ms$CAYu":A%p=>P-nNa`tT
%#fV>A5Gh$u<p"D!XHLX1F!Onqe-mO@S-,u'qm9b_##l__kf/@14O+Z""Y/Og8Kl/KbIh5U<`jq6"F-N6MB42hr$de!$4ruK8r0bq
%7["[?XImS=U"mm<TUa0C`c:9f%-Xo]oErYn#UO_q=27L9OCYXJ$qXROknQ`,XGXWH.+je65hQ4G"+sJ'17'E*_.%4-,m9?E#m&6u
%8j(3$^cG&aA$f)<VS/L06*/#/P1s0pPA0hK%&q<M&*=.Vl>6u<"t+as`WFfU7?o:E!HD,YRQuCRKZjIQV;OYXbp4W*7&Dh]EU.g1
%N6MRkC(A.WX#Y42ASp+;FJj.!<u]O+JP.!K9Xh*;C)^fcMTWQ!OA/KWj^Yq`p>"3CKK-rmQu=/Z%Er__p5&$T5n(sW$YBPnR@,EY
%M7N>Y&EE6le:Joe&g'E:9S>hgXU(Xp\.b:j^n[A*.qS4c6"\7ZOPZtm(=QiG&<fV*%%.m[aX!R<bf'40I$='C_^,;:Fs[\'.l'8P
%_b>ar#S2PJP%%i@Y+3^USB8ku\`MbtO?AuR8Ko</b[CZT+;@6++?cT@5qA-a'f$FA`i\._Wt$(:59DVl#??<OEiL.$>#QP&e"-V\
%!Zt?CZj^eGJN1.lU0+`,HO>E5ZM(eBc%/]g/<E4#aC.N&*&^(\5j9=0!,\]e`7(Rs?kc4nVD(LQ'ojsgbQ4sc'h`QI\TscTWTanK
%R)*Tt;^Z.>hFD*c.<pC&MF9K;aH9H<,6]`OB:b^T_G$)c>ZUu$g!5SX-ZU4,F#$>M+>^-+CK9hHCmtaZ2h7@4S:M.sTd=rT*-#6p
%YpM_(N]R7[FX.T3JaQMBc9I-l&8Y[G16LC3/7qV,W#U-c6tEkB+=\&bXBWHq"'mfU!4!&,!K`N0c?2UQ(l,FAO1R0$ZQN2D<mG*5
%b2U,baC+j1AtZ!G'J>.2aALL0ZNjKmo?:2o&Ho+ci/-=o`?*OMc3.ND@7V1=eT,nbZ0QUTgsnkQdq1Q-ai$Ms*+!2&d[Pb31;!jf
%!,mJ1E#qLPSOqg3-O)S+G[f3!j>^=a15XOu.MIm$!gp/FGRN+Aj["pFLdV`Y!TV9i7K=@HCHZiDOFq2UG4e7X'-GkPUsb&]b7Rhr
%M\<`*+\u*OSW3E4#M:?l?Bg7?M7+cFm9RLI5sR06[D0PO<F0.P"#_J,-96Y6)M+;-$WluUU0tK=l0=*FHY\;U,l00^M>OIZi^Z9]
%7o5;b;)q/Z!#YorhAQD,([taf=Ohp^JkX]jk1El_DC4U1A>WpD:d8^EFT@m?dWlge8`t*SElpGK48"dtNr->Sma_Z/M7,$A]@^V^
%CHc3C`3D*Yni>Rb(:?<FXe*V=G=IB^!ik$L)bVGQXXoV;5?*A(k#b*7GfDOL(8[D8;9KNF#T&(`XE&@fXE$(QSIm'p*n?eWh0s"C
%62!Bq@1oU\\X]sC:UBA2F,3\7UmHCRYma,[R/lG/c4m4e#j1V-91H*-#7U"Necs#pXT8uD)'$UeMLmeRd9[$GfRq;SBZ4e*-KrP[
%??2_p&_ENuH^6QtNm*YHW*Q'4M-MCKj%P<+ed`s7-,Q[Sa?aWE[Gadl7`e>TkAXR/^M=LP%Eb8#_j!<$\_OL!lu)biN\gC=RD="L
%"\U>?AKkoX6'5,.P=8>!SCXWH*'tuN8cJl1,/\d*:]CCIHb3TWDWFF^I/s;&H84?g\>;rLPP.rPpq[CZ(c1QiGO-]PmZGL@bc0#U
%/bQpZrc5,s+<tsrC=U@eHL*6bh(#P\R7RU8A2(M;@VST\(Se+K4SQH;O:g$4ODuiZU^__k[hHLCQu=5BDp0M&r>I9V.uLkd)Q'tf
%%G*hJpnR%k/bf?&rn#NS..B[A48^PdijOIqqm<iO4r:(^"3RLi7bi+>i1*PtMVj'N394pj<5&8Ao!6V`>l`b>#KUfUJNZV@2ar6-
%,!g5AYMK6un/tL5k-d@,a_iqd)Z>E@&%+.iB%Np-df%KO2KLZ8Ji@d!+uf8^oc@8*h$2hN=,4a/rXa'd6_4nu<6cWskUk>DoZbD[
%Te;m*`,?&'["WjdpsQ%9(aj0PF0/co;Jj.D[F9.uVQ*RGmJRuD)oDkmQ]FMkk!6)35Xl$*E1E-W'ttNF<&UIf$V,30%S[9fqe&Xc
%qu%"51JU<tm19ecSZmitfb-qF]H+;"akIuc\?cc_9"A9sJ7XEc/Bn&J72pgm9'4Ku(m@O3<$!$V'a-bsQ7WSCd#\o=KCsYDDSt>(
%XT3.lpS)<ci>9_-'kXX7rsr%L_h[=EMU-d%r>5L5hQW<5]"F<X)jj4g6b!-8qAF6L49&-%M)*tDs5aq-M+a]>R-u:S&'\2gdBT$#
%..![?CmAZBUh6Egkh&PQkV(>gQ^Y0ip9Vc7g$a.+@P;TFh(a4PmMMFuI%oFO2Br;mGK3gF2AFsf@l<u.HF=^oBt`CKMnQL5jOd*H
%<-HZ.CLC"MS<+!7#q4WPZ'SM+f!DFGlhql-m%k.Pp6#Z7?*qTt)$=R^?ZPM02:0J&cn@<3H?R\Of)$JnfLm0*m%k.0];R<Icao]T
%A0B3A=gT?uG$0jl`HGAmUrA?tLgr(i0KSpU"rFnmhB*co7@Fh_Phuq1Hckf+X_7B5ZhJCV?1$One$B>_15M#od^IO($@?JYU)SG.
%3N@h<Q]e7](jd^Bg[/V>V$e^<V<"elS$A=2=.6C\p37L&acC'jp6$NDB'cAmXKe+T,Ph[m.ChP/B'cAX0"maZQ_O#.N4lTR`7R_3
%34lJ_r+L7`0<IaVZ'XhEh:PBJZ'W&,Q]bi3F^m'Na3kRndN1S\06r]9%/btR@Jln1DnMREQ]eu9m`&QoJX<;';D!iJ&fl=5J]ZP;
%_q7W(fLs-79?FH*L9d//@kS:$0.j^C@kTFE$tCr9aUDZ4H"@o6?J<^DHYFqp0_U[%'#W?pIMqL1U2h&llm32-kSee^O05aS:?/s"
%6_8q<fL>,Z`B[VqGK=5H/MK6ZOp?]S[,/P4gR@*a`%^nJT+o2q9C(95,IYO-`%>sfWc[6<)"/h5p<kX<Ob"KG16A68QTVS+9,hu=
%Ka22PhsWMi?oPu+(2Ia"A[+PA?FoC?4m2cP*#?#JPJ87n>"@*Sp6+Yl&[Ianh?"DbP$>?S@I0fu.-r7hPQMWndf,-/QZc#\^#\f$
%oGkCRE-_mgfLu*EAM5?"oF^e[>KPRTd7t'00OZWR9r&?oOsqG4,\/PgV2^88Q^lJj9#=ogcPh.E^#%C7DC#P`7bC@O,pu7W;K<bJ
%eGWuL*`"fe7:t/6pX`K%nW3BI:3oK2+,)<$kb,/H:>k6uH\rW!r"5J=,V$K@#ppPm.BZl_LTKh;"hI_'"H$aVoh.!>&RI0-fLoP=
%K!CZN:lW/QN4fpa]p'L`.2[C\3hfM+:=<FpGJ\tn]Z]cQ>%6ip;_Jo'kY*F&G0tVZ0p'u`*O7+?#.gZ/">20a]RLCKC5/>q_:VD0
%<Wlncm:VElA@!HsHRV#L;D@fBE^Zb.3(`k[;^WQ`SM9ccDMYQaHm`eGpu:Ip`kmRm^#VK0B4LaRSMr=Nl"`a-nfj"3/m?RJ@j"3M
%05\Y4QPScp7Lh6sdX(qb0T/?\#q(XKjU!;mQ*m2h[%p,MEQBJs>ik,"V7;OiNkH,C]u\tiED_hAYN(c,fNDV;lm7^L,B:C\3aR^c
%b+,4^)Gqr0:<]Fh3B,G^-gn*tfk;pcIE]P]>/QnjJ[EqK,AVS[TOTX#:rkZjp-g$)9lSq4`_#aW>bGH84K'eG@4s3laN@i[b*7ju
%jHV/3HYGX3(+j5tUE$Sm,6n"qo(KNJ?ufja]h_*_>4V4)+tmf[o2?X-r06mR2-$anSec8coZN\$N,mnf5T@'4&8oXE]4;-h:aUk-
%j:4G&0\EOBgneK8V6qH\j";qB(ZR.DJLe`GncMsP]<n1fma<#`@b`8J8J^>=\\ep@$Hc5V$[UWMTJEa1]<nul\4aOPH-q@/BuJ(]
%N\dF-U\/qg/F?Z7f*r8USCQ6[Bl/k!\l"EujEH-Kgnj]-erY$t]+B1'FJDBUOY+TLEQ9/K5+b*#Roj.>?1Q(r/oAs@#'j%U$1%PJ
%^Ta0cQQI1!e+0h1a'H:@`P#9[)Q1NWZIQHX9<(u@8C8h9%bN_6`b.=G!X*RlJFc?djFs*WelslsdV1HSGA0jM`BRORJ;&53J:Z+s
%E#bf=*9/YgD)1P-8J-roFAbNe0(!<K2GWoC%bZfE7;+a2:DTo$'B:\k7m@TS;EE9&cCbe>oNoqm:Qj.-(]2,N:Hh@PS;$)Z<<V>7
%D-\maP*aj]Sm>J0`en^o,:?=/7EsI7G.S?UEa%8;#e:Nm^UT16hS,0uZQD%Gc$m>n(3aJFDZ4rYY?R"HZfZ0^.Zg:;eOW&Vr`8&3
%X_4^)O4O1kZEA6bk`s2@3kE=:g'Y&4<).^>K>$iWI][6ahq.`gZIEN>Nk=@<+W%8#Yruq7T=YqCj6V!(V%*=L7BTdsGKAbrD9sk7
%)dHIcMrV.HR26UZF'TPqaE(W&\&`PpP^g'k_M,M-C4YeZ`.<hNAFJFIcC3_Th.j0$X&d!dZ[8ROX4E!7?1VZo?E"r7rUA+>DVV'7
%M/M+FAHI#7/g\PDC;sOONk<dVh8XH$2X%YD*Y`KhCDY"q&>]GRb/#82H-3t_(-0ORnjDX<*O<1J$hVW@#DHBhhS7+LRW06AC[c%#
%X^Cs.lhc.G6e:,#6-!9r`a+I^]@;hP'TK`SQ+OE;fo<W)gY7_"jP/FK]<n1fmSYn0;E+#AFPN^1gnj5E90M_O$KEa]j";Y>/p62,
%D'_%,OrsN>"hlD[0P5kpQU\XSD,W(0G$3:.,AoPZcuGC7-j6;Rgngq`Ug`&T\@G8M\4^g_Qc@ti!dmh$*;e8*=PTa,\a@[NZ5X87
%0!,Ru(uN8MG28N7I^A?0?s1g!,Iso-HXpu:)g'l3@GE/AaAZR//k+eQ/ZC)W/pUuIQT"%cL(2kR]gdB`do)-g2D&s,>=eVMYUiLR
%4I=$H>):oM2X%YD*Y`Kh2ssR!r_YWB;KCQhDVV)L\4bYf9DdD](L-?PaPnghd+KQ`<-$B\XY'P"@^e?ZAEf8d6\]TIf!D6<lh(`i
%<li,tGGuO*.66fo2ssR!ma@882"$Ms(3aJFDSt>h@P?HFmmYRP__7B9/'OdO0)<FX09Ap8<2ej`8i^=2V'uN/9J,&94ka?3VcO`D
%E8aZqi\"i7hD8E3RCh@0@Yg7DNcjdhAAV%4aKdu3S^Rq,j'75a";I)N1H1t/!R2eHjp[\`RTn_a*]9%^/Uhs4&E7>lWmUEC^,&)0
%#NL9,/as>0d;[=sNi(qq*]j"RN!ljVK5O"mXqe.gJEN:@&8Kqsdh?bBi;uhr)e36HT1e)RFSbUU'[S?MKI5=(*BlQ/HO7Y]fCJid
%5T7g9!R.)@d$u[R-&(+M#<Y'aT+[Yj+!j5*'QnQH:Z/31OhQj<LNG6G_M,k^mnmBsh`+n-o;>kh9F4io%bfkQ8X_^PTJDm.+_7[j
%Y/_BHQ@"aT//5\Ejphe#c<10ci08?&M.3'akM0U\jd`SG$'Z3[A<%MS!nKtlKn2n65hs^#GpZ\D5E"3\(f>2n=o,F-Z4Y\t,Vto6
%mFJU(^<jqEpO26i(cp1/;7aoL*^#q%q6<A7B.B=-8TLNLP=m!cFMT^/^o?$$$%tg;Q7[oIFkTb+Za`a6n!N>kiL`3e6?X\TG,o&^
%)P"BI2HUXSJ;St^F\G4b\qe_$:D=#Rg9XU[,hQLL$PL/3^(pf/-,V^+$m%q3&4Qeh=r@:MMUB4aSW>e[qA^+FE%]R9KQQ.$G!DJY
%cI[Cbo'AgZCgng8>iFdR&\C0.+k%8N9dk+j/i+L!c'fUYL2r$Cb]TaS\CH8:3hl.ci^A3<%OY7hmS-tR5NXoYSEeRB7['r#a#nfs
%BK!C*)?75IV5WF(<'3`r8$W'>#PO?f:_#@>@T65Jn)!,SB5F3=99rX4Ps3_2.TE:J-N7HQ"'(el0%?Q)71SYmkSf_eLOtFUW)=,A
%@cd)RC_(GQRM#GR7a[bT\O$jegbC_V+u:!Y:6&Ae/=0j!!7B0hqS@;32bE(pGh_;@PO?YIH=J.l!0;Gm`FtrI0\[bJ)&2,pUa.;>
%1\hC;R"_qji3Z2<@1#-TP`QD0HR2oE^qLI6+SUGR.!,C57log+QQ0/4'`6Zufs&IhItO>'XrZLigHY%G$*e-@33ZHnnc%RLD/Mg=
%Z5rX2"[_g"d/tsKZ6CY/e%uCmJ\mW^\!CM3VVCA\W#$Z)0P$;EJY,d[(sI]5Pf8V'e8ofDSqf<r=;iW*Fat%#[%l6@>NL/Bm00=5
%(G9gY%SBj\hu]eXVeN6n@as\r.fMqib0'9FNQ>gVS6l%$T)-\g+QU4kK&]2UaFqWnJ/G_/R(UQ],3l6mX7@"T5(a[2kphg$)9Xne
%A845t'o(L%E-461>jK_m:/R-<T'@:)p3,0i1tP(7g5iuedsRs)A.RUG`BgJBcuJIm:%Kgopr&sg3;LgRE90(3"IRN>N%g8T.tY%a
%0M\aR]YF_I%TXs,-fH-\MMJo<Y0]38!_N)L4=[7I*&@eKR-/^WOi&t5Ul?lmg)TT#K\9W/C6Na0i''mTQG;`gJuPu/a_!\[GP[2/
%e%kt1YKC,af)?r[3L;4ek,4ctW^,e[%ih*3_&f*orug5#^8Lm(4?JhG7&8#LE)IOj$r=RHQm8!ndA[;#`4u_[BG)>C1eTObdi)R[
%3XW4D'V#6%R`s[)M?F"@E)]Srg3>mgW5pu9UTdAqRSNgN>?O^9LCG4)0R)]JV[.BPWa`d]#<2YoE?AbH:)a=uOJmh#):u\%KLi."
%8u)_bQ45t7DKM:J-1[oG8Xi$Y4dhd"_o_K!k;c3(.&SKmO"Xu9@)Ej#XpjF[3q9g."#(FN&n>+"&^gs0Bi,#5e#'JmB-\?'gp=K$
%Fr^&1@OT:HGQ+i$N96rO9uA,ZL8g+#LiN;bE^$!AGhfOu-T!(`&Uk#[.lXKZoFSg--aj4d'?VD1ki1b*Wc)^`,H(?"J!f=EH1_^?
%l=a'TjS1IG6YV$=:0*V<i7.AH\qp$qdeV`-OO<!R(DtH.7RYX.RSd4B1OUPU4q+6lOLP<cBJ*=WA^=>3J7@$rc>b@3?^SX;#=R_Y
%=8!+5k"sLdQq8*qc"(0qA3abu$tl='Q$P8u7(3G\#N6.[a2CT;Mh3EAD?@EjAWe[e>qTUfjiXt7_oDpo6COlj@)A?MPV#'/PIHcf
%n4ZPV_+_(j(7!6"ZF\-L(E#jO+j%-'T1^ffTY2^sLH_<W\brCma1pRs]&2uboERIBglf4ELAT_NW?J'BqI7_XSYgicEr/]mTh\`C
%T_0]kZ)bMhk[p^,kJ@]":D]u=%=8e.g3h<G#Vg<,3[C2J?(qEnU;=K30!bL(oQo_-($!]["QH]tW3ep`D<ebN36K=N1tR!F'QP?;
%<E]J3Yf*u^mTik^4&Z#g[$06Qd2>r2W%seQ.q:^O"Vbb$V5>4hLEJN[<2M[OejQ%Q+pF8g=$2=)UX3g;`G+s?9aH1cR#m&@F1Gu-
%HVkV"_.A>_)B;a6Lt:8^Kotoe,#sp>U.Jr`XCk,-D1IWt?"X#&Nb>hD"eIG`7r#Vo(-@`,%=751;_q4WLKeJYW%Kk(A]@WLno.oL
%+KZo3JG(bW5e!JtkO501\^"ki?KC<%8M6$Kf'6EWAc?sG6?,Ba&OGuE@\r`O,5jD)'6;?-CC)`<`h=OAe-n8[=4$cIpp/g!KS>17
%aKZM77clbj%VcC"@r4;Jp-4LTdEmqmDjuO!dNlN?IT;rRJk?+UnVm#&<37D:-n4&8\ffR0Oiq^j_iiT\rLk%c+&7j)(HQ)Y_(t-U
%@^u\&$\^'l1"X&49/enEm9C--4eGSjAl>9P1s"3WSQe=E<#i29j<4Y:*UF_@kHACHNoG4Wh^6b!^\jF*rVHC5rpJO=+27^Ah4*m5
%mF>PGq^Z>(rqXmDIeAadI/iTGIspukJ,?^iIX:k\m;Kc:i=185T3qQSpuUDks%XU=fB8(q@maG0qs;_dB9-f"iOGFJfl2@oj#./Z
%`:_f5IJ<P4RpNJJ4IXbZ2p9"[P71q6qCt2aVst24!o2-cnt81%'[-2)e[j;d<*R]o3YiU,&p5f3coUE=RPHAanRn8PM44q#"MZdW
%To/:FqauepBWgXL4r:Qr#(=4[o+W=.e)O$o'-iqGjX-<?\/c>B_q?K<;edp_K8M`?QAd<<8bCs.mNKG$VcS(gr,c!MO!fEg83sm/
%F!c&9Z-H&r@hR'?7d^]@Y,g9@I&l!6,(cCBSQcl`7W6d\EB5/7W(8ui`kEbgcbt/^IQ5*HJcqo.lHNte5(&GS\7?R(,&A,[9CRZU
%^>U)X!UuG(-O-7D3q<Jk[WNW&qbi^=YXaa?@IsWB4aeF.cbF[er9>Y\^\Z3e5J2:@p1lUFhL,4PJ,S,?SpkqUmU)U$R=G/&a*1n:
%^\DaIp:oa>*BL0[=24V!2fG:+If4'[97QQ^msb'"qfgqF05lmEAoL',HX?aHhgG=)^\_HKiGZL.me0-]cegnaci<t2n#[VheZXGn
%mY@:(rT;qF5CE@jq7lq(k3MKn]_gZ?)grJmp^)LB(Ou>ElYh:Nr>+;2IO0Hm=7"Q.K?mikrZhIAgTQ,%h'\1]qP:$<8or9`#bUaK
%NuO#gn&K]-m('lnh`ZGcLN!1^GAlt0s5hN"Dr1KM?@."?jlPp(^OPkClfW3#s+`OO^Nn.`m=cXoj^E-J3U:Edju+Q%.%F5Al7;^U
%7`!9*d?[:L_gQXAiBQ0K<5,G#G?:IJqsXSulTJVPk1pR*I/d!7ZtAuQbUn!UhLFnBs6LQ3pU0#(!r!dcJ\.UKIC=Q"?W!ob@c,)\
%'4\Z,p[aUg>KtI-O76`AlKrp'3W&dkID2Fbha_96.c.m0d!(cIrFXs1h(?<dcG%=f:mG;4C>\pVWI98oa%pp@n?VaNDj/.ok3RHM
%[oL#IQ[S=,,51u+[QU-f\F'/TT6Vm_Sp-"\a;=`&W_*h@W427:\ug8XLAU2,eAe+&#6X?hDs2s@^Ff/;U&X;g%s$ftOZqEi(D0A'
%`nA]T$AIgegJ%A*2X1/Zm\>806iWKTME],8s"do;3pE)I>"W/'r@b5,T5^(ef)G2;'Pl'$&'9->n^<^SI%^lOqrT:tHjU.B,Df@u
%jopfL[enEekHfTX]?9>D@eO5p?ig)[oA(3FDO/i9+*GHq.LXc5JX3fj-Cm7<gBgB;qC3SG?:Y9^cB8c]ZC[:?*2&'4>XThIpbig)
%Y14%GdkFiN5+tF##a%@Z<fUuQ6"gE4G?ak;!E[Uf4@7:k7K@]Tq)TJ61m]q-4ZoY\"Xaut6>Mb-)2qZ\L>]t/Ta-;RP*3T<B*[:i
%%]">IW#j*J"e)G(m:.[;BO\DlKH%9LTae(<!?eeUDGh"r6:77O%TU(BpE[E@M'hdF&=FK&VopJ:6Hg$4lL&JmSDb#T;RD"qe.)e0
%=FBQ?*[^W+I9i&D*@goWo9)A)4$'$3W_ddD%q\mt`#:U4?"EdTN.I$.2K8(/8Q(#iJ0+5;C_J!A_R14WWSM\kYD7kSMGd8@B8sl%
%$V9R9bEQ(!Eae?g:UCNLUdKU_C99CY\.e!nIe7.LT\X"=MPVDU1;0EHQsOMaTj4]SU2,9gCDWg8.`.=Jf3Z\[-sV0JX,Bg35Ah:h
%MbBrGiZW)nWuI5g+k$N)XI_[NP,\eSJjFEBTMff=lJSE7%]5q4_BEGX!)8A9@V-C;MgJW=#/KjrltO96F0n2E77UdRiM4=&Vb3rm
%p5*J!OQ\G[>mN.b;%(e'O\n%D>RXFs&G)G"f0dJ_J0ae5\HEBk?@]D=*MMWJ#Vm4L"egT=B;&H-/1TeFZ$S0n8]nOhnKX_R<V'$%
%l7JKqF1'e#7<4<thJLUI+sRmb,ErceB*l"#\;V:q&bDbfQK'HjL1:2r%N9jC@ibkILfGj0((R3kZpB,QU7moo7?]]NR!sq07VBo7
%odnTn,S<@T8A&Or3aal2%qF(=hb:Ud:c)6fpIOUo8LfYk,:g_!;>S-N)(CQn@Ir,GUbFA&7>JZV5g5aS<eWHO7GKjt+n"SGn%%E'
%s&.5g'.,dX$J8_f`igZe5"+J``4,9''FcgdG!bs+e"BA_AQ]'o*Mg_PPFdOTViWV"WD3["DPTl1F+3-%-o"fI5*1Po"//aHR_b4!
%BM-)0;-OYh5mQQ2]1sm6]8_,.+THLjg)Yj]B_G5PM$erW-=^d3Tiu7<+p6'J?t1BLN"o585Nli)).>4t?0?[%1u]MN/.9BUP1,Kt
%aY/`sY"kH--0Vh)m'Y+j:8XMYonlB>E-E%D>]IO@NBG>hEsMlMf""3pP0B:GIeb$fggCAES7;\iMB`n-k5h-!/*T;#m?r&=594g1
%6jpM/:e>$Eb!99[QAU<F2k"?7VlFlY*D2L(@N`O9e.WOY1br3WYX@tD+r6pqP#n_Viq86Y>gAu7/AcVoN\A^2F=M+IqTcB`P!fOK
%(^Lm'T8q>6MG:s<,o70"!usjo`H;uZW!pWL`*?Uh7Ya-1aGJu^G>\$HWnu*3D+I#P56mn$<YYeS#YYP_SlJ7olOJX*1KEOcd#6#>
%-;T<\8epA4p"Q0'Ka?[C;u3F*85t]-PIc=IC@8B?pH+6Uc!>jFbdu:r?s57?2&D$'9ikn&qd<)o@Cijo0^B<CP%W5W,^9n8$$24\
%(=i1*M'Tr"V8DGN&1CgbXh_f$^?Bd^8P:il1a/GL'gn1D/]&p"Y'>!kjiW2h_s&s"]\8s`d0!MrZK,O8[$R0-2efh-_U9DoOl.-m
%e0-=fd0PZ#8g`i@Lr.(k=d:_h$[Rth896T4reJr.LlB'3\$<_AjGjZLV`%DlKY8UEj'Z"FLV[sem6WmdLLsnkOW&)IR<'6aA?o;'
%B?3laCsg<(=uk\+%NX??7E!lN'k7&S3;.Q4kUrfn0p99ck!*4AJFK``b=,u=E[OIk&(<,3<(@7$")h34-%ZN(1aR&,Or:K$hfZ.>
%ANON_M^DTKk/",L,lPFhgKBp;SO^fFP7H7])fcn1_?PF-^IKc?.$ZM?%=GGE68U09k+Lr1Pc./j#o]It"5:XD(X6dXNp(@Ge&9gE
%eQ27p0-qF.ToW:IkZsB4+j<2$fKae`Ukd+R)e6D@,Y`q%=g:h\Y=b)bC=6K>aau3*B(=fU,9]J!'O<5i,Xk.Jo!oZ'M)g[]eY1ZL
%'bn4t-)DAn/%AtlRhJQlRcMSaL^Xa?qBsZ)B9`*#m5uZ>5"''U1;tP-,n??P29P\p"O..o2.@tD4]c[$El_,aB5FB?2@dieM%b,l
%9FhmLWR$,=31Aq];\Z$<nA.*f#`3(ek)KjI9t%qZ\F>'r4Lk(_KLSmcL1OU=6&n_@Bie__3Ar.>C+ai,Zs?k-@/XIdWek=Lp7E\e
%HD$^We5/a,9"C\A.t#Wm%Nb(I=S/HmJ8%N2.0cFlZb/@$9XCD94N&=B0&h_smom<2oc[-b&r"5?LF#Ak4<6%.5kM&G;8e*l:2R8$
%QrtreR(4)'=UrW['-3BJacFRf_5;bFM)ni7TO.l6),)m.^%N_GC!:ulZtMd+.1pN^ejZY^jML_W!N_G?k&k2oD$k.uD@V(WUJ3N&
%4eCPM+5Ll1=aJG;ABl[WNuJf:`2#e*oR/$Ij;@,"a46MZ9%RGp1g1[%2<7Ja[C0u:qN2Z[8j/&4s0#P8!\.H5C,VFh10P'l1PW!G
%lH">PACLK2ASjK7.ilEq%5;)`X(L+V`SGPDO4%U1@d5Di;A8C=g]f1jG1"-1\c,hpGe;25Pq@;-NaP5KVHRd^c>qjG%*i^*oj`F^
%R/-u(prC#8rOI"]7e'kt!T/N]<!]jhI1PHp06_KkX<)>3j%e``E;SLaD&+^+q/l[<6V`tNlqo_%h&GdW5Ih7po0<3sQ&]_U'K\ic
%A1ZF_c';ZJ1VthW3D1YQkp'ddfDL=H8TsL4T&GVfkW['AWZ.#g[Ad6/c]uJ=ap(#Nl!I>5llS,[.coLkIqk<J4Si4RTI@r0>$=tg
%?"mYDIO-)pP-B6`U?N/6\1=dra2ikG2O`8n8.I[+_rrr&68o]bNcjIEh^CWXcY!riBe3"=ONVUYe:MZ(23l<*'2$n<T>Y.M`;tZl
%(N].399Xt[VMT3Epr^&YDH\Sm%YA,XjbS!4SNk,eph0jW9XWR3H4^rl-IVMD`H=M6\/]8C)E8Flkf#DuG:;]iS[^^1_Y&#5(G&1]
%KhG[RPpS*g3H<kuk=*A_j6*$QE<F5AcL^rseCn`;Gc/T(,gq2S$5<3u&Uto8#SW"QR`HnZ1_7VS-r!PKFf!ldcW@IWI=/2M73H,/
%!2><;JMbKd,5/6$-5+i-=ZeT97S.\EX-N,pDAY]iFjoBK4&U=9325>dNspZ[btla[Z\4"->DSojD3*D#F105&%#Q^'+ph=Zj?u&'
%+AsaPrgOpBC<CDB*mX4aL39nkDn`N#!Ip+%&cnhk70Q=KW<bWM@aR1NBlM#>X0>P+fk@rWL."HMjAb1UID2GM+q7V@0fp+a?l8C3
%i)QRWWdp:jF;A4S?:A,n9LZ*II_$bXcVP5Kk<ldna?4aG`/D@++mtPk+kKaWS6k@mjQ7DjqXGFuH?paqk/QgN\>pA7bg@R=.Z<Y.
%$Ou^OC*bag$eRC4Z[DXRBf=R?aVF0Wf7t\T3IPh@mX+g7rd2,XeaMm[kXFLAHRR`pgiT_C@//HhP>-@OlV6j'f60+Nf/Dp.[\#e;
%nCP.@<#/!"69eYs#O2F5E,J(LC2-:jL*?#oCMpfPNZaCLAL7$q(Vp,9:FU'X_/E^B3C?s$7LFnl=FCZ.3AM(^ciYRH>;LJMf$]>H
%_ajN2Pd1^:PW%+85RKPi#=pHZbm+g<6W:bc;71][O.Z'tU@UWbDu)Ah"acDB247"`)!$[/)40r0hiT5<GDQ-!EUtk_GTU@BUXIa`
%lE^Dn1dXcW,r@W_%g?Z=Bu2&hm3k>O-[-;EVPrBTXuOgjCc9GkjZ6OKPUK5]L@V2dH+DfBO?$NR3*)I8/L#<AS?/MfeHeVOB"r0b
%!GmM'*#nKGXe+kh4'4XE<>JrO]MTS;lJ!_MF=ciOrcWt_%-.6)qjq9PWm<gkMj>:`<)">WBMD#p""$T+0)*n!$9@@!bH2%d!oJsA
%0'P=;E(=L-lW0NoX=B-e#*=m#%[BIm1Z<IPqP+(Ogk2-g$1arF`aUQX\UiuCgXL,Q->$LG8ZTo/2==L$mq_AlbARiQs6Jji!mTO4
%.Ht0b@fUD4ZB`1`4?`g0&39A2BL^:gf)a!43a.S<Ln%Be6$Uk_iNMHH%(X96Ut&A@5uQZ3%'\qp!utL,3(\BCZo]C;P]*bE^((Uf
%iJWE=EB/u@VNHX8f!iZ@/26B/kZ343'AZ+%=F/=AMY-[,Z53*qmIh2]k"!$GMn?X<0(L7YGI+Df1YOQ"O1EP'^Oio'ah:oo>t'N@
%pqAc<aW]RHO_<%VA"m$$SnR7D4G4Y-dJ-(,%0Odi2'NJu;`Rg9G/D:^q[)j'?qXB\i<89cmXu#jd)c%E:pGCFcq&qLCUSc95Fb#i
%C+WW?4\9H.d@rH,TSX.NTXh<UHkQ:;rX]fpO[=^0%miu'6P3n[-_RO[EgGCp9[E*bG-EI(Z??E;%;j,udY>mae/1/)Oc^7]dSTgB
%FJ_!-B*$BAP/iJ!-pnfA3V;G>Q]nY.!qLs7!X2,`lU(YhO81'k(`$/rHI*"dB:L8,i3S,KNgL,2!(I5n>cKu3e>;Jt3T>AGVMOP#
%-<]9_"9]IDcl7jYGp9s<f;p:5"(6eg((g)c&Lg`Bn_buETs",O(dK$2X-j2s\IAF+Ok6]mjBuHYp?K;lbVk:kpi`pQA\LiR1rsec
%QBNLljiEraoA>+%QAQZfjrZ@e4fj85_]9X(BTUH;M7K#a$0+EBm"he32$P+VH]XBj`?C3\cJkFK<]"VR#?NJ-Rj_N"VLU\S_9i_^
%"JP2Bd.r:SN1<?+/d9NX0P!1h,>OQB4UNN$&6G8%$Z\\\Bg:?LEFO9SHZK$aJ1_r-5socT;ds;#_)+NflHBDEAL=&p5iBA-Fp:E5
%U??J54NYrG"`8Y%-o"bcQF.0YolM"e]5Y;%%Eu'3Ue=C'#rY*qY=eYNgXc%r(Q_-eP#=N5c^MN8%-`WJJh->)g<_lR8;P7gc':BL
%;0"]f!7]:>nkc0'$ot*epp^Me+=n5;0L[m1Gp(N&7K\hFA*\B!?(rL15'I[c/L9k)VDUn5gSJ6Z\SabZBpG=3LnQsT:j"4?!c>$E
%`_*L.=o1)amm,DIkSQMo2CtK#b8PFr,E"4@MuAd`o&*6V@3Bs-&\l3U%PlEhf!MSZY/*Ns9]IMOAEYGbKOkU:a<8,]6rd3CM31Ze
%SO"#1G`kDeNQ]iN'l#_D[cEok7DOk7fnBs2$IY->KomEdZjTPGdLZfA.?1r@EsR(OgMI<oA^0bj@4GNT)NmJ&*_`b1@+l&uM:A+I
%*&f8CrIm+*(K:U'oLdp&mSTl<L8Oi>3sO^MK%H`J>MSLDm8bTAK)@qE+aX2)W[=(h+A=am>+f3SWb>N?S3RWr'9I"#gEn(g9=Dq.
%;(kH:#R(u/c^`u4+ApH:&3K;b_$6#(*7!<i]c?PG9hO1Bnl4YP26.=b!affcX>Mi5:S#-P5TL)U5_WE-7a<S;b/Ct+=)87m]V6RM
%NsUb30!6np\2;SU!#9TBRYNqeR*XS.<"JZ!6%c[6Z=67<e1#G-!YVk-V>)[_NDC3r=tE#N7dt%"gM7"Vk+a/a$k2;C=9SXT46EnV
%0Jhi<M7PT28k&f35mm"t0bVqA`Ku`aa>XrTb1&3LSkZ%?5m,eQ#N!o%-nq?e;Ap%l:`^4a9(R[Kd"r]"&msH4>=U=A>QY'YI&1JH
%&jIXH8kost*CBjiSOmKeU_5_5&Nb4:.F]2NOY>4_0il-mJ=2\ZR&r@pR11^ucMX>*;R7*M,`kAa"'EiOOcJ/rCeGn9JOaZ:*/ZSm
%OPo4LBetiG4\FK(qaU\M!"NjcjfDu^I-iDi18A2>_`\EaTh%s'PK#HM7#1ELOXt^>dRBZJEkD@^UWDKVEGEU"60F;V@gL30;*+e(
%jUoe/jZGr=M(KIdo8[mDaY"5F\BW_oIZVf!K/Y'n@1+>O/ks?a##:Am(*V7i,9)9&hEo_b!]4a#e:.VOP:Yj@K?5IOe7FM:<oShU
%C#)M%m1!r8VOVrN5N5P1(3:(&f$u(CM`?3S;7nM$DrguM)LV;\Um.SWcVVo?FVk5(hT*=$F<7UuD@`O:`pIP+K^A4($O[dtXe'll
%>qq4lATrn#W5q0,42Vl]+S2/7o@ff\5.ls`c&br]%_J.UJ]tubL<_AWGLO+0'NmAIXQT[n!4nQ5-R1%<r!>Rj6^u)=7S(W54G4)\
%X^0p_k(u;n2=N$[:^nKB,hjmk?aIGO['<pd4<udVBeifiJM\[CGpBWfUN;8m1XF7sYaj*QOP7I?$jlYqOCBXUHQ?1U_IJW'/pCs>
%>ZV$<YqqJdFi-T#?aB_8V/3#Wq0YLP6j,?/SfYla27HQ70Anb(0aYrQ=&pp$_4/cfE]nI;"0];_*;$HlUtu$s5C6/oqtW#VpN"qK
%;kTC(REY0'!EYN2V$2Gf4Of"lStAUej,qZ\pX&gK3R4KI%[?oLiT>4Ch-\p0qq?MUII5<Qj_M":k&3BT/KfKe>rrk<IOWn*"\-iZ
%l%1r\k.,j,K=`N1K+<#GFDl+?]^oICIfiOh!FTs,3plpjZd+s3q()=(6g4!LKRqB7Q8+FrX\7k+k4\"-]fC&?E:$6V\J_pUmT^EW
%[V*ZE[k9*Qd4E).OZo0Ahm7_UVCiE?21STP")pUu)'-teXJ!CPMnV23"&<FiGGX@(TK]1<*?#b"c"rmPiBh,5>1SaF(r^^1qt.qm
%1Tq=p09?++r0\\DGZf_5K^0O%DGR*a$3jVhUPTZEUt_:uFP;o!Yerg3(G'cR+g2ub"+FcG,O2OYUo_mcXhG%)DKNNDl-E781Us?*
%Kn_Rtd(%TlLGZg!KCqT:!oN8,:PnY0>B;D=bhRgMNL+-]2/035-#_>p&o7P*PLL/p2=m7C^V`q4D)]^Mi#M([/^9Lk[a<?h8MnUM
%W+IdpC%UgM;o4l94DSP>[(8hmR`V]9P@d#.(OkW9$Yq)t;KBZNR`Q#i.jh8U`5?;dKEKeFekES&7S:p>->`IcIRq]d<*<M]CF2o$
%?E.VsF`_G;h8FMa[->2E':!5t46\*gY^T.!]^>%.lK4/^X#ekS"8Nbs87SC/Jgt#1Ms$arX)loVpc[mE>h8Mf3OkW60#`>(:Hr%9
%+HE<-[j7-B**11A_VmM_C5:RG',>^G4`V9*Ceu@<;\`YP6RG-+f5rHk`hg.&nPIA6&1FWmf5>P?*b(:-@j9=ph+B9-<YUkZBJ`F5
%J(?E!!498V-jUWML8*2p_9PZ[E7siCP.oNja?YCp(SZPA8*-[tG_Ud+L8Ms2@fB1$mh*B/OBl?m/bihc][.%DJjM.*+9!$HAjFWW
%nT?,,XnGV./;UT%OlSWNMCA^i/k[dQ$X"As'h:O$_,^/T`oYM0h%&p;27P-ZX[6<?X(&XTb,sUiaHo%`"R"`)Ef\OO>HhOopKZcW
%jrmoK9&.MQ6dCmf4lbHR#alJcHcAK$O[r54oKL4SKLj]^l6fF2CNMbmJ;@ttmkLS%O\Pm8Z?1^h;rf0\A+Sos8(AInaeL9O4QEXI
%Z7a:gEF_q*k[kep/(>k(j&f<`2`Kbfar#!A3.+T'+R^2'Xbj0C$-1d)GjX+9K/^7p%bW96^s9f(VDgb0K:1^FHle)>R;e,`j^n%T
%E;3J61$o:f)`&6_ZjHJu@C\1=\)Vg2$Z:+K<hI[N<A@d5E_gXujdX=PYmDe'/)mc>\)jnCgl8Dl5N26Rq,366L-R-V!oV:djR/*u
%,D2R"O(#DVNCLJSHp4=8+p#`ZI[,R:JVi7""(;U0''P-t2Q690%6F/C&fEmVq(;/L!L'1jndP_C1$92Q%oV!gkb]^\)mKCW$:;F%
%P):[8>%f]P8U5DNb+g/[aMO@Pl:b/3J2/@>OtA0G9jr<?-S!nW+"U;@U@Km8;0ci5l:tDe<)gn2q*3g(jXCkD?;\/e_'2m*m?X#Y
%6V:XLNBDaNnp'VCFZk832bMdgIV\j!9L8^4NXH5!M"M4dO$D?8%9RP]IM*0b<5]Qm"pjH%Jlq63*'bf#f0X2]1$]CD3H7e"P&9G!
%^!Y3g-')]GiHAK:K_g\-Iu)TsD,KBQe8,:gXBeTip+32K4IWA_3(R9E+Mq40>5`\8[<MK]9*D^:Hr.T3hjl#1YV_D`P\8de7X5Un
%0,bB0"a\6IFec[M-PUX?I0436l<0>U4^;!;W!]jbphW0T"-K+kll.<_%JE9i?ouk!\A,;ei!*5ULV$I>gnkV-S+_%j?h-&'WX`>&
%IsIi$6D0#,F2h>`brJD\d>9d4K*j>al^D/]l6OcnH/)e-nQ/:Eo!llc1i!_Fo*".XKHa/SLK7s-PN2fp,Ki/K!]6Za?\c[mpM4h?
%ca_P"aHRBtXGPIijX?I)KLdJY$Sh8APMckQ:ri646A<ZOfVA]T`8m,_iLbg+(lL$hR4D<!GXj^",p<=Vf!DM2*l=R9(:Kge4&g$T
%<IT-7QOj=)O_s(W`=J/O*U&k$)TM5C\-F9<]giUDmR%c!/<[ig+7<tZgbYA:2%VaZ,iM"@P#,$ehB%S_@:)I'!,iLj.lNnH4QL^/
%8Af4%8?$r$VmMHDQaGT,&"kq=.L/P(+FG@egO#08UP(]7ni@]XjaeO/5PQgim@\0]=<kK#!=UgfRHq2Zru6X6Pem+=_V=EOlRum]
%8P$]b/%?.A<^i<CA;W#SF3_",0f_<_dP$IbNm\L5]$jU+J:p8r9kOYlp:e<b=&e2-.?boZ*73Ds8I@"55ihqVW^p]Qn'%2]oN.E2
%Cf3OjDq>#i>*QNB/RudDjr<,ef%Q\Xq-AWk&DroKG:8eJ5iNh%]d5IGDJ?4R0mYoQ2)V/uJT-PnJS^W0kE^-[@Ag3faqe\#,htAA
%WPIOY<`Bd8LiTi4+;DA"oRcD(S<r0>P!T5%gKXn9J#g,q@l]uJE39uYa_\5,fZ:(q#^=;W%e86XjLB#O5Dlt[,UktfP3D$WgOQ69
%,)/n0Bdob$/&r0,M3rGY!?$fe!,smD0#Z?s'd4-acb\TfejEqh[hO>1\9$]Hql.J(B9n3Q9]taDcqNqW34K-@b,W,UN>l#Q$O_Y]
%T9$XW4NV2f-GgBAcefN0bs5T[QChIqYHViGd&m0VIcW0V./KDE:2pK#%ZA)lX"psu?ojQ=+&D`j/'M9RB3[Z2@A%[UXrh`2RNj`/
%nW:S<9UVT9nmE/<l4*H7_@lJfo3DMI@[OF&F3j,6SWL]:^59eP,tasYA*6u1SV)Jl%7ukickgZ\P\L]1]G6Hc77)RU.c8<A99r&e
%,t'%p8mHe%A92=!*>C_i:"_r!.U8GQM3?)8bH_ANfuamlR@/)O-Y=DRjqNYkSg\$WL)Sr*7?A6eKE;e21`ik;9SmF!OD\N&<6\T]
%IH@!cRKq.h_@?8k?mj3fZGT-EEBZu]-:OZF)lYuKJia0(E\K-s>q`US&hDVMXcmM)!(R]X8Ag^0U1mT6iR;t_1VaNN7/OUlBb:%H
%i5g[uI&<RSX4sM.]arMD6Q*Lp.7B@%GcFb,ZrFI6140\s:dptnNuX<f[)m:O&o!(C6b-t:e&#[CgUV0ElPk1@>3^an79ep%[Y(N5
%@rr.7NHVkoZTBKgrDM&oZAbHk\$Ah#@6,8u2/cL`KAr"D[A8MN[o[_9DT!qT]kpH5peu]gaAi\TlQ#!h"^.8G79lZ0HA#c8kf4@Z
%U;hJPbifK87&S:_I"3'2_$nu4I0;t)C4ifWp^7G_!`QAH0[2D%i*6`A]^8//eHok:>"tA0=:ML(aV'InDqIXCp1G@T,>YVO*tn!N
%5=8%BB%Z+4YUa9)G*@1jP:VDY<n+b*M?>S%:umGu1q"E54:XsP5pi!7E8j2IO]N4E7fG$6Z3?[/KdEL[5`7eUKphC`^HSk+l@R`G
%K"bF?`LSRTdjc1XSb6L\$TXd-#c<ZQ<0jiGC8DN3,GUR_D5r_Y8/,72e:&+FLjj+kn3b4eYn*^(A?qqT>++F&]?G7G1U1.C-)nEW
%1NZ93,unjYaM%n?(M84$+p1GCd\C9_<5$>B;W-LZ*>/ZREPU4i?FC$9[Y/X:%.ZG_C&UO\s5b4Q?S%kVa5NLgE4)"$msp&K\P\';
%fNF_8BW$WhKYS=2RUV#r5=CKL`#5Ge\g'lf-Nkf9=NY#8:0>LF@R;T5C["*[B2TY^\Dj5=JXg\ZA090PWDpE3<YU^7N._11&+7mp
%%mMnBjCmP+`%EE"9r)iJQqu@NKtGVkhFBRlU'S@&9&aPE;Rh#<*fj'R3"D`'LP35m/+G"JKgRH#3,3CDB*%'Z#2/i]7Lgnr1uKE'
%#pW]g3jhKm*)3t%9NB9`m9F6OC/.THkdi`r(cLie:okr[E;=iO?@l"km%o(k*&c6;HTK"H$J^TVC.f1j7O'5Kr28JJ(e9?X*0IpG
%Y'2W2lZkji`Q1+d]#7DR=:+V_i"U\Nfg?XsI'SsEU<(0$^mjLC$4?rj_#B.uo!U>hLVf.=YV1@bgCn=oIm0XYc4%E:Q]or=SDl%D
%+q2n"?ln7d77?5K0@`X_qZR<jb7R!(A3Frb[r1)Hk%Vf*]X1m\/jla=Z,,Kii5]%f"7qdVAW'f$h,tSeIu]3pa1e9c<P!eGIN)91
%QIWOpDOW>P'9@6T-,AXTZHs1[$:Lc:![FVL3#Ie!7"U(*K#V;0'*GpAKWqSLN;u.h2@]:7O5a68(Zk;i?\,7b<YF(N.d<Tafr9Bm
%#+lj,KMb:RBJd`-EpFkqL\Lu[.icZ&2[Y5.rD=PBNS1i"0Og(/-Zr,1:^]r@h($_W,6b\3K0oOCHl?T7b*7Q'p)ISB_-;X)L\3To
%^ClZV7<1M,&.<kSXruP3kD#_#8APLe#.I-4F/3lj]l."j7I]Z\G[=c\*obNVpo.MQdH27R\"S>0\@E3ZN2&'L-<(/3T]9Y?2nOG'
%5m!@&2@8`e*F^Ro29[*p;TB7QX8QEMAC/c9d)Q,5]8ktLJFFh<?NoY7@&8o-YDS)F7>r!j`P<#Chu[K_2GNJPeN@TB#Wjds&IDo4
%?`S&\334Hj'XEhK!m,:a`,q.)#=X/jmP$ts`+\b[#X^j:OK3f.R3F`jl:&-`?.W6?poE4B,WCWH(9nH[r<a9X(q,a=&Sr`D_1.]C
%j437EP;Jl9a!21p\<E50f9qKu:0>sXf7Z9G**m]A=]iWR?u!Whl(j0LgQ6#i+X?QQXfbQWR;(Y+\3%"o7>C;Tp:lmcQh?!!l67CW
%?+3'JkRcrLMLE$'1/E;=q]Bk4kioc&'ZTaTh;O<ZrR5loel@qg1=mPjUC])li<po*K'U\KCO\*ukHd<!BuoK.Zi['?#Rh[.Tl;P(
%_2O29\2l<0OC!_(,`[]j,01O#eFOPHPURT(Od.uW+4??4gCI11H(`K_g(@:Dc-2:$`+)[/km0g'K;5P1BcCSH$^oK0LDg(^YlX36
%=@<3$_u@!T95;^/%gS4?Ys?kF#AIgn#?I(0&VK]sLAM4U"\"=EO%\(AU)1HN:j(.&)Rath6\h2,C-Fe\K"D1&-'F4=fI5NAP3-C*
%GR/WuZVpp>W;_qs9.;e_QptM0LJo;k_NK3;_VdpMk#=m'P\(L1:#/VHf4[HU.L^F=gBsM$,f1c@"[6-_<*r=f,:K"6K;MN31Qj?<
%H(C\kSH',a[^.V[>c0cHWa2_fhk9$-k-Qe\.>dD62"t/b>,!Q";/^?(#p^k(a7/H:M*5PK6Y*\FJs=09S<TO\_f)ZXPaGC4mX9rI
%K@"&4bcfTbQ$_A??EqEm2f4/`m=@H3q&olBBId?!qQd2Fmd$&'af-T%RZ^`F(mr-g.!g`>hNdbFkp;?lP0[_(AYDr6?386D?1\cn
%%bmX_1@2\4YEtZb28_j9Z"k-hVW]>-rO/Ls]tEUs$gT*>`kYfuXd?hdBqZqe7`M:moo_bIEkgfa0&]9u?8")BO`dRg5YA`T-.$=&
%*28dfL9jfOQjnI<>Z8h)nATEG9;I0*+"jt6p@MqHnh^%#\c9]V2=PN(OuX.kMbHGXG-VaFD0&#GJo[I/-mgqP]iYfUH(u9#Wi_?e
%;^GQ_(dY0Z?r;YGO2t2`dc-i\.r1AeCZ!,SZkErnIn&%Drh_J)8sk:BbS0hU=I#@]]EmhV/n$ciKN2uRd_2_SP<!lR<N0=[#/Z9*
%Pr_h/?<F@i-7fB^@GQ+hk@'^+p/*AL^Qj/<eB5)VRBUQs8HJW8%b\d`H;);X-!%3F5O&D2c=eZohl8Ee+u>Cl\)IUQEUN]-[neZH
%q%lT)#Xp]uQY=W'=c%&-GPh$D!KG5URUBQ/;F96FUe\SF<5`Lt`"%G-8H,eKZS9Ge`?S52+&$75m-L]bAGV[$T$kiQ,Z;bX=F@m+
%1l`G#FONmM<*9;]+oJ&nY4.Un1FKkTHkO1i`.^r]9!j3[0M"Rg:r#LT)ri"DCZReljVp0rK8#*i8CA,sRrB,h4d\sH8I9+(=fK%p
%Xsk"LT]&'7Em;+X+QEt(0H:aVNiqR('3_GOMaL>h!;6DE5U:&[NNdsY3HLHOr<^$XJmL*nO9_g#BIc\d`0/l\rjLdUEA09<qAjH*
%%ar8#5TR!^IA+S+""d&ba\s=P8?eV'`GuZ(U*9"jZUc3r8i<G&9d:lRa_[jOiC,ke$k#cb(HY)$W=bV]MG<M*7UVA"KSq0#`CNH&
%5&&USn;K&:,sQrG=u'6B:ll+m#<`lYA/^XIO-IsOMg&7In*a)SXJ;r/&ZK6$7#jl'`&'NL9!.+8bN;Z\-FGCGVBLOY&9:o>NsM^5
%U`#]\/h!OenV&2>!n&1tOb8jO@V)ka.:5PlFe7e7j\R&e:B+Pd?([iO=M9-c-sU5A3F@'FHQ^!h,b$:<C=E)qF)mN^k"b,D'me[[
%UaVMH)%R5//U4]`S8DqCqjjf:I8USbd41'@cF_#pLQ'H07;j6aO\G)R@VZLuhO:^)NM161qSj0#AmH:Ingr@Q@i0@)Y^d,Za<Os-
%61d$8nf^L_AB\S(;V&E[QW]3W89"7<)D)c<>Rr#7(,hW70u4aNB?LSCDQBRTn0=[J8<#j8.0ms$)ZhfP.L!"iQm0.sh(f^5nWmVc
%^s0]Ap*?Vs/s1ag8NV&&r]78r&mdg5nnc:nkN4I]1ErM4Dq+U$bO,dGDG]a[1(\/fDabbo.%Cf>Y?,*[>&Ej>%k1(L8MgKAE.*cs
%c+^$'F=i`;a>=OZEmRN/OM0p_La">^U2[$dC)*C4;4"<JY!W\i0<sVk`BL,)H:+ZQ\N9/GD:0b!Rb\X`/02.#*d0.V4m-^'ke]5l
%F=)j[>.)o!:ab&QG!CE_oaD<b&tqO&4B"8ICU&%+H3?9^!AUp:s%`O8\E11Af0R61b_qW_WuT9Q3nR%Hf*YGrC_dqYe[:J!hg^Su
%Dng/mZ8RK;9"O_L,\;a1AWT/[QbC'okN=\=%T-D7>jM2/+c"rP*/\OPJ6[;O1'/H[Gc@FELb1K%7N+jrH=]VL!`)pb/k=Qcd%h,q
%V/TTY\h#$:S<a<qm[>-8T`lKiZm\(?Q9ebGa;lRULuG*,#,9fM%X.)g=ANLZ(^f<o&AK7W06%k?AP-t:EmKN1[d+ogqa.`>,b[ug
%B:)h`*b0*!./:]LqZSEGA/qmGgCH)]VGqs]>eHRbM&$(_BjG!p;2A?&\nEX/bZ"5/,B1gn&<>Gf\:`h]Or<p#TVHboCFGA41^2Q.
%o+l>N-S$4GVr:`b=[RC&f,-luR;$q^!`gN]2KoL\W.rluf.0<Td/75(GH7Ta!BmOo,j%4lb2,rn(sZIX.=g&<bsJ?qgWN-qN\"WH
%+aE=23cnkneM8>tFJdbN>necK>h"[,dm\Qu3c'?M<cCqBQ`/>hY^r^e:i]T\5KZN$bVR4a'+QT=jNApeXCW%"h(l&J3Vqkk,d7X+
%fOWb%V4hPPc@JNWr+C*p+C9=!KUI$7a3B>5<:eCl78o31$C!pO-tHS%ZJ[aH1WCQ3mW&sdjk@tYH]XM\al.f_J`.BMhCr)93C,Fu
%H?B>)ea+qLV9+bPUiB*Ca.Oc2Bdd(U_,M8a49cp.m"Uae<QGO"5KoEZP-7MekYttBM,()73]Jgg&/uJ_\nEr85rh:<08],Lh-Uq%
%c06DhY^P`Rf`K*le6DQS^);rd:Z#G%#\dQ&O9<^/qs^U2#O431(rDFJbgM`EZCYF%o!^Z.q$X$kSOnes!m><c-\u*L7H[Va=`A+T
%7[Tl`Y^h>\298:hQ+*;=7Mu%?A%5US4e_TFk;-l?`'&;+d]n*#^\NGmhZ`7tcb3RPK^FhgEP+-[$OhCuP>"0IHF-k^]7&G%T90`*
%Wtq*/.(T(Q-Hml*F`^%-FDb0qkFZ/dUh*4sU1OW'87"=GM@VML<kU^\[JK&oK;%c[7uB8&eX4SgUAPQR,.'?R7\43a8!-_VaYKW4
%<sWq4c<GR#o^[_$B9[V%`=3s&0TD^`-Se;?+)5P])Ye>pYQ@aZh@9\3%IH91EiU7_%g5]![)7Fe,WYL.hGc7diPV*S[q(75U!M/u
%a]1IO_AhO`Mu!k^/>&7*<a@r/7$A<pUl9i)J;&Hd^'[iHJqQKQ4giC:]oq*:Hg9PgN_GU-GEW?HIroQ2iCICLZ/*9E)=%'.jWoh]
%P(]&-j`.`NJKOEm<C3<%8b7IoOC=RE]FYbV67ulCc]bo6oYCR.bdg3SOEa9aU]DglK*G"C"$K+@q*m-K`E(!1#AtqC_J?>9Lrn9c
%=\DLW#>3NK<S3Urb5f\HB`>4PoklM?0;)elP`UDk8AltnKH&A#(ucl`Ouc8.6c_Zf0nNL:_iZT>8<u6[s4&gAmE-;Y2':Gaa6mE8
%`n*2;L0nI'KpBl`H!=\O&`[ntA9B>dPhRr#)Xi\Ym.)#(<t!OKcs!bAjZO:B/;`Lso^0#<?r',pHq6B+0T&PgWCsI.ji*[%h%"Q;
%agr9>cG!t/-WT7TEZgS4/?Oh4J*(a`SbHkYFN/\TB&7?>#>@f;Pn:liAQ+Xq[F:,j:m]@Ks-rb3#T`7f3YIl^WBYNYPRaje^*>Jf
%Bq"gWn.#'EOk]X0,STOn>ThgXq3AK`8aGUND8Dq0:p0qOcO7HHN0JXmh+\B]>_<fL]+cM0GWqlJ@44p*M=.W+eLH+UK+&r1_DYVM
%&EqHH=^ePni:/R\`ra5)p\FCLO?"AL?ZH)WHj/@$m<)M\.d+GDY$>\NjqZbPB&<guBkMS;<OC-S/I'rm&0Z,%r'dV[dN=]gVN/`(
%#&-'\iU5&U42r*/-SVAC4OBC`)g=jE6+qUgC&ILY*`rK9cfglu#B&FpJ.[L%;61$s!efOS>*Pp#W+Q4+Ub%?gB/^IdnVp(Z-13<>
%?0a#u9[M#4#ltpLA]kU'l-9ZX$#g67%Fp<914hGl`-"D5\/]8CWpm*Tkf$Ph3+?.2KeSjXdm[Ng=^I;0EOf\]\/aMHFk`IRAJ9HW
%`QuMV<D'd_+tT._:/^KqYN@<k:kpCeEY&o&%JQs\;M*8g],WCT&3F[X*tC#p2jA<Hlh7ERbXa*;F+^P7U`Anm_\p:a9`gb-9.q1"
%oa4D2H%UFacGa5]Y]_nUmJRNpQEJSeg>qEQC42k4^Nfk89)3k8oE*u%2e/Pg1$2<ON*p?b$tJ:+J2tKYk(HsPFlBKIZQ&73f^;eY
%H;;)4`80B5&*q,Y=B1lPB@Np'NC)IM]`7M2Q,MWglqC,AIi@b6hMO@J_CZtJer.,3+tenbc3^(?d$,`aZ*]Z,8q#*JZ_;oFONf]5
%$i56?OWmpMT-gR!jQEu($,mJK%\VLg/5@$k4i0]"re0_8C<PU/jWNr,G;0KYqPMm#Y,3kXGkATEd2-M[<#5umV)<>5WUhOc(csSY
%nZF%mCYco(Kt.*5Gk0V8guT]mLp"t0Slp22We+Uho(GkZK#o3<kt>"f+1\m'U+-XnWcF"]T2AOPMu^kmH;t!,PG&C4<C&q#UL,h]
%#Fg$=Y:7)9VC7c`G<7IKjmX.&JeM5Jro;P)YYK%XC9kTg>&r*!L\'i%P2(NIY*+10HJi8sW2b_HMc.W6C0,*Y!UXoY7PAH'4;b`*
%$e6:uSl.tZbbYSJ'>u.WeUn9M7SG_T+a8Nk`8I6#0)"KPf=SLDI/ia!.\!%^H!Zhif'CCRfL)1^%L$bQ>76BU*ekl6cAS4^#=amg
%1U`[S[0fs(3<pad-d3eR(oLN2^;/-A*?ts@BPn43OqGF#78VlTJL;\@f+2+&QK0=c$p,g)WE<l@W$=!==HI2<fP7A*LbYHkW!]5Q
%1YDd;c&aEG]i^)"@s'K)qoP?7n?-5%@T-)_f0cM.0c'X>OTiVI6"kf2;Gp0k6_6I)*M]FWhZl;p<0=i9<7uEsN4CNeUf!<_l>)%m
%UdI_^SO^_orYg/(7L;pDb_D;kl"7+DddX#8-(kn'mLEicG")7d3q>rcpE2+G'P!8Z=;@5WNtfINr&?*"acc^-N]#N:q]WULMu_Mi
%(qRZ1FWl]am$B)fBRs*(I:=YLDMWpMMnsm1"JU!t,7H4@"%bo]?(a3%U'do)qBA.>Q;DM_dc8k[3`7Kh)1u^,,`Po??&8&;P+`Ch
%T<W*`6'cPU<+G[DE@dU(Y$n.jL1M`'XMoq,MDb!?QaK&ALL<rRB)I*YDc<F@%oCUSH".\/'^3D'e0^qJ()0nF;<++-l);CdND*K"
%#T9Es;m^7T-3#O(/#cTqTa+5>81\XG$.IL(l5?Km*&LKlr&&Ms[j*K%DO#JW''Bfqmm/#&<1>A#R49EZ3?MON"j$DS8LRRaKackL
%?*b]qMWQ%Iql/TJWRtofi1A%)Gk=_$9-h*0q`+>GQd\:15RWe2"u#])Ys"^jNmIhb-VX,_$$>*%:U]/)gE`P5gVro@Mm]MPA=gfM
%,/58e5sr2$OeRiHIRf\#eN&JT5\[1_Sg:i$"m(cjQoG:#7Oc.i:(YC+mIn4Ji[]1ON)F!I7SssS<_F1E1:g#&h4c7Wg`UkMP/s:O
%JNAsp2_jJGF(bU\6,OENh/E@66k,=GV(l=-TFaZdJ]F/TJjE1Qd-F%5bC56te1QW4BM+uRooPYjorp9Sn6U'7Z>k+H7QkB]/@nQm
%#sso3YSN`99!o#&FB`\uo`?[8<!I9p'(uL:;#u[N3.`56puR]*CQOs'A9>!a)*)e`P1V7*UK]Bk<D%\lb4'R!dUuD\Yd_HRR&Y^1
%9ZcWU3jiJ%<cfL7[J&r/2:2croF92LXR-QDP=p!ED,$:"iI]?LHbhd@>Z,TIERbreb.oqC8$H#C]#3JFZ=>\SIS_*KU!Kn&1+_dE
%A[<-`c%YW>(cWTf96eOQK9ra'nJcl[@8u^t-49<aOdqE[]#>2"_j[#V>8g]Ino'Q-^0<X"IteG%H+(g%%c:QY:(3F+!CEO;U;Po*
%*c^3s6oP3$k9A=[*'k_h[fNU9ZhWA7PI'L?29,<.C]_kdOp4G)E[#1:)DZh1)="o],onLgnEpL5#\%DCcV-2_&?uZAd;=UB"F"pA
%@ch()_N#FHCsLT'.%2on0M_bD-<7]!3Y8=HKB6er8/j!keAP7Ma)0H[XNQ:iU@E[99&2FiO(gO_T9]Hj6P`pH"[736L'G#KjpJ.e
%N+Gn`cGbp&/._RATJ%fR:pGeOS%34r_nN5OCa4_7_)e^$6LmsW$`9)m7sX:9;B(.``M*);)>aah>#Ys..]"uB/?`=_0gSO30S2eT
%V'Yj=%<WA_joM0?,Z$(YC'pAJX8]>bbR'RM9CM@Q@=L'lEE-9N<S?8(O,$SW%W-oAeY[a$Q2>1BgY5[$#&6G^&E:hL0V\5c*iF\0
%+fW7Q_R`;26S:K.?o.s9P>0Rp6+3(2+&,KXPhaHU5`A8\+0n-D\&q<'AtTsU",eNer$;&H%V,dai((G7!-AA:[R.o+ef5tPB/IF`
%L>`,lTrZMCfah5BN6Xa:c/c&tEWff'"t7QE8IUF"T2:XhFImI47u5aFb:JaB=G_Vc[i`eg(7D'>h'9V*8gKIE;4U/P$]QFsm)iXr
%UnWD,a3aO>5+YV>Mq2^tXR$DjdJ\f,TKh'O8/41f1YB*G3F5X>nQYN?_74liHCfou^hU0Afn:q&OkQlHR`%,+R8TqI(Mt"<<-AHU
%"Z>gp;-mUTh[.F^A6Y*k*!KQ0"Hr:VkpU_m`eB6tY5?0@Ou4=3hV_sKs/O^h`_1?36m.sc(X]m9MMda3G7N3DW#&<:AGXL5-8r_U
%'8L_ihl9Z;J7g9k>#?*$^^Q7"8i@nh7$p;5/^^\SPI<-Ajh\5?1:]9&8_?[_$"2(n%*2VWS/$u?PVjbDDQr!q??g-QP[l:D=>m/n
%l\N5HXa2khV9TdA4fAM(2qaWTFMu(i[\17u/CLrA-<F4S8SNX=0hGY=q?m`Y:%EU5Ag"jX7Dbg;6#ghQO8e2qA"EG66T1?SOi=[b
%Eu/F8Mmk:&=\"B8?qN,:$+s.kd\&KI2fPNOR+.e0jq(S&q>d!sqil.QZ9Wq[[n^Lh-o8MtR^.B32OX>\m9N.Y*:7[Ef1\FfYH1!r
%+q@rQ,AGHulMF2IaHi[L_d--1#T\*(Jg2V#Y6'E^%^DZ=?(t9VKU-!Pdl0mg4\,cr3`W&A`*d3q#1A#&[Aq1`m*iK=;2XD12(qYC
%fI)'u>=@;5fIjj#TrYX4[GKma[o73GD\:^JnscQ6]!&^UhmVc<qu!5-oCTk'MYU7sp#-Ns3;,$L'7<Wd87u`LlY]:;#%W#'D<Euk
%j=e/eUUOtE]qT0U6e/do^L1ac*[)$ES<[XCOcH%dAPjEKbHYc-k:?=T!c_G;cPFN%BUum68f6;>#:EKgN_NU<&dm?+/e)d]RQTEa
%g/>eUG4(Hbi&gmc\gmrB')[]/(:]1h[,Fj*,qIZ"8Yg-Eki3OLnaW0J_VT5Rh/@PA@f>R>J\V'+]0ErRrq:-*H#LFqlbEGd2buZN
%H2"Mghon<6pZ&lhk?n.rJ,<UE^CF8^j41>^qotVnRpZ16s3fg&oXc3Zqu5D1hohLa]c!a=r1;O?rAWX5lgK;TD>;lS^:X?k_t/(J
%s7:_iqg3*KGkJ,p]_g[MB>8`dm18*gH2b!3^A7X&2t)4ji's=B&q3.id`(+Xq>/hfJ%rtsZ!T6E9H,Kla*aM,*klpo_`-KQdmpf[
%]pkk_0p2Lg]Dl#`4Z=D:@c.4MJ,f6.++ErU>*(r4WLqV]F,.X\IH0>lqSW2M*b]ogDrc,'hu;T(J,J+Ar69_:oDP/f^UMgd??1>%
%Hg'qU]_hR$S+$C9c.d0no4!(*7rQ!Fq`55#rFPAe\)pKF9obp.-^9t<)NhA`E$'4@pp.d8\ZB`l[q9Up8mbVm5M&p!L'[JJ7PX*f
%%"LAV`UI1f1!@Ze7V#dsc6c"40@iDA7^7T9<IB]gT2DqQRCM'W`L3>:B<)m+,dLiS<\^>']!mN%homF]mI&G/+hW>"N4Ylda2KB;
%I]2:A'0F]H^[;R*d6FU)S:p5%Vr'DLQYkd+[diOfD/eX&OZk64BW:f:]]-)G*0-6Q\l!CCmPioks0Tf3Q_ioh;Y4NLqY.3.h9a]+
%UA4P-Ch=)b=/uVkq(ukX.)QJCc7E3S5]^4mA;"JiQ9M;lUd=&:@=/gZ?a8V,4Y@NpW-qLCe7"[o<C&H%#bt2WdA'iheYRug^Jo6?
%A;sh)9lCkPUR6?G+:Q'l4V5,nQOmn@L5uESi_m53QR%\!L.^H'#4PBd8899cNA9pN68>=-E1CXsK[G!S/cHr9djVaCaLSJ(+C%/a
%Jj1JB&&_/>7ImW,.ES$fL+K`$C>lu3K;dI-NEQUEBeYIb:)o'+LdP=t8Xh%u/*D@,*B9S=8WK%\K;\=>JmuDX&P:K6aAUGT8f)Jr
%d'`#VN7cW8e@3)L(f8=,ZJ#@N&f@\c!t$KfY3?[/&(uk,h+YA7m"L-MU,e_h)O8Tl(B)OKZ,VTr&!Dq2+f4p&*e(>9&iCp4;D1"b
%,1pkN.hJXu0dNr7Lq^_pl<,3[T%"N)HR7,;,c\1Eh`krOnmKWpQB\0V8;WaG0'@SBb]O1aSu6+r7FID&U!1KWKrH8lMH[#\%o=lC
%$jG-QdN8[m)rRD7$ZXOE8E?O[,Yr(qLX[KODt'9%?hq\ioH9?%P%$!7nV!V`f:f0!*/[@69qmV7D]7feV'%>BV9M<7nhFrqTfNFH
%UY7pB'$I5OO).?kUMj-(eFG60I=l^Ri7m8T;d#0/&t4S(h$85V:`5)0/#WQY^TiN92b'Kr]3=a71*T*]R$AiCNF>`44N9q"EKX>K
%;OL9\623]u7b=qNaFW..NG[kVa*mqM:^Xn<(Dp?B[JD0P)W^M:-P0#4Fm-//*D]%pNU=4tcT7*n0kW0_VPE;##L2:]L9j&]LSV)-
%#F8<IO<C#Q+YMVh8<AX>K^4_M,+$V#!g"^DrR4<ND'.>I9^&_,*bIAS-&+g@BsSlrc"jVhIt/dsA4[qYS\'dkDfju9aU`kK2@bA`
%W4AlVD3=p-,0u9I!S+d#$p,9tjpbt"4SYJ#/s>M@>(&Ie_&0%i8.`i!Q(st_"kHT;QYnNGPcOnh)rTPXoUC3?+K)8+9^WB#>&*#j
%lI.dE]X11n?-j<!).%A)(Sq>iq`)8&7R7lh0;CXV$eL+Xkc;X;_hTM,3Y*U;?X>c\.M$DGC34s*U7'*LV_k4F*EhD8U\a=%np"\V
%!Cjj6$(P1fMY>.Am.D?H&X%lMFEBPcV[Ws,.BRnb#K/`$-Uft.P@PSKoHZe^T:Gslc)2B'+_;BopK9mS[-R(3lEGC#\^_Q(Nmm7_
%V4L=8=o!Co5Lm:[V'B<n2l_:/Q#RY^`Coj*=Z><H8AOp1VYJja:69>T)t]W$6e<Ne^9P(\2<L^!W+;@#Rk0FkaOt/iSrhC*Sj'G'
%\&iO;D13j/41N#0`NU8%)Ts'KDD?K*lt=EhM8b3X5%%.F,!ktR>_JRSqtcC2I[)eL*CPh?4o1t+OJRNI'GqgE'`>h;O%:lU<br7;
%@n_3uTOCs-UT\X$,$GTs1rR&N9hP6',#]&r33pqi1)$5[D9Uc>hGC(dJ@tbf>Tr5id:WnW1erqJ:"j8">",YM@=#"olXe?9/&BO9
%4it\X])UTmmT+s+-0o908f"@uNc!^J\M2bMOA_$TaEj-*ma_mXcY=*GJ9@C@1A*/0m37cG)%<f%"HojJGc2oC;!7i#cQX]5bA8,N
%(E_HA@7(VbfRfr?0GI[REn:$UV"$`@dLcD9@Qg9>$Qc]e.2t7#fVta#HRpiM:oi`oam"VQ-!GMSf-QLpq^p:cMZR"KnM6HBclB&+
%Qub,FoIQ/VC.!25o(3S>8P:>j_aX-!F"L9HrYnC_+`U,T,nA?Mla)=\pR]^0aT62.RW'IQ>@Bbp*-J0@JttsV]dXE;r=3rl%&cHs
%$&(DBY0l<82'Y?4.PV2gH^/Uhj,ddJE4(2n4LP45osF*G].26I6)"U:OE$\#KI)0PdS(9IK2SG-bi;uSfqiSB.5IZ,$sA0SkOsVH
%58]9:*V$qE&9U)\R2pJoKUPA?DSta6)R!7DC;>fQS8KmAW!fdBq(8?'"L!ud!@c:7KAN;M#,s^`40&<(c9JCBY[>E`A'of#i@k1o
%8%">;G?_eoOI$q;0>.OEKGjniJiQEYQa^UlYqtoM8-n3ag%k\HIMrl/V:d+j5`"\-Sh6m2=/9*m.$=p#0\TE>dV5\_^j6KpY6Wi^
%F1)=n^J+=f#_+qG<,=*/%5tqX%)EL)@u?WL.\Ks;a!%Z1(POCp+Y\&Y*4pra[r_.QNG6%j#\FRhfc<U1^^$o.<t+j?6"@^r;%[_S
%p_k)J&c90=)lZ'4/qX\Ve/O$qj+3gBX/g<@(eE(T9d0hu(]tq_Yl'jWVO.R8Ot8k36LO'5aB1sL+Za*(D%8tA^d?LmnF-%:X\/#c
%JQs:uA'E^mdiKFK/^"LkL%Vsrl6=AKege'V(=oePW?./t6)7(;!\/Y/@hi[[gDgKp5Dbrh5ge!MMIiX+Cu5e%GGSKhO2<?6==SNC
%_UN!O@jA.]Jb,AM9\H=XeH20i=0dk47>Rs)fEDOO(+uff>Ej?oal>6Aa9:HZB;rJb5aeSZ]GtXlNs(&s;hB_M"K@6"CK-s6KuGTF
%\eLj1R$hqP\]?bG4Zg&$n9C$i&?%[Llrq_U,SFQp[3fZZU`2d>0%):?gudmrK4kh/dW/"u6^'),<2,0*&@LMo*d1rHF`C2$]L9GU
%)ap2O+tM'"7\d12Nb?YlE-/1V5S-pE4$'rQ,K:)p=lGr>.;C3?-\@9^!VS]dD>@SadS66i)'"_3j$Fn3qYM,`#5Bo2Ju2QTe-U(T
%YqT=BSGdMgJes.ZW2/<lP4(oSHou.q9O36ZS@ELXoP$a#WtrZ4'tr)]3"UcJ($Y4f_iRGeb,*1^GHe.`J#n.PC)#J*?QpGDkas#d
%qq4uKm#)2e6#uT"m0ARC-@3cV.-+`KXR?XS(R0jNgGmB;/6Ol!6&*n82=Q`9Ml_bp+Q"XBJUHaFMpKm_`2DWCPsr3NIP'iR1!_2;
%/!i-inSVF`AY#GT2`D(nq(ML(0_)c<&H#I<nX'8r<uQ`V8KP2uG9q:=>K#E-=o,1+^\dHTX(e],P:i3OS(LIn;6NS#Z;-[!-8OaQ
%gd,qY6G3)7B_SkmZmKh>;GNK-:pYK(7'Tr:72BW-eR77oDBW`)l3$],3Reqg5I;DV$XAo?dV?)7GD/gRSKL\=.VfD90I]dCZpR"=
%`tO@/pQ-)Z/7"0O]LJ-TqURT]aqD4)QkOY'EKJVM)*CIV?\RUE)e&f&XA/2bA(W.5Q/Q2+'HIY9jgh"'QA1CW0jFf9$-)r^U=Z0Q
%#;uR`Rtb["r0lb(K5sq'b%UFbEbV4=a`_1OhZsQ(TM)k]'o%dL,h=LZcjL:(b:_>[<PTF#7KSqDWFnG%3"seJ/d%"K/h'f51a!uY
%3<ZN5[gMft!dSFW"4BfjJ[["+\h6SdOOokRN0-gRBq>BY"`QX4XKco`bWs!*C9Ke$&m!NJ>-)atH9FMHJE_nU@Y>F7E8/+WmE\Kl
%KAdY@!Qsd6"fpJeg9K<DNF6?1@^7=EdQ+m111(Z/5n\%nc]t=P\D^m1jPRi#$lb1-<IA"`NI"k0(>TdpK9G7VojO:7NBbXg[7.tR
%(K#^?'MM#6`@-R]L^':bX?`*4fdW.0:mPSoMje1-N[X_:!YbS&G;(HUq;"?/I%Y7;M;fSTa2mq`kpXU`]7A+o.(uM77dRudH5jg!
%AL554mBDbJ)"fj,o!:#13!DUL*gN19LoH:NhUUa<K(5\C2^T-\,%aoPf$%9g9':$4b^]tpcm-1XR(AsWQjOV+I0#dsN*\nK'<(('
%Macg/;$X5F;M=bgVP)!X,ll7X_)0,FrfCu2Fp#^=.,cEu+Yp)<fh?RlE7c$=Y_LdbH3RfF2.Xb=US/2[!R56r5_0faG\iK$JP@J@
%6bZ-Q!fDi2kE5[[KL%"?qbBDa'3#^qNMbA[BAP>sB0s"0m.15'Be?/r!9Jh&`u/qDKi1hGL2#oF;<AAH4'7`.^VfGr<*PE`.*VV)
%[e-btf\LCU2?9*T3M)mQ)7N9Zf[K-@*#*L48.Bg"i"2VGcqZGCMV>G%+KK.GA9ALL_`](FRTcG!),aRr.`.6mH8L^(QPGh,Q_BR'
%FCQ5/6o,#.N]++j##93;C>Y4-j&90W#[USF;OP+QMT&D!duMa_af7+1#&QKPs2H*%V3X9Wio$1(WWa[f!0*;pX+6iFDMV\f+lsl?
%=:^*(f*hM6<ZV*)HI2fE8[6oQX(mpX!(1)oWht<X`_k(3%54c?9]%(A`.Ds5OUT7cm<[0RO!f#j]gn2E#5<lLW-cFQmpj0<%HfkD
%Yhi_6*['%Ffdb&(,aP9r_7"lHrk^fcZ(CHn78uEn63G7cSJ.0RM^D:cZHc5t0*>/j/i#kBi@<L-/=DK:F(1-#>JEMRjH>poL6S-P
%/L/+Gkg5h?10\=80@A@.+Z7IFmm]ZObDJ@"OQb-RV7fNhH/TsKMcB/+Id3B.L\%Efh=k=pf&BLkOp6V4#AO@,k0AS+<)2Q>@3_D"
%P-u'-)BHP$hEb$5>%t<t>0<9JR8@J>Z.&&j5Gq>=ehk:A7+-rd`ZYmp0UoIufs1k/(ms:O(8rtBZLsX;qYXd.Gue?$EAWk12W,<l
%h5\&*MF93G"kA:[0#G1jof^_F_S/*+4ks^)(%,f$D:D@eon'g6+.[Yd2/e,`:'XCmEj'9]oT=bB(8I'>2h[[4rc#n`!.-iTOdK#,
%>bVit@%H?9:onYR(_gppMR-6:_Wt(1lajRP^tSu0\:?0CE68AQB]0A"^1)pYH:d(0Fb^'OT#:euLU]5/LU_nHo#(Da0GbX]CnF_B
%TV?73e\_n=Q[Jp`an:pH6kn:"/>DA=H<:77[m0L?r54<e.II\]`'7`;i'+Y0#^GY_%g/9sklUt4`P%rFroo'?`:q`uEH72[G)6(H
%Q2:WC&pM.?Z3#(a8&;/?>pBS[d\!,HJDKDa";X"[%D"0++&8:CVs&\*HT[Q5=VCHkSNj1ZnfI6XkDocMIIsA8pGD7)#%Z/Ko=jPZ
%)79s$<-sRF73XC+FW!9X#U1):BD6Q#kM%o.BV/WYee_r9#d>+IZW&l#fT]@gL9$3JlZ(bpESGA2ZEOCu0?Wnp2<5!c#gD3ZkNElS
%q#]]ScPG*qC!?%n?caT.YM.pLcnd<";<$7Yggp1<\2aY`/`O1qrSi58Hj2MmICe&/a&AGn^]N[(bn/a)e?54PNd2HZ]G+[@md+s_
%]cnY,gdYc=Dj<Tg@M,@<(i0M72sT'`>76m+:Np">E-`InJk6BFRnl/<\0dghXiu,(15tCc1SR<32jc8I^rI+ElL;L?5t<$3$gu'M
%Upg%2)#,C2n3;A0i(%_OfSW8GDt"@H@?._?j.:g_([s[AOiPZ*G<pTRb6%>!Z2jQm71eG8\#OgVp94Xar/e#P9D5SCMq]nW[th]+
%LbkL/jl%kf$e*l$#n@k55aO'`lS2`D03`lMcBc3GT.ckingJuWs4aj@;'h3l<,]tOjqbZdDp'qnBMZp>?i=0:r(TtZmWJP`D0Z[I
%aPV'9Htk'dOe!r9)f)>K9tMJEbFBl.rP4=/o!g7spWOTIW(#>lG5T4I`P*G.$iW`Bpb,3&^=`!`[_%#"8Nm1X2KM+;nt\kLI(&-"
%\BK-rpg*AbBZkm.L&Q`04W1uu^#K'$d!o3WIebfi.u2MWSdo)_KNK'PPVQ?/N0E3peUd%+"HALMfQjN]4*eOsh/JF/*(<pNCgspk
%."CG,?>'tIE(N3GgD?egM3R>ninK`fiS`R#7U^DrHG9"CUT<>G&\2dufj*7)N:`(Q%W;N1X<G8R5R]spl8lei6/NW_Gm3Wu#g..X
%@$7`*cp!*#Fp&S/!lVloIeLiT%jk#mDJ'L?!p=H%3NhoJ37&(G>XIL88IYt%kZ,J]Ut-JVW:<^HCmFio6kbsu\6TG6<b4QNmUAc"
%;+FGd>o3'^MBI`.c'"<6TihLs7d:dm?%i'Y07[CT7o>@g^YpqcW6%)(oPFWY88_Q^##mp5?.6EF<oS(-:iBWOh9.CQ$&(:3P::B7
%jG)4.*[nAQlp7)%'L\+X6u9l:ktC`;5A9e;/P\NTb5m3m=/-)?H6f\1J>0<m9ds5]\U3.$:0C&QS0W4hl2+!<r@*UfSV]X$7t0:G
%"+2Ct&0/W-2B[^$_@_JK6M53*F#QMOUm:%c%=Ajk6tre"B+Kta*)VSD3s:n"at[10moXJe>*];-F#??rc[((2r"5noedOp1%!@Z*
%A)QAR9_6o>/#ii:^4e[!d*N)P0&^0B1?_7@>t@@/#3n5nP2"<OFP#h!^d^HA%Z<=Nr_D]l)6OSd@a[B`k]9Ca8-Y5%blZl9?VU?T
%1iVr,bQJoE5&Wn+;D=bWX#qp$+,FI+_OZm&(ikeFJS0OKgE,hVipeqU$oXUsX4*!9-d^?JXT,@/,q=Z"5M*5bU:qf8#[TS;*+.[s
%BL/<Jl1GF(g:>"ZGWm?;0+_hLU9I2LrG2=41VE-XHbJ^G?L:7bkPOo[d8iBbPFC)E'N-(bX<UY/(=!':A?R.I)L+\m*+"SJS<,Km
%178ITmBO?GK0aX"]mo8"^RHt5DD8m:''97<pHp5Ys""M=jl,+3&8d0E<'Y6gis!q]g&$!NXVljUglpJuI0ISNl+94BjSfEG*H%hb
%Hk\8q=uStt8]-Pu9&]oXe6dOKa,%;!b$c%4o^:P434fK'kO=KO01q"uiK1b$+\qrKmen20$e>C2JouZU+'EO>ZcsD.R]3M>NlsTf
%g",c$-LLb\LU:[^3Y0>Xgd$i.LO6(VQ4:iWY>50bZMOMKO6EJWF;c/)Ek,O1hkQr@n:LhoD.qrl3"r):l5hgHG.l]4CMXcra2UL#
%+aa%Q['d`2buJ(OEJA1[+?dr!3GB8'JUJs@*OMOLZNj%f<G4T#k+!T0Ol_rNpo*n`7/X3#&S,pPhJ\3-_sBGef2f@HgZeinPl+Pe
%'2V@>\((XoTEs__/jSMgn]tfHU`KI5$diSUD$G1=J(WKqR(u,-lPUtS<t/r!+kebemqKbGDXD)'f^/8@?mAEEl`;6Nc;L.)/imcI
%bRE6YkKL.nbg$XOg9@/S)RJ;h&2rS-Uf_LJhOs8!JOMAQT/R%'3A(\K5eagY1#N,/<DIV<fX'oB$ZWfJ!o5Kq5Vk%DqtIJ(At5`(
%g^gP6EV4*3];FJ3s$E7GE\g?AZP]Sgk1plIe0e[43%Q<I$BYp#fr$Pp,c;J;U&ctTEQ8H7oO&ch'S7(AMs:araGQi;^+u)NUj&5D
%-_qt>:!]+42G*'/GQCHUq3?:kkb<m/g!*@Se-cB)]l4X%$/krCXOc`BncXP05DQ`hItMW;nK=1srHcr@h$U(=#@bOH=htW5M+jg;
%#D0b'Hb0C2VR""NWH^rlQ1a^EU"0@MgfnWcEc:>KO"LlHYBNNQB6gKADU#n>I/Z7BFiY3>o,=#6(bYF2<aQ&[(lI"9B`Bi2"@:fa
%65Z7F5oXCCj_h-$Td5bT=7.:m86+>DZn[H:8J6BL)gml%]TNN(T1-t-/#Nno86_gSKV;mjm24#!=_J^gLEm0;,pQS&N4GhhJN>3n
%g;6*f$F1?LA!U/k)(^@D&G?4tB(BX]S<?TucD0_KgI^`#W,9a]@MIDRLuBBN7eXh$.O/tZ/`a#,]#O@3mb%D8(@&tQL.8$a3U#<,
%>-\8l.gd[N"qi-u!tR18W-5NF2ql3+IQXB?XSIo"p_TX-Xu-Ph^IIr^<7(s-Y.;S'][Z?@OUZ#?F=[mOQ9S\QmGe,d'#\[I64\;%
%Gk]jEFM<O"$uZ:XSN]'_nqkH@O$n`>fObXK!)UusMF&ahi9KiiL6CY<rPm9ch%m2Y0rT)?;TaeIH1]SG!=@?Bkp%6YC\3UD18^m`
%)mMYrL,!dEdA(Hn%is(A=_J,h8ioDf6J<I&FAD/C\^@s.%L0T41!#0hB4I\8-tfplDT:sNHGJX77_ObW7Ol!SK\%W[do^p0O6&](
%A*Hi*oD6HJN7F6C=B7CrlZFb`de8!5HpY[#-iJjVp/is>1m[_rN-RCDAPpon%jj+#pZ;_P"KfL^W#NqoWe4I0+R!2Wi1Tc/BO43p
%rcT5eWk&G%h$SXZ$ck25(M!'dO;@P7_GG6_BeYGI"7G,m*$P'U@[B\"O>8l6:CL*%IUn<>".s^/5rcK'Fu=0Nh]ZgUe"&]#C%r&X
%`'sZ\n%O;Kk5"&)$N[4^hfgmV8^)n\IirgkfDjas^O,tML[1f.LN&A;%+@F90DMFkbF%jIC!5u(0-HMa#aQRL?U.5KC%cuUJ)Om:
%iW"<%_FFkiIHlpo]4!#G<ise:E2tI9p*5=@Wk'poWd7KB^"BPV1q,5LF(O?T^T*Gl&DDD0"\G+B][jF$EV=jBXB"rILG,^nT@Kr&
%rdXXuD9&q%aV&q:TRZIO5m&"LqZV;/Hlf/9K,JA-C8i9gh?A$fmaXRFf*M!Bi`]s,mB\smh;^mmB#H-k&<SKghO??b7\e@I=TJ>p
%ICiO.[?UTK[-F-4_L=bHqDPn`pe$gF(P.pfLq%ElU%9s/$l&J`5o>td!_7L1H1U5F'&S<7modt#ShtrA!_5O-daf=.WZ[KSrgT`L
%OIcJRTI5"9oO%Eo@:9.-)q7+T5&hWs*:keubN@mZ;ma(O0$5PUXCjdn`X0J=VFE-CX1sUhfQ,nR84kb,_$:.^OVSZR1r<o.ckN/m
%oJkYk$^aPP[-pCh'ODPI01f2e-*aAOe*ugsH$q!tYa4:Xe+6sDqeg\,mhO!lo27%"[o2o0JST1&p?u\J&cum&DZ)005+mAQ[kj`8
%o8n6ITC#._Z]4g^>N-`0iVrt_=\:Qd=lXu]Z0?Oeg*PKQBBQoL$"[.c(p$4=G1@*>"1c-Ih2d(P<$n0I*uD+/j=lf_!sk1:FXVao
%$*I=jNuM9Ic4f#PSP\6<h2dXd&7KJ!^GRs6Nd=_)(.CQT:Ks'56QGoBL@T8=[nJ>WPWqDG;6J%`@*EdkrWk<!+YW-\8o!6TrI^?9
%]QS>nmF;0FankdBW;g=']&^7NpdG(q9h!mgs$tT=gV37a<<'I:%AfqGW;i>g8g3X8.3TR"C2D5a%Zqa5*Mqp%Kgk!Y16+<d+6!WS
%K:8t9SKb=K#Z]3Y^TXEbd"64Cp.r&eTTJ3f(58@RFt<D?Tc?KFn]0Z!nuU_05I*Q.RO<BhUMT\rNqMflTBJVOQJm&A3PLo"#glhZ
%P$@jE%h0;:\$'!*2r?J:!_D56+aS4QQ4FZ`#eqs.OEIpZ=.9E*r9^tPG6mo'[q35,7>.m8V"ABt<FiKH_lE-u%U[VW7LuGn$^7X4
%>9A4k7nPd9O;bdbWkoRUTMY#g7>r`9ic-PS#=jQDL_+[)^J@^b31hZ__>4IB&H%e8QDScfBkqi]T*7*b!go%$[8Cu0`^_B*>GHO=
%8%%I)4/tH6hrmtJP2LaUpaJ-)`"o7h\KU%[h6*@:#d8[8qeZXXm.>^)\D=iL`6)'F=FW)qMQ"Yb8odgOA`W(K$;&4=)Y`>mj'IJ[
%:"L:B?YeFss$%"L]'^<"*SiPiqOGQR>[+>_jfBgGV/uM2AW$NKV(rHoW^N%t"CO_?C1*<uO'3b18RFdV%@>Q<C3*QsCgb4g)\$[t
%qXA#0$amn$LRRMecn#8BkJKqoFD9<R_'sVBeCOj[8!FOjLIj>MFc]F?d_-!je*["6]s48R3@6Y9F=mc/AArn1P,Xab</9g]Q=K4Q
%OQA-nLLk1N#cj]>d)uV3n9L?fX'S*b"dcR)?G9:)<(H(\KMd(a3bWj<JgOIX.1Zp$].BB;'.RGB"rWX<.tRng!GUlCU!a@M#QT!R
%\A`t:'[HNnUWaE%HT<(78KH_6MN>72$n/CS,0J,]`WA'HJg,k0n]N>;KPCN/Zj/!gC/MI&AEp+<lOa1*Et)\M"2)HJGo$5F`G&mM
%6E'p<$Ccc\'RUZO_R#1)WE)6866)p5k'cJg5t/#7TZIH?iM-]j5FqMm\$#ffXH>(I!'<L3KE)^Oo(FHlpV;k2;T4#SW4Q!`,(5r^
%j>?K@RQqrc^2<s=[PI"Y3S+Ek6$5K18X8=e_Po*6ef[cbKYYBEUqr)j#)Ck+,&%o.7J2B<R3mjt_Fk!*q`Sg+Z9nd-$OC!c;X3!P
%<5ZM)$&m@<fg/&A<`l%RV%D\UpLc2kC3@]Yk%#>]=eMV5R$!dq#L^'u*WRJr#6]P[&l*$Cqhq7"':JP?dtN+RO=m*'A1aA;)2sT%
%>6/pg]"`D<]dT0%2GUs!D?[TbOCZnQe##Hr\>e1#C+DT3FJ.2X@<L8-6E$Sj6/0g0L&>r`@riEI,uQK*_'!GF?uKUfJI/a?g-JmZ
%G#TiK\/bl\O@Y_[W!gRI`$2U<I3$m9cj8k>7.D,L%"\&320D&lZsY/PAuPfTKa/V)12AjZ$F6T1iq<W%6cf=`#m88dEcBt)E(Ih,
%U[!AN-uhd9)1EegmGsY/BR3=?IbC@smX<K![e5cZU=_>F`1bm*9.u2';HTMr-+0COUen!:nQD.SouK>1\X:D$XCsN[a6,m<pu=.4
%%tAhAi8KaCNqW+ck6D.cnJTcHre`^fVa!48p+iS?Ct):uf(.?gnC44q,LBD*1l4C=a's+d#b#:Jc:o0$B*BIf."<iG^K7DglttY5
%6dYA(Sn];Q3E2^^b+ZCJ#"hD8NY06P\/P'^ooVOG&;,Fa)\WVt=1'1P<=^%u`6oT0Zli0,Q5m;FXOD_5l`BTrrc=rg'+%5JPS6Zj
%Wm\1.V:cWS:Fbf=P!Z)dH6VCI)qGBZlm-Gg$<<ssOd5_dC+_7g+J?YDWFXt.XK0VI6ok!n-.%*rIr5''MOQFc!lu*mn84MIjE'3)
%RO.58oHItC@0U%GX=;=(=q5Z/s.cE2@5UAW41:K^_HfA>?q7g^VnKXR?%&<%6Itb90EhEK3(,W1$UjIpM?FH^$0AO,Q_V8SPYFWu
%-dN1!?tQ&\S3t,2Si"DVN3[#8Qn'9]NoMPX'?hh4cu.De*?m,C_m&M?2fc&&I@.#/f@i-_(sf4C<NqHBe`%@`IU>K7["[i^Zmd.i
%Q>]S]0S.iE$4MbsKRD8dQ],1R:t<bnQOESl)>+U^MqZi!P+>*j,#&'ZZ)8/$OUS?%ik3]tDmm\ZT[rcRZt8re,#8UM'H)bq</MIQ
%AfkFB\(TgF0j-[=TR;P8@+<%[?!N1.0cJ+@F#]0^E'r-d5e7'Yaut1P&F=2Ho[c+HP@DN8YC%.dogq'D7'd/4!\oQWd@opj&LSC(
%5oGA5ICK3DLaR5*>)NJf-&C_7O/,.q45*1.#O+iAmQPaJ#<`Sdb7Haf\k'63F.pH#E+PRpf2M#*m7#]'kG?g1+.\fr:*6'sU=l\]
%k5m=.'Bn*Xh=:6a;=shIZP4&NpcO6jqXKt'b5Z4Z0(:L@oD,uVn"$`I^rPX)@@%>U0(i45dkbc^gG*t!_I]C0*\9ls(5%TcZ_7Ii
%$\/llHQts_3:m$R>uqRXhn^6^Y3\0p,1nOgk#4TXp9[0<D1&uriH,K/jjtu?D'lOK,J4L`cj4@i0uo:Qcp`sW\`F`-.L'2gGuFB]
%6%*H'OV!me)H<pabG3=XFoj\-7q9FT_>%gI@Auot@@L?rTr3ND+;SX+Dat-!e@uq0:Qu#XPU]C&@e8d*=p=J&6g%U)qTtV.oG/LI
%O\ri-]Jt7?-X%(#IFG-n3X##cRK\ECM'VVs,oJ2(>(XC<_?E(44EUUZkK"uQ8VIru5&"RgXuH3g0_36L^;Ig/^p(I:!*#YE`1n0'
%q\@:&O>N+3c<u]BCBt8K=%l6L;GeLFWcKiQfG7:Y(+U7":7+La8HL%pB6DVgFu6a4JXHG0U@DP"V*9fG'l[G36?-!F!+>Jb3ZRpN
%.s0pj21\*,lko%EqhcC?a\_?qo5U4*+#Qj!3MjU%,2h'e=;t%gIRO:F5Fk'V<8/PSlN>YNQ\XBrq]=g<mT7<*Sc<fj)G$).-M(\o
%Cl?+Uof:'k:pOic+?he#70AhlTPS0t@%r8&"Ikg7rW-!)(XFh%J3#4&D^T^JJTf,g)/HM)ieJl76iTb9$=Wt]K6"fu<CDH`.tDYi
%EX:tRe]1b%AH2ARB+/lFLa<(N)QQi#&=XJKY+gG_i?W9%A!KcG>hn!A10U]GHFBc#dI_/3E04se;#A!BD+oEZ:'7nj<e53GpO"M]
%Rp?hUe'CV4VFM"g$_*^dd,8jC.'XmH+;^k/`@27_kONFf#*<>r^#p+8$GR;%"`U7f*%X[k^G:X@FSdOo9,ta(#Cd7Gc/Jbo5,P-.
%ZjpRDVPDd)d!eKu%ED;hqu/\(bDq/`_@'/YnqM4-^>YQ(K3K.[_H2`69ki3-gh_(bd$5mAdFW6S5o%sUQ\?kl5LmJqM^)2h"X32:
%88H-HZta?C:eErgKU>b<YRW[d@ZmaYVG975(X)Zd<&#]JlbilZ]+InHaCR)HC=d9=m`M:jVIDr-VGq)]5Zo9!]"/SR<GM3dp?m'<
%\kQ31Tmk1aa=T%;p!ITC/5?SZ-krEJ`4DV'W<TK.YS0uYd)L?q9.>W*?WUkKdWsHo7UNKV<WhbLo<Qks7+//m9'B3j=JooNTO'c?
%C3oA<^BC)S-KM=catQ$^^Ib85b;cP7j&AhLA7ZIoktN2NZihONnODdQGW;>fn/<$`Y!egU?'u*m*CTa@7hA.5giWqB<p`0dXQ\.P
%b6q(]05?ZqLQ3#Pq9XbF?QP"(q'C?;h3CtX"s8.o8h],tPNa8aYU"p.]6uX^8mnCG$ZZr[.2da\:>2_p#'@%K-.j7e0.sAiqr%!<
%AWi/4$gRlA@WIQ)mGN[;m;Wj+aHPC4#'%QfL?XX@'$I=p<:qNd)rK.l<^ER1cM,l9k+q;`1#3eoe(<fdLa=Y"it.OVr"#u"qQuMI
%ql6T[\KrP,#[-,E8mlTR^LT.pMFMW&BRm[BhGGYDTM7BOGfm]o%XKWkr\%@NXhhIBBs5UuNR6Ke:7H@9AI7kj8Q^<*QpE)/S3>`V
%hW#@$*]roqEft0uEE?1OhcP3;I!^&3\j8:Bmu>I8B(h!dSKq/Q0<u"'ec:rmUBDkZliqKke96]NS$O5u?2RG-H]R&,Un\)BqJ_EX
%+44otn\Db-?8"Sf!HN5G"dGPuG@^!_C3tWrEl,/SZ[0hFfgD)9dX)cO:AXm1.Z#3VGGC=X]JSQ#>n`NZ:%9FYDpI-$6-k;Gmb/;8
%Sd0VnjN%4Y&I\t\Na@.sEi[oNmG)*,d4(0:YC3i9HR^]4AOf>?')TeG^Yp0'Dtq#oeD(EDhnEu2BQLU2RVu'4bZ0lI%JRGFT?g[=
%1$b.=S+6s''#s-Y@D.hQdEa)MP+n9`D5nPK5F;<XkNI<2?,QV/)D6PDo\1cR\3.Mkqf5bWG6R_X.]kMp^@577*$ON?Jkp_T6NCtY
%9"UT:E;^[lnM8B$.l>Q`-g:.6jV\+rb/Q&H#XIB(=H3r7mC=4G,6Y00I$'3W#dJPLNt<[eIQEb4D3#6I<E/M:/k61,q)jS+N$H9p
%&j8RO2"#@5j#fYuI-4O##i7u3]Up<+=cfnpg&EQ`cO.i':;QCFI^g1Y^6`6Bmt9M-++/!X@Rc'l'R)p:f3jOL>0Z[SSL4=3L3*"!
%)Z"YXFB:nT<V/dX7;'$V^H)Z3?Lrd8Sh!mE2dV-D8GdJm5m\S);7R+=h]S?r`jGKl2VbgQln;3TXqV0CdgnX7^>\XfRd#1/0QJkB
%GFB&.ICG8W;4HTt,/1H?=e$p5L_9ajo2jp5X-(3pMPqcV>p;0@fj]2qohH`f=[=!'3uN<t&.I=bN"Z;65d6Nt0Wej,)JGWQ8',Qm
%8b>ELC/V!VrN*'!p6]gM59lV9q8"%JefP+7>49,LXGhr;"A(e7%$G$'!G(,O-9W:W";@$IM3qRg(#b!Khf;s#XqL"GBP$:Ji.sj/
%RZ;q$,T42,`Io'B4h@M7,8..A`1V!-?`[Vq`Tr[p=/chT`U2Xil>6+90JPiIffk]1bfZlU[1<&.FJKqDlS:aYJl^Y7cC'>ND?cl[
%q$'C\]XEY'1e?!!:>kiSJh+urY]d"[5&d-nUAj,M!QKlcfGtN#P%r=`)k]o3mc@qhCe02KKPNJ%MYCBsd/_YVe,$\77'f8sgKC,f
%acUeN!?$0*L[[/K0hD`kRN`)^*]sW!'!&<e"GQ=?OkCY,H=2l5f'MU37rd)@%\U!<f10L0$.KLm3QWN4O=D'/:C"LL&NS.7]<LHG
%LA7SkO([M&O8JrScdo0d#8tJp@TW;\[E8]rW1T`tbFkS8&-Vma&LOS%3!EdVEA%E1C-eHY+$c3MPDHU&&qpf.=7dVTD;XH^0:2"A
%C"T"tWHO[[00;3AQ0iRkF6XpDP7_iYb[ioN\Gqn`Mh$u7@V#XQk(,p4p5c<%S@L.bRhAN"^TjPiV_8[jU*&W`@VO(FV+/Y;3AnB-
%kL:3!IUn/>234YU>ilds0IeM,!\0i]M,C6`GnX$],EG]/Nn<Vo61hBR\YIf(Pr<)=A+CgofeE7&f@DAB-uI2-`Wan0;lWM$PW"7l
%Ieh%p3Sb$C<*Of3U?pn9OWfP6)MK5.j`iPYD+35<K6cu;GWR?k/*1(bH4_tf0qs:gN7$PQ4Zh_N+TDS"Sm+H.+nA`r0?cF:>-cAo
%[SsUU-bI\rTLH_Xk2T=q]RF?U;q%l,<-::F4_a`3>aqKCgX6R8iH\eaiDX]EIsd9lprEfI234Y&[1B3IaksVn(er8VTrnj0XSZ5e
%qT00bT3T`'DA2B+a7>35q:V-Pi/H6+g]rkmC"q[u85SaFOU8,l2o0Xp<`EWk^+gou)RBq/[1n[2p9JD?+2A;,,39PMBIa1[$kj$L
%)%$PSou/SGRXr2k'id%D=p?t3a+M;nY9-mj1e(j)_7>p#-oY'ifuJ4kKa$->?L,&qW;3S>m<^:t$ASHNkle;Br>R9*`]Qk6>"<S)
%,12Z;)OV"nNs$d]%BVE*UPQ@_[sLtT9*`Md;[h\*/&]FIUtAGC?>G^BW+_E,UsuhWLNFGclgR[pE1JB:nN!)Y7okGJH/,=RZJ@0I
%hsO@3g82<]:upfLUM=X5?o2eC=eQ!'7*=9E\N`8B18287YNXd0=0u0go-714NRho=FL6GGXg<rWnL9:aOU3UOe('mNXEbfVGidEr
%U@NXkJ/RD_6m?[sYTesr,CL"/daN,Z3SD6l#(k%!-]o+A\p-V7Ki8bO-VUf7g0$/.YTl')jYB+W:q?S:!LADGf&[#5;b"@=g(K,5
%Sg_,CA6Fdg&3JMJf%9)LC,7;ZhLTQ@9Pj,i!uj>AI/B;=UD;OR-O%E<S@;CDI%Bl5c,016#q`d;!\V+5L?c3/^+ng;BZrO!Vt?8m
%^IYOm4U';!Yp*[f^REJi^7UqjdAC=9mm;;`*7_>sd0(6g+n-]_j;FlM<.R"h3i!-9dYo3F.T`5f9k-:,&>7:<N/W#VG^rELJlpAL
%W?@N:"_0_Uf9VIWU^o11I^Gt>O5^n6'%l*hbDploS"H?jFqj'(.igr718*RD=/:r'(6q]dFge4skMnqfo-5d(ei]Oaf6Y:`./5?R
%41O3Xl4sd9,YsXC2&I'B.4$(/"F=i(c&NQZpKi"WZcpNDVB<(9+7^V&D,#e/fm!'2ASpJhZp/1N*EWcBZL>-^jbW3o!bnC),E>>$
%YFA)oLH,bi^:6p]2325rq\#ij!4@8dL#s?rW,n,PGr_TmiESQ%-c]oF2Rc0!\%+B-3$05oQlfHS[c[*ZNn`?@+.EZ@%X/8goSapT
%qb<;kDU):2\JUA@dY(YdZD*^j.>;Y'F;1lXP%K]7@*1Gd8@15pdPmUEq;R:39M1=bHb:r%R/Q`@$#+0Sb)5nY?ZpO5EI;:3KXRaF
%O/I"\4h]TGm0'OXjK?hXHS]9`o<%4F:b*2F5pATA;>Z*kp&G7He>On/W4WRV#$-%P^<rk/d[##VJq?9hloHXIl?BdU<`X3a0AkET
%WUU2(BY5A9*GTt4?(Tc=F`i=f24ISTkfL+[WCq_g%`8"^#-g%HVk\C=1+Uf5l`*!P"Kh;6/>#>AD6VbB=(m&'T\IPiW9bc#,BN'<
%CY#1p"'UmODH7L,A''Lg0.uAR,:bU*DPHIDD5_VtHt3RnZt:8g.leXS?%kJ6X#R#QJmM;h9gDAg-<-DB#esQcFb/&_..6k]WfPQu
%=Kssu1KrKj5-dLkNP9D,@o$CW^8G#es4OR#\>R3S)f8h&oaP\HQ7]LqVSql\eD;Q(46$tfd^JXn",5=tH@<2o:$[q[&fOO-ekeNC
%.36h0Bra2+27b`=*^U^9R#!Y3(EmN<V2u02KNXYB4Kd^$9Yrf_X%>8UIl.Pq/=DQ[\MQOV6>Xp,2X/dEIm[d+L3#DfFl?1S-*N5-
%`J?A<_ZEOl42pUO#`?T<a5<Ppj%jdMnTRrkRe`)V5^R"Lof:a>WRfJ5q=IpSiu9L*%&`Cp]ruYnDd0UY'$*II%U_2$fW9JjI>oL5
%gqi+8g]H^\L<V>%k[d7M.&M*$`jIT.=eQ@>f4Kp2K$dVI4;rQ7Y_`/KUnAi@G9r=9aalooj2:EsB9Y/[2PrigG<3<ZB3C=S5Rs_b
%Y+nq.0J@8844:6h"e8fH#'0<;5G0fWD98=J]W_H!lF$]R)U$k%EMVq?^O9XHq@9p+b7:qTgnC$poI7G[Am#0#Um`fASUKPg0h',A
%(8UEjf@0Wp4Pp7K^HOrn)7"he2b7_BST.'7PMF!t!OT@WI,7,:&Y5\R6s2-o/RPf4CS7l=6TrFT\>VIb/1CP45!I^\5-d)9NHmSP
%biSSgL%V]3WJp2Y@9BE,*JS-S\@.NZTMp*C/EsFJOn7P>\BJ#qYoJ#ghGtiNJ$'4.f9\Dlh8XlW6a/e(>pJ^b1$*FPYR&X4rhs6a
%FK!gqmHP4p4sktP8TGUt]GFjqX@-OoYj5DgBotAtH$hMK5I.c2le%F#gi_sZV.3F[=276!]@!m%8p@tLfH4/5IZ"Q_\Xh.]9.1oV
%hNua<R5$HnU8-$IgLq8B0K[G8`afhTR*7)A`%A+PC5RT\(9-'74,Um'?G\#],7SZOaWX>^e"N\AjW/c8lfT2HqDb,j"CqBT/#9:m
%P%PNs/UuVSmGd]!/r10$52D-WhDA0rO&0rj"(alMVkp-VF[?$=`M,ZG>o4:3<#3V*p6bQD;I%R]c2Pq0r@RiVF&L('(28IndN:Nh
%J>+ID!tOGU*R1Oh..#phOTl\B4"m`#d*pS:N]mhcZWVcNg1+RWlQ97QD2iE=MY<?#n#1DLq+)=?M&c!Lqr^o8`Ib]\^Q#tn,:0)s
%fiAXiGV9q_h\t?U1A]t923M`C+[7>8YrH/n?I/cI?rME8P)3(?iY:cu\=C;-U;\kD;o-&>\1S0>FhRcp\d)KS@Lm]Gh#f9:Ym3C/
%/aqobZp.hGDlXj`:bb>9\!PK/'O4?;=YJto>0@l1dGnng'b)g2&mYs<@[gK8i+ua&[m<3jYrD:JAYWn-&C'3\&Q`f^LtQY$Rrj8H
%Z^6mM?-__(s4qO,7U'6)]\52b#eWXC-SuoM8.KXM5hd/XCRiF'G_c]IYtC,q5TV(U^UTffF?iM,IMLfiFbo`H>1(27n5eQ%2M571
%m%%h=!\@_O[%5PGF$#L_(R,aJg`_M/e?!P>87U.N_PnQP('C9d*2449WFCt4>Vb\)KU!5ug`':1BT(W<"*o[;8BdTXj]O9?k;9qN
%+'M%"R=Ia`m=Z0!U!Q,1289W03JOfu%;_4]5+nVaM1Qm3LTHI.Ru$X".cSB>F<hJB@q,qeA]K1f'0?sAo_3l\/]u'fUXYQaMGS<J
%*<M'd8k;=KOFSB[d,i0<244IGKp`UCjtW@tB2+khYq568Uh8NAjpN8!8quu;0J(Zr'G_tf2/)q'O@D;VpX'79,!RgjW]"QR<0S7h
%Io*iZb/5DJOqjKQ`t`THb`RST^kFtN]UBUM9%=\+gE]UKSomUAr:t.o#pVP?eh\D=IY7l#g6Bb:Ao.edJhd#4KA'pi]p+@[js_qN
%X0198[_JXa5mMX%JVIlJ_;`q">gI)h$Im3d+qtJ0%p%R5:sLQRBJo1SXf/\PFY!Va(D*pAA^!tAVBLfdY@DDE-k_JR?)@WA;fJ)k
%Qg(g@!LZitB&LUS4Ok77ENe6fdR,_>b8IWo9*1jiX00i&$-\?(SY9Om3K;\Ah:WY[A9*tn/I_4622fdHHs'NWjeT-n$>2e0QBmqa
%rD?5l"G&u',(YgWO\]*X2I^)V/9qqD=X!:u)b-8=,c<sj;rOF[77CUA#TgCV&F)*E7+DF4A1T'bP&%"m?l>bjiC8eU'Mbs,\D[>n
%CFM4pltmE'Gqme%';fVB&*SI7:hkYKU>Lp.:PIJ7I+C]rb/Y3(/LW'_Mg6BeD6@-N,U/%X67f'66u+$^`6!Cc&jL::\HbbD!9/.a
%Z\tJWZqJmn*grG]6giQ9qm8'YHK:Z=2P?:#qe)?Y(<&7)Wdrf:1c=4/i/WPM3iLO$?)h>D-CcLJ+-L4F:"1Bj:6WX.jPu=sk<)A2
%W&jLj<Gi/Z$CLpfM@sr/*_@+AMDdbO'un*R@B&&k9<pAti\(=@/V"807WXe+Lm0ks@,Crq#6l5\4arO!bIFfFJ.l[::ZtAN6hE,S
%`Xgh)0cfq0aMn:$UeX0"/dU[#RUg0,QnaCRTH7'^@^,[dKL"[m23U/$jj@DT68XNk,D'$nM%30?L`UQ3BMfZA-U!Ek4rgRJa%uTZ
%*Dg"lRf'CMnHl#;5#.uFYLZ6HW=jX99O<s9PPA7tRW`+*!B#5@$cLt8WZ1E$lk;'X<!Tf?-O>NkDEniX.Q$8C)A2XR8UeVKGVWeX
%m"30[-?g)+Ara8W";&dt/2eF-I+C[TW&ER)&JYopcboj$$*6T_.EIl&.;bp-9"Hmlk#)-j*NHf^9W8-D:(7!1P',r2LfrgB!ei$^
%'enHL.D!_cXue26OfEksFg7N+b0==rqH`;$5WLiK&H#si*kt\:jf8_a%Vhl74'jfZ-=>3mTg_d9%AO9,M+'lD*Dk`,Z;pU+>nm7j
%IAs;/b$0iJ`dkNIOD*)Y;(<$4ZmW$2pirjVP?aC[ql`A0S#ED&*gS6,1urF?j:XC"ZA&p`i'S^<N5d9-X',rNj$jNXJR3L6kD?2c
%N'g<3^9ik]1Gsi,(,&C!o&*st#%#b^k^UH[MeWQmQ3m,6>g,`09<r[Y/u],&)l1&iRY3NN_<BA"!&eTW=lsUKRIJ3C2;2jNQ.'P*
%;Ds[0^%X0&*OMH=5UjU9EBjm\X;ido6k^#b)c7h[aH$>/)6:>+<NgG5.+09VYX"Z\M5%ipL;>%bQ<Q0p@PJ*.$<G;QZT-i8b9mX3
%#I%!/A50NnkS1G8;W,e@+Va"Uo>OkWfi(7>p"jXg'90;EYfNUambq^94l')dB:PMQ41nBg]Ei8Y>uB7?HN%UiS5P#4TLt,K8rT`D
%cn&'pOr8E@\s4ED(QUq\eNGJQ>j#6NQUntGWk1jR]u)<A(0,1Ik%)2hNk$<%(()jS.1*s&7JnPSWH+5]:?pH90a6[j"g$.aN(DFE
%HNtLPj@<@H[^X?BRTrIucO=6Z#Rds7(L^T@ol]Xa)7=?9RS=lLg,pgi1uhQ`Fb5r#oHT$:IJt3,0DGu;K@L^HNN?'bTuX.s4+Y6g
%'9@NiQOe`3l'Lo*-oWQ[Rd$=M:pqqQ4Q_U&RAP[CT3niF/Nl6NS;.E/K!ln(2)]UJoD&:ePe):kKl:H[UhFa+__1,W4JE[Z;L4Jk
%W9SpJ4pN$n-)]%_9R=4Z2PKe:.0hRJjS@P(b%m:;,$TBU2OT]0SP&@,Z'6VNJqatpSg8.WG!B@*d%7@VgaSqn79'Q^ZrE.7]r$d=
%Mff;Bk70X5@$dUgE:'rEO*'TkW(V?uo$qN*UP25fqH^.@_lUIJ=M[FU/C0r`?d^F;d,MZ5`st!se2\.<T^>2G$V^V06"->96j!SF
%"\dE]#,W'GM1bn5F;I$6(]2G:>_7A4c<S9OM*iuq.g&*mQk[K-RV4O@l1Vc`Tq[RTkJleTcJ_)UGJ*8j;1'#\a_%uRNH4$R#d2+C
%C/McG+;?Crd<>isFX\]fO3iUK]_OosZ[$s<%34Z+orIR#augZgK*siaZb7"clFg2U;Gg&`RB=dS8eECI@$,7X,%r>6E*m9rEC@fD
%/!5od7Lk--?$i5`di[VnM3(d%nT9(>0D,b3_GX7*YQX,!dU\PD^L4P`a8Q9(A-Y?&+P9&cbUTOrP9+QRMVH!JKRY-X;-`pR5.=_$
%rljEn$ZE'gIT=kKTh+Tf>sg(Mdfl_\g6<iOYnNI.<ZAt$Au3gB7-u*'K=gJ*g<hOK"mo2s73!8p+sn6on/t6k.4;Xk>0kVL-og3_
%<G.THB]P9)6l&?7qf5V,M2)U?\1OeT5!^b%5!\sg1>H^f`AG)g[8"Oa**&H=o]#Bi6MJOR%soFu\#?E_8e'^Waah/c""ds"#f39:
%r="uh;+]-qOeE,I(V&V]ZOMa!KEcd*g72,DkX@U[9&FIGig,Q1E\@iVB7O:g%uW5eJQ*Y8g&oM/$VgjTX3>&8=5nQhPNd/'r6,r.
%+ZS2b1HfYe;ajDq'NT4"CQ"E84"li=L*A]dRpqfB*B4e)3*5)(AJ'9%gNJ><er-8_CY?QPL8.s\b+*cJS#Z'mNp!=bGs"4=-[tD`
%*8V/apeaj0k^mboXX'"U]>NJ;*;$B!P2!Sr;dM!i*^fI5A.#@8'!ccS;7.I%fJlF@gqSO9^>dR*EW,KXT_DUW#6r[2&laG(HA2u:
%'$Y&XO[@PK!tWJ<ZAcochN-(!PKrE(3QKu1*[LW?\j22d_)4!Nahtd9Qam,dV?bt]2%qcpo;R;q5Zf(:%Z>uJ$Du!HK8_aTRihWr
%XaPV6ENr2a'0gZ`K`PnNpeDAAYG5OUpN-34)NE]UW91*e2mJ,o]SellV`h$5NdGKD)-#4d*^!]WMmEc:RG=)t<Cg+C9<U!e-tZu]
%d26DAkZ4NhFjS)E7CZGAkU:3+RJT^VQhsQt-6P56=V#T(o!]K<'QPC_2FB,ZFS_dP:HH4oC%Chk(BL$$:t?sZaKaHqh65TT,1=;M
%d?(%22K2B:Z,L)s\j`pP+9l?:Cq68OWtf,_T^5B<l0e8-8A@3t9`K8=Da5&jPgZ]&A*6%gFKLE&6qCM;GX7fNig$mqA%-T/.o&P<
%\9d"_@baf'jg>-'qTcAPD9$W/I!MQ01uD!j^3!P(TT%'/#UHJF"8Y(6="@kFeMf*bXf`L-<A2*Q?l/h%i5*3D/rk(q6KWQokqr=!
%ThPfi)9[r`33L]"9BjX#,*Q?a0#Bq7TuHI-c>p'4S_uKj+B_t\#.a:eJd8hTpk4KuHD'bn-fImp(PM`DdXGNp)DN!fGU2bN8%HtJ
%`&4.6N?I2UTq:f87-VOgBB74>7&t6A\kX$uTq@s8Ac<4T2#4PsOXY4WU!ZL'R;RTZl=^5/5oST6V'/CI,g:l\%;m#^H\WS\cU<6&
%+\*3#KeVQn/.ZG[OB@,fPuWp=:NnZ9"GocRmoDHc$8DE:<oeM]c.gD2Zr2J!opb,i@2#tf86H#9Y]i"S8$>R3+;o*d6]Zt2+;ph'
%:<XbM`a?]*#UDd%:CQ#:QU%h[>lr,Ipgjs]UTdmSA-A(C0FP1oBdakiI3hp:N?kR777q\3)^A.YgEObFQdOT\c)CDFf2/cMJj)a0
%/.Er4.3gn/mEoIg'+J2bW6gLphm8tFY$RSYMs]$N*lks6<LoU5gK"S=B&`'B?jYJ(jIE`Q?mid!AU^D9rZXQXNQJib'5R:[]a1(f
%3i)F*KB81ZN*HRLT`U6NZg^>S,8s+($bNuFVoo*O8CI)6C?/9E[?S,hVA(0*2&o@qm;3BClLAgY@gr3<#/mdsUkfm#EGRN#b.!Hl
%%%ra;5qE99_LMbqrnqndMF+,njGb7ao_P=EWh\q#?!]ta`atZbYogged0_oE1EueheM+J-Ena8u"S<q3Ar<+IUG\\T_Og6BD+l:Y
%iHu=V/1@O6*m\ITnnNpp9-f*Lk8;PN6Hg9moH",2Wl87RHC+_]A;mK#75tDGR)g/T+7t(IW`Ci-H9`Pe[H#=]!I]m?=9A=7F:%/@
%Ti5G2!I[?^\u#`)&X#/OnU+4Ze`e@DnU+;PAEOs&I"4iYIEH+H25+-'5K*/ert:(9VsuQ.GR-Z=k520<APqgjR;;!M<,5iro,3as
%K>@W7i(t%N\b1n"(d@)r>F\``!X0):bguhY.'r!C!58L>:"^XK7:S<Ei,+NgQJ!%hQb??&>/JN"BSfC*3(o\tJe(\c?@s=GKPs&d
%L@@oZ*7=9hg8O$O?a///7Tb]JLmr&-X;SiU8XHtWnBm+b8R3.gTts#2mqqfH@,+qDHUH^5=eI'm:VsNp)St$[$%$]@Qk=_hZ\tV[
%<(4s)Z`/'Zr5ml7&UY*GX95Y&$G=&TdRq+4CiG'O8_m#WHJ0EmpEmHUmnIm5N+lr>6''qer%OBfGV@)Yik,Ka/SG[OA*uj2"%_o&
%*V-R1f&/\&p"(7a-c(-HF#?(,9HJMFh(a/Xk'e07W)RR#I],Ta[5Mhm]gE^Na+D<O9@/=cfQ&uFo\dCtR_a>9MdmSmO59t<]j7E-
%keX3/$FrANoq9q#^#c.bo\PK!:q^G%:S9:cmjhnTnClgC1.>M-FH+ZtN,I,)+_.n#"QR'TJh^G%f9cB`"^RuLf5Tge0k.LTkp:C`
%`+WGcnRaLZ'Ro30?XgBmH4r.3MD8::f/7.<+_.kZV2u3B>26dPXM)PcXlt_k@V%"%Fj_*Y.Z;([eml(_qB%*b&u3Ee=cnLSNR8A?
%*^::Zegd/9PrThDR&j)h^D7J>AKp%6%pe<=.T\#V]Jd#HKUs9oa=0$YMPAM>.4e8i6*3:jWcI9OfE8#U\AV+H$=YT&g_BTSTBD0&
%qVk1QihhOSiDS^5UjH]C;RqRHafr]XI:/7'Bq\Q3[M$op>j@7)dN%6`j:2)"a06C,*F5?;WH7l_\_,p=qoLFdA@qRLgOL"dc5O>l
%\-F(-([qX^*7j&%lh>km_Z,%RBgiSlR;95&[(<,5j+<Focj0c?`LmVbEkEhu,0RJ^%Q#B>/D*7FU8UprC;IRs\"$9&5#id+c]S;2
%Ma<Du"\5d%?EcrpqEQD[\nPEd=5O[8f%YM>,TB?rc=GM85m<T)(X_iLgh#_4mZ"!6,55J@G%$*3YGte@V-IKr1mJo//jQUof-F1#
%Lmd9HZTt5)do"i%gb\//MM?o[$fuQko!ohla+a)=NXOs*NXOs%5U"mi+YT)=SWIBXog1\!E9%Kfn$%C$(h6f!cW6&FjTShjPcqZ>
%dlV.)#u,4S_EokY1W9j5mlT6W[@gf-3<)UI^`b7A8_iEO@DT+TWUD6@=?MDF?I'26Ch/m_JkT$Ip#WWkmiU#3.$;DgC-NiUS>+=b
%GG9?S&3e1p1MpWdF/gbK=g]3%e%F7mSKRR!<@p#R2Bo(>]6jWG`_gbj$<%,1*Z)$,bA":O_RtrQ_=#!!6$7Du6:a1p=chFm`s!>d
%>d2o!$#0_.bBs8T7P+L"5qf,Ff)(K\na7rV3CW[>7,:-5\'KVUaW/gddifcDO5l$'51S0#39Dc9REJ*(,HSIQ[4tBWg"Zm9%]DIJ
%j5Tsla)UA,$+c++n)bULhTH(jSQrt``sMGlcM))bQY%d3]L(F_,ki@/jG;%^Z5Nb$.$qmh@l<2a(*b+;V#i\$\f$WP0=Td)pG&\-
%.qi,5bDL0<0aLHa$Mb*d5t)-lAnRW,Z[n,%2pEQi#%[MA*$-N!oWH+Y+D,e8$&H.[oB!#(?T<J6`"KrkMbC#c5tc?D5lp)i)_%T%
%B*]*2ch]1E8G-XB\Lp>3+"f,Naa"+?`Q/)pB9NJB"X/#<&tsUh!6-N)WOJ?+N=%r?P1"Ik-/Th9G1TYW\OfU=I"t:BR(VWO,V;ro
%@>8JGR/qT)4rRP_P'nQX4Od/iN=j_paI+Tr*/l57=i>nU$(G\Z;fG9.MAerjWq0VW%?ncMPNhQ)SH[0q]+hQu)KR56W6>,n5i:pI
%0Y\<`6P5AX6.'g)J-UcIfUN9i($j=g.X7q.\5!3,O@jM^$=ke@a/OS;:iEhB+N:D5R@qsJLRI(c/:X&oTEeccJX>ZhLO"D(e)Ii^
%J>E\>qdgfkH8VLH*l'\VBq#@S5Ht0SGlYZp:R??WbM6@3H*@SQ0KQD`"8-lq+>o8N\\&-((0MBp$%cZ:eqi8NK2a-OlH`N;7u?;?
%p@W(kY+ohYqSkcr'[hjbX!luI`5N1+;J8arm:_`kc0$<TN,ibR\Y=qj.*kf9h,VQ-;2DOejp9GC3r1D@%`1KX;/?;&S#mdc+h$N)
%G)MAqbF`uX]-rrhHEScR'5;@pkSq%ZNanfk1/-S)+u`o/lOkJ&V*PkSF6N]<H2p4D-M[dE<-jEa#[=uu=/0dsG)&A4g]n^+mI*-)
%2cm?OWlp=,W*(7a0#A*i,NE7-CO]b>"k*Dpj%5M'V^\Uh^k0hWT5]pqTl^K,8#eF`aEBiM2<@:,HNc>tT^TTc)C7.FMp-47a_/:Y
%9N$3oijMa7k`@L:B3E`@pM7j6<aF/GIeV!?)!Jd)1f=o`;S?$6FqXEK)m&ae+@YH!_F+K*MUgT!O>[*=V?`dHW*q,?^$RP3#kS.^
%MGYds=tWH(L87*g`G,T:R%uPKW&6PU[fdXecf=3=5B`C/+bZBX_A,.hOoh<S2m:?O-OI=jKmjl0`t;;e$h^hl=]CSo[krHWM-],7
%:de<Y(,LQB>d"`T;ULDc_F%Noe=U&aGR!cQ1/=_LH8=i"oAa@*SPHX]ch5t,$(ZnB7,1qG,683non4"aD?IE+2GPfo/h#/+PYmfk
%(Z/G[S%a2cnhseE@$\2,e4UL(7f`cb&aCPDe4rdEg!d(K(n!*LKHsQk&#EMjF=*VDk'V;lH!-WLj`efuMj(0idKMX4-YrYp=^em&
%agj(u5[U'K_r"sXqs#Hl9+NqulBF=qeM!s:T=(gdgK,bnq8-Uf=!p'IA&#]-Q1e#iL\RAl!+C+'e&jCF_7>3R%g2HdjiOch,gg1K
%d[Du#cK3.`<0rs5q8uO)O6Od-T21T5\TBUe%R&EVY=*IVaB&KcN:Y6hP]sVYP%'r??C0/HT-s4,Ek\,8Gp*=MVIU+a$YqTC[YQ7k
%dcUe30rDDB?eCcr+a:Jeq^b\/>[O!Y3t6[46,Qi5Xg?_.Y:njBU&3R9-jbe;8M#N?Zj@2!:f^B7jXUX,#XEQ6/tbon)M['K?$_U"
%#B<EO'Q>T$=^,oj'0of-J;ad><'[\,"mGX,S@W@II&`n489&Wp_)(I8;VQHRn$k;"4FY+*>%2U<c1.^A\rlX=7ECDt#kfBOWr4pF
%L`p<cL[aT2bEs$G-'EA40`q^jj/0DH!BE`<kVAHN-51S@':#'5/n5[G[QZ?"-F74PBbrPYk9U_D$^j)HYXrs\T*XDQ6N/ljL<$OJ
%i'HZWl/<Jn8mcITX`$tf5+%g\&MQVuDhMPf[S$UXEpcCXA.pbmOKA<<(n(D[B1[D*k,l;"@gMNS6*?(Hd^gtFLWAX?92TTV<f;pP
%CIcQ+B:;;!Pshj:2@)_SgS,.iMBGo6K:&^nL,0Zkh8kD3;J38VcQaVJR;im+9jPrlZ/nhi!qX/&2k$lLl"$!&eX!Q[n3HtK)gddL
%g]aFVJV;G1K]$iP#1O?Vh?([E9\t9;&*#%Z@.sq@'/d=NR$aIh,n%d.P1CNUH?kLk1[pKVcnjGEg1bVZMO\5nD"g'R.!\9I,Dk95
%2Tq+tbZ.bEnA@-skara=QDXB.5G6l6lQEtV!@Z'l-5('5n+0?M@65SH\ZS3[9p7["lK)9$!=4?Tjal<sL`D[6.:3ZV.7lc:HZpFi
%2Oo_2,a@$P4KtuZjnT>2@P>O,47""[,9%:I4%uDI9onO)bS0,Ci1js@0)bP/l7,^4pBca;6=Yo?bJHgB"0PHf*N57Z1fU\%HEIZ,
%d?>0NAsUDF\^e1LVaWT"UTQE5Q#$T#."A-IA=Q4q_[0>dY2EA^$F[CVnP`Cr$`ZX%_?>W2\>6(DiHJT%E/ul7E*!3;Y#M2E$K=)J
%dPhmAVHq,X+d5D&G6<fd<?ieL&^Dd5\a%:fJL0BZ'EJ`S'_&2!!a>o'07dA:9KDC"YGdCN[_i"pQ`aqc2so&;R2Xf//rW]ZR!$F8
%Y)mK0QJqT-&rIP1[0A]!5@e;uctGg"qu/-6J;^Rf$"=b+qY-YKi4QMFenB#9?^I6CfNaU&*g#knN1PC;F+jNC>9"c]pTj:gbVhSA
%YhLNGFtjBo&_Q1^[o0/R>!kFK^I#'=;'N!n(4i6Le"1!V+[Is=d=&@8D3`S-W^&;h9U2Xb(&Q,*mf"Sdn/KTCS66@qAks.&$.snK
%IYC'JJ_:-B@D#i]@%LSo_'Y%i&R)T/%;j:S)&#E+TV@"t"\_,N6eZYO"QR-"-qTf8e&^fEH)%)^jU1uk?bm?A2.4k->e%g[<"ucB
%6ubl(W^iqR'B3'DcttOJEbnO79XmaYSg=l*%Uk_:dN\dVj+jS9/@!WNSUHS$a)[U6iLX(]8F!d8(Q:nc[UuqW3.'&55V%NU7ObeR
%<:b&K_u(^.f[bAH;aLfoTVc8e&@:iO.LkPr,kJKTp^UsAGA2M.a8#kdB5\@hak%HV#H3$^bUB1o\42i+)N*ae@%>Gf!tK6c5r!Pg
%AW%OYg%Fn%/s-&QFrd8:%._<=e^bd8PUn7c(^b1':0MnK5Y/=u,Rr2:r$&)'(a9ejJNH^p`=^A#$j[[O'LRX\Si`&U=?Ci^;-8TB
%Vh5(EU6=rKSh7E_>'Go=F4CmYU,FeSB:mgq`("='M+H<3+^WW38XQT?B9hje&)9sdd3`WdHD`[ERUbK4%SkK7AY%BrodmcY/OJ$X
%)6\7qCc(gcA%8]'ZtLgt%:glcl5O\WB!)>aNM#6Z*V@Qb2,mER4,B0oX<;dd/3=7\fcYP4h_NG9T[f)<(:\1;#48#j*Kd1HQjSaa
%qZAqY8HW=1`[g@E[BaABSSo`)a9[JG2pm"?jFJ1$r[\t8[7h:*d.l,$GeWAfr'3JTLL^]m$k=VmBFn!mqmrMP]]Q[gNE]3"C:9?o
%aL[Xb"p&XK0Dd4/\[libWZ%N:ofD2iP-.`:V@6:q3DED1,3Euu''8Zdh^F*VTiEB2Q/(l3La=\AAq]A=W4=::HV`fRnBYDDNH.i(
%W;[j\KD[D/&tsW%kd;W\!5>!OO\8EOUY+3^KE&hT;?r>5UVW]DOW^''n;,636q;M8[FE(,h11+O$Dgp3=%md"91dKTMmZ1c(*7rN
%(RusU?+e0V*R9cEfH+l<A#OM:7pl+;<[/Na#U;*SjaFVt2&MYn,`>6l9QZdo<=T2@g<f"eeADh+#)OVU\Z*0ck-@`kF@I\k=(r\n
%qQ3e*JJFO;Y%;!n-!=<-QJif`9#`8i]Xk9(*#>p7G8&fiqaE1##7OcQI)1,O0P)cQ0fThG8\j\kB+.X]*njTS4COKO#KE/&I=[ec
%HG0U]c5sT5m9.4>0$"cBH]68+"iX%L_$J@KC9d_?0$pUnJ1?5Y0O1^!2H2#KX4>r_G]d<A2Ap3$VD.3G&X6'7#j"R3eEUo6HFs.f
%#Q!6?&ES$Ej^tr^@e+*,cdKh\Z'B02]!+NT=1&JOV-K1IKChPL<*a3@,k]qZbgsn3k8@8^KACd-G:3-)CGQ;<X#@n-FCcADYX"8I
%P@G&QrpY4?E[(_X+/D-7Lp&.M$$1"X$J_,;,9!3uSp/\98KB0,g^;/CW?QHpk.2AJ7#6T=PFSje&SgqF1572q9UuJ-G$(oQZh7o;
%c,9f@GrGAumEhJp`WK.FP3ZYD<tK9?YfgfP]=_0DjV8?:j[re='bEs$IGEq<,J!=,/`OXhh3guBCF`Ci.l>4fd[f-I:Oi:Yca-F_
%@i2$*eP0D40Z2h]JMR@bMjpea"4?,@%crn.!A&kV6]IE_oWk5Gp2^i\.>,"3ER@clTr&/?W.PBmX&tI*G76n4Ph^JBT>;UdN':po
%P;bRY!.)aE4R)FuX))\KS@g1%JtkikqXd0I@T>o!)9I?#GEW8Jk\@$1E`kQ1#X]>IH\\scY'/n!aS^Zt36Ku*.H_[CNKgUCNL/?)
%W6l!L$,K1'G(TjdO"Q?)_'c#7HIAuCN_@)>=T0ul3I+&<2'\e;1oZKMB804+$U"]?L.d]FlLMJQ?l+E%Un.F`FuB\Y2"m7sNoMZ,
%i5qaYe;N_QDa\N=nDQAsBN44K*(=!V)Ou*RiJBP8r@gLO6/Wd=ks;>UJ;;TG0IGqk':%%lb8'k%+JN'-kQ^+$$u^DlSa9@%4VKb3
%LVcXl"pqfgYO2Bj-e-9H)JN9/P$Cg'M+ZlbZ_N!n,-!E90oG_$YX!M;:aB;QUX+N1T@_t0jm2S,s2YO]CS!p_.,%o)HplXV5UD(`
%&1=ctES-hBLc^Qm77`D<ao_G,BL)rA&\&;>NPN%,1[#>HE'l&-AT\U.jWNrK?EY?'jZ%KHUiLn=7_-_8E^Y'8>YVE&5!Nn]d#F>]
%[SS7.YWNQ$bF0Q>jY<F=4SlDMnc7PP/tnUq,1!%2!1aZ3MWq?-1.dbd@<jO./EM#"i0$.]S2ghU6i6H<ke9/?]$0XBOW?3gj/o8g
%Hs[r.Mp(\TJiJnc[p'p>B[5_%N?msEb9Jg74flgOZ#lL!/.[kC3\6=,4Ut,23$#Z4;;RX0Qg;@Jk1$r1?<;QhAQUF*r$:5dQK?VR
%*#^<Ds2'?hnj4H,aB*q/NI#L^I9!VJJ?$.e;^)*tO>2&]d8&IsSs>13?tbADoprOI$]3IY:)ugHKO^.l*]VP<:+%kXHBj(lF?<ST
%gSKIb%8[uk]r>dFaE#okrH5+5I0L\B=YFCr9Ms-7L/,_P@4^EM<BB8=C/?i'e6j.q4^^%`bu%D^C^HUX7dL;<,_?C`N=3uhmI_qk
%=YCtQ?%!:^@>$fWqh@R#3QU0@MS!W2++j^W5QQHKL>T%'DjtK=k[^pC7eL<YcR6j!Cc[u*LT]sL-Sd_Tnl4Vs?,6qYQ9!u!B*ubR
%f3TbW.uUDTN[sr(-F'P_I[0QaAUsoJ651FK]X<h\?Blo]c.lVnc\i:j?cXrGPa?BS$_UVq!Jb5l9HI9&H8/?_5=S^%P\6+`l"+uA
%SdKLC<[T"?*i-M2$)MrMSO>is$='-LS]#@<eHmWsH*Lq+MC5lTN=pK0NOYDsQfZ=fM=Bu[aT=0N&XL<"H\]M9[0O5a`oeSi'9-b<
%rNJES4X$-TX#$u[=Kp!6Hu6)_`q3fscR6fU9Y-g5LMj06Y2jXR`D^J4aiEa`POg@\r4&rT<D7INSd=fX[<]*R(XK2rKNm0@'ul?<
%bVjJ.Jj/pU<ussq]%lJbFX@-.'*@&aeH=JiP81+;k9ETZpZ3V+JTe]I(p3&Le(4)M4pu*nYKk16gD[M]X:SU2W^5%ho&h#6>oXrS
%K".!(dq9Y%J,_sqh,Wd#HFh><huD:mrVCp7li0tbeFPX!iBRA.?XJ81If7fXs8(?^r9:EU@]'_sAolO)?N6Yso]Q8;?iGJ^iICaV
%J%bj/j7C#LrP/BiTDu%&_`n"s5Q'X#YC?0UJ,/]Ns7t:0s5S%4rpsKHrC_Y)]-Up5CSXkjH+ToNs7Ounrq#%HD$oghhs*NX0Vp<;
%LgKo4TDnEMJ,8L2]sb#TWFb)lNi_L-eYi1nJ'q\fZol"le,Sa[s8;?cnrXgK5Osn]s(L&GI)is.[f3%shB2Z&jEHqTs7\bV[t"2g
%s73r)qU](]riNqZHcb7.b<u<of>%7To:Q$YT7;:bdjm*>079t\>7B/);"Ln1?1A.W:MWkfGrnX1;4)jF%U>^,jqi,:o/fPR]R6O@
%l(p7qRU974W-Jhp>LbhYkJ\Ok5I*R\bqJ:Tk#\p6EIMF(i`_@d2?-UTq$9Fuo6XC,ro[;QDu7h@YN?XuGjc#C]'5l0bdRn8I+Jd)
%6p:hcGAb+P7-P8dpQjKGW"G1IRAHW#&@l*K&s>S4*1S9QY=9$i%]ni>]pXu.!@Trs**aldW0&VJUk^-J8^B^`Ft.[Trb.On/PKh$
%7AX2D53VH_-ut`AK@_6u>l$`!5r;V,iuB;,:`M_fGS@7Sq0k#g&7T4N7m25iM5g`ECe-]5d$IS?>Vs13gZhj;*@:QZ.&2!I*8PgI
%+#quJbTZ9p&`2*"-8S%;]"I\&;/^/7i'$1@;+I5]/?6AHfnq[=6D[nEPQ\&Zjc['^AXN6%nt='+MA%LqSd*"cf)WPsqAhTZLIOn$
%//;K5+sEc)L)?91#0?RUpM#IsCP[G-^OY%3hX@c(,l7AQSQ9P$0Ae$*/lg8Y0PZTX@i4A3lLq$LL^'RC(P3f626JWH#o+*j[@LaT
%'I#i5e0(($'"+8AFsb2QOk2,2\I43H#hO=\>RqJ:>D`P%-O3[8*<M9o7`k;H2rs4taUu(K4V8oS(^Z?U3KK7YMAjmVR:&V7BbZ-5
%bP&RdIEo*<XR0p2'f&*6A3T&Mcp#7+a$R<F9K&jWobE:Z2'mcAF"M(AZNd18G^BCpr=#3O]M7uG<RAqh%?S]D8S[o-&/i=B#_EfA
%,E?"P21OeI7)5TW8jA:B=M0240tFT,6,@^U[>iSlg-[D/!J%+#gB3]LgfrtYrYdkV&3Og<$HG;N.@AT\:WV)j=b>dh(sq8oZ-[/.
%2Nl`)\Ia*7O@)\q(/ATpc"K:dL<gO0e-E*:X80U^EkK@XA4_oRRYV"1Q+mZ(E>'hLoEKiR%HUQ)mHoiFFtb9bp(n1ASfjt\X\c=3
%aini3E\8,%V+Ja\P`hZ!-%Rc5X^o-K0Jk)Y!`jat)_'U"O0X'?c2Io.9W&#[A1*gYG'AO*;HZ\a'A=39TJ6=GT##@PJ^$WWL`k2Y
%%ATLdPJXc.SX2^deP\WRDTclg=%4]C('eXp!k<E9JY!<Rj[M+4NPYEaW`rqTBiuh28Ji<td(Sl_=)(.e&6R&sJm`:,@<^0*YqV:e
%e3OK=/]>bqW.hu9/p8$6$<`*gEjE%n8]"Ra@F9qA*%jA:F3'rV;L`P8fZ-epPu5Y(X7mp99s_:8cqbcFZl:G,\+U2t,I#oHmndKN
%a<f6bEl*#[Y1+W3;Sd)m6LGqKE'&Ud60^BDb'?:odk*+O)8jnUDB58H)$tQ%G8g*Yo>*jR$`G7;Z&^AGD,e_\UUXZ;]BkXqbqaK6
%3QEF?$ETYL&iffe;)fFT=-f=l;Aar(_^Jfca5h_Q5pRWu`Sn+S87>.(70/=L1*%E5L.L?G]]"@%S6+2pFK?*6Y;Cn?BnF!RC,Uh2
%2tX$^KUcih/ag!M<CoM1iCgB4%!)Ko'I^[FJW:uf.9'\LdB3c)'rnMS^OU1I1+%r][B:h<79TR5SF00P9icM3:u`D_AdPG68[BTk
%9!0b%L[1F!%]\kdq$;b62!iN?PGRt'lDGC]R!c*PhLq?i_3B?(`BSk*#AOE*fp5)'_>"[O4EcY\28%HX9f*2pc5H^l[%Z&$Ze*q*
%Saog-:bYBb.S@N<QC3dEZbQIT9aL\2kca6H^:7UgZ=d;uX-^b]e;@=E]34,3g*D%d0R[r<GTl:<?:,sJFg/"*P']p)K^qM[03,;E
%)>aaN!"4&)5g0tR/S`b?86c.B=@ecS]Q0cCXl'[D!&:2P'5!n4?(B(`(p/>Qdp\/PqEt'#S)F(AXNZ)82AT2J7*A_M'napJi2mJ%
%\`e]I?qs7T1])h52;X365X#MI!ZIPSk%@-^"#I[%Ul_i^O@Mnq"hjl;;011kLk#_)#*2%WVat?FVUaWm;VhnT'tuAo0Qp;K.f]dQ
%]thKCdOV;N.YrSa*qV<Wm43DHl__C8Q5;+WcMG%:X`+S+%leOXg7'10@24%0&ocPA$;RCHjA\HQ5/Mb[B3>[:l=*n)7XZEsV3#X$
%4n=&2mT-q:,JbhEaqg&nH+[,IC=B@\nuCGA:KE)cms2]f;Y'oF14tr8ae`&(cS5=hM%:@Nqn_4S[X$fV<t[tB(aW^*$XV97/4_iJ
%"Wt>eB+U@>1@Qq"UZ>i=BYM8Q$,&M+j,"^_Q-5BQ11bCa)V3q@TlK*hAaCP0K+*6fOb4j?\=7'jE%VjiW"(/Pb\Xuk=I[^6]pf=Z
%'%M2?[&".//9P[g#>TD?(R`GB2)2WoI6A`%;5k%gC*fjC_L]qdFK6,6jEO<[E'e-f)Z-li1sW`:@rU]I!*0^=3Pjc-QMb_PMLt/a
%oJ0hg;JhBI-$'XUD_Z'ueb,S@^c,Ni6+^MC-PL[rK#cn;]3N,AM[=-*A"EnefhgGpp.+-[THO.6iXdWP+/5]Qa^_03&XBd*>;=^o
%!-+UNQLqhA%Y7dhca'*6#O*lG[])W:3DJ#3\42U5F-,si:^i)M7dMH?n/lYE5kChTCI_ch,3rL2W.G>rnY/toi29-h+EC)rm%a>E
%&m1!s[N^!e3Z0I'e!6#S^*-'neKtQ16n&@t>+\,%!g01T((+h*4dCnidSHp:+4#]&q.;A/::'kdD@qh.8:n\?</AP*/H[iF.#c<p
%)i2SU%0!b[fFnF>gQ],gJC0&4"'jb]pq@aVI]?%m`J'n/pl%eh8CY^cg?,7"kCS4#<:]sj]5Z4u-`AI0;-bIN/i5euAQ1u(3$kq^
%.\VecA]kboAV]98@@'e;eR.,YPVI"k#q^!m#qa5_cug.B/"nAJCoh"Jg8((cbYmf5@Q6YWd:Dk-;fFr!24)5\n<a1SlgpbKq4$.K
%J+;?-Qc&Hc2Tt6p>n4VJ,5)BWH0&6)SR6C*qMJK1D;Q%so<+eX++!3F;s0DbgNS)+I=q(`If)JbCN47]EE>B]aROCQ+;7s9c$]:#
%]W7[:qRNZ!]D?f:oi"+QTsr.mpVh7;ZJ.V9E8,CeFj@f%cC5_g;nr"VD(9W&k+Y@YlPB/<"ti'Q?'FOM"6I26ES01h0DRssY)=)V
%i8,0IgVqRV*"qQU,Jt]MZAGJ"3b@ss,XgUQ8[uCoF_jD73?D$`;<gVf!g!X29-G^'HGnq7JqS<+PIdmJi:?tk:7h,5lD5CK#C46u
%0NA0>d@>U6_[lls'L58'YmCok,jbjQm+e@3#VlG"crD`k:3qBB0!q^hig"F07j]RZ2M,K)2U7u(4kL&tY[T:"W5G3e7b\rT\Ec`'
%mn&+h?I#6rs(lC"=e"Go>9C>@JZ__W/$?X+ff;r(8j(n;o<G!=`d3\4ar?a8l->b"L5I*j#Ha,sOsKlb.<>%gGhKk\5o>s]kqd->
%r'T-J#/Nm7m<NpIiB?<*Gg+X+6;I"3_iJIp^oO$+WpbV`#;9%!8XSR"GhKkX(]B]fnPaBjITJd!MZRW?;3C@]2[.aH0:j6H7NIXP
%h@`U[j`Wj-rNs`7&CYt.$U1E4:HU6(#V().>OW5%"hj%8/bk&;f.CW=n-_!'phTBp!7HI[+G>hY2R20bk\;BsBj1#9NHM,b(-Fo)
%Et=n;#sUN%:&(c,5+Qfo[O++'S"kXG9bY5]n7jRq1#\J-WX41*Y/fp@dtGL8_Q?LVA>NiNFrMLO,)"bZT@gO%Q\SAQmqTc;:H$kW
%ZD2llIFS7Dqe.]T=[t<i2q^^;<$"8rpibObJ'<>*X#a;]Afi8g$YnK.$&IP[ra=h@i&hN$O.V$]ooO.EE8O[5JI"Bo:C;:TpO+pS
%H;ZFU9$DjGDPJNpYdDKU$;!k>/6X9DIPHt897H,X>[CZ"/d`3t&Q1fsrtldrYS`>iB)5\A<XJTinqQJNeW0Z?E_+Fl[nKp^2J:b/
%V=hll=ddfuC?Y2]2AOIUN/46X3<LoI8]lj)Jd)gVW7ku#$)i`;kVnf*,@Z'cDkrQgD$Gb3"DA]FMh+1^M.B3K!RIS-BjWkl]QckY
%TH&8?.\S/6']nYH[N^A<n%*8IKRJIX=E4cA)_[0GM?kc(/OB6)?/"R@,?#4gB9tm8S\=1YKIDD+-03p(df)/,j_X4m5=&e>(X*/u
%a2Bg^Ki-<^)hL8JectCCo&^1O0L6nTO8\>+3)g(`7sOp[ZS4DMZuKWoi@XP8L\]d;_U1BG\/<':os0+HS`F;K@98bj+_[glboG`Z
%Uhh]Q'uTi$?@>)maiql$3<ITlH2=U8#T&hj^W8H%rWtnC6db0N8>[6-6?A]]>*;tU^[uKsh3DsNXPb)POUhP_=l"i7SJZ+QZt\:o
%N,VDeOqASk(qaKY2<^A8bGusa9oBM/a;Hd$`.?:KUqb):[PqWS,PVp;QAihBJ8,'18d[R4"T&&u1/kCW!^K.9&t;-NM>oKT-;PNO
%]2h.'af'qf'/B1b'X17f*07/2]dpn'>^L^>6j8oa6CYMV#tq@?LD?#hW#ZI1hIMGqPX]N%k`@A#/@L\LP29k4Y_[`rD*G$nkQF#%
%oM)lZXA!9GX-"k?QLP;V'hFW\^p.&S=r;re&+pdLa<HdDgF*/3:aFJZ5XP('r)#`@@Ub.;7l:t@%0?e@Tgp\unWXW3AB1A'8us'4
%X[^!ilieo,Tcb*r%ks1"E(<-D,'5c,5WgaaDnZOWj3[Z8'm[`k!/t&F%,5](Ma'Oo6CS&]J^EU$6^J/nh]g)W@A@Fc0%+j-..*D.
%W,L5_LWb&Zd$OeGP.Y=IFNbs-aCr6^"Io0@*ol?I$8O/Z$O.`A8<V"L5abF8dBJ-G,B(5D6*qAiI%Xjdk?;?@^*s65#R"FD>"p=%
%!0Det!JKO97!(Q2oX=kpXtSOuY^t<S?9s4d?GBU'M@HGd?!Esf/IM&6lelC^lNCcJ:ppj*V&mWC7R"#[!)2L*&u%f1i_dha0!I5I
%Oa!fPJB8NgOg#Yc#_f"a:,p6K6@^dObQ>LfjTM*R)Am&`&O_X@klH$p8dNU]:J=cmV1VkchP.M*hp-Cu"UPb^7@?`G.=dDC'$?Km
%V:ecP3lnSMk>3,L#JK>&#_d3%pVM%12NGEa(B;lp+"q>Z9Joi\MI3UL-fd4<#CmC+'m,$Kfmh*L`<JBJXWMkXKX.P>JOJf^..*XY
%HlT[`'.BqOc65S2'>1o4d;D`mZ:jq[J1R#Ve1-IbG,aGGdmj^r]cOU6`>G?[29-\/li=m<lI6[+aF$QjMQmWtmUi@g?4*ugUQu\]
%+>`U8TuV6BBBlgZ]MAG3;%AsJW87PBLV2-Q#c"167)TYkK#B1#Wea>g#87He"ra=Y5UMfEW]TUSA10rC'oVZ+;i!=G&klKP^am_T
%W?&eBP%Equ=<cX=Igu>%RAp<;2+?f&A.\R"`!"MCr;@ul*/=U,D:/+X7\>XdIqMe?CYoUM;q!Y%N!fX@.n$2kZrqq#IH5LMr4G5T
%_"t;BHMh^jaTb5cDh"-aF9V<WDNQtB>);faXJ(sa_[%O:KC1PopddqJ.)q2,M(C09ARXmUAkIR8;.^NIrpItOpF\DK#5/@[0Nd6Z
%7?+Ziqfed>@o7a_?Y+fSVA:08Q=90d^(b1hPuJr0@k_4s7?Ct$UH15kTo-frk#b8pAQa?oon^O;W2R[m1:5+fJV"6Gi6h.`H:UfJ
%L)@anJ:q`X,bS8m,8hX-lTMeKo^4K@?Ji+C@(nB\(j,:;EhtLi$R,m#QDU%s0BV]3O#ZVCTqBDX++P[QUXI[G$#soa&pIJg]?HUK
%:-NoJ6]0]h]$aQ^-UDib[^FJG(F<PUR.'C^[&@M*UU_4=),HDr5q^%T`W0V9&2cR:8?l9+!^,s[j5AiOs-ZgAdPi(0o'U6W40iTV
%b&6u4O)]8ph?He5kL;33'sA4e",07e)\]LTC9B%p.ocD'\Ej;XH$]tr/+TA,i#*/o[9L2*0I0+hU@4J@T%,Pr@2pTeQ?:/+N<SGj
%b.k,iJMSVJ76606;<Wtd^qn[/oE')iKKRseAEi^<84g0[Ll'07Tt"RZ7@+k]8?'b/eZ_@ZQ(i1d2.eSc\]Wi@/mkS/`"A4Je:n\h
%!?(%:9WT.o(!h``-3/u[R,Kf)1]b!lR$5gqdTI]ubAkb=UsH7(fO]64dI:=ODHZ"k-g%cf=3T76X\+q&a6^NFO0<nY"\U)t@@*YB
%35#a)Y77S3(ZmJR(0_Y!/,%E>%jZVE12cep'be758.lTi61A1u/Qatd>k*.jKXQL\*nDh=)UK$@/d%^Y-j>:'`mF44Lse\NW7'f<
%cDG8/X@:]3kBdpT,G_%8a1uYc+n$?93Ll1NS@1mN?Bj3Am3NSce@KL0AYGmXY*7Qg^nh2WmorT='9(a#,9YbbLd?\.g)<:K!bp_M
%+=Zc`MY?RV&>!fA:WI2>is6q]#7mUt;C+CUD6Jtm%QTb;IU4-2Nlt,p\'/@&mRsu4:d>iu4Et>-)#7uNE<FaD:h8USWk:pS&[P"F
%*c264:S6GG@#9N0kino%T=aoFGL-`)$8pe,$;T\.hcn%)@U1T";o)ua.kuah?uggXRl8)n:]`Yh#mM,XlmeCZW\0XcasiWd_f%#i
%gP#TO<-IC!!3.Y`.J_G9'lj`"K:B0.c/SrjL`'$?"k3tT4>JUFHi,fp2/5^["8'5kaHn:C-<O0fa43q7,ejJ_U&9K^PHn7kK>!(t
%mRd!Vg3dsp.LINJI\?HgkUDN4HTLEXD$,5LP`V/O<?(A)f,--UETKdC=dO<>;_kcPYu-SJS(asme;pZ>h^[3t=(V'Bl*&],COPqk
%5aN4kZA2]9-dT$ekWMc9kILRM8Y!i1^]%gVY(s$f?[r*'fAH&B!m&NV8I)>%k/$d`/#d$F(%ZCi"heKuB@!gXls6gn/:-]TJTTL,
%h_RefK@bq7eC.#[Wc0])Pn'6.<pJsN3g^VpHM2'M:LMo@=4m,%WMQ1_MU(?uWKY;'!`4WJ%Ngt:G.#h>F^Op6>3`FIC8kQ_mcgOb
%\$a^AWr[t";U=9396j_+ZOLZK?T%+gIFGRQYMO^Y9-(/_>`gV(3bADl8>j!]TkTe<-dT$cBrU!b<U\\rI9ZRn7$K#4eL5SsWH$nT
%D;NLrM,!Se5'r$4=-NK`JA.qr!"A+bG5*E`!X'L^f1;=trdqb&HR2qrlRm1]ic16O_'JFd4Hu%KXq'g(@a!llGkMQ8ci-b4#8S\4
%Xdn1mmWg2b[CC5Hr!a9r$j2^[gH;JZ8hKqPMYob>jEo]$DiLY[.KX)2/V6fh01t]&;%d;hcd[Ig8AqBWRIs5fZ1*2n8GdOiF>F=Z
%K,K1U]b<`SW-7qW01WORD\hML63j*J[W_#*qK@A8+atOcYF^8lre]UF!f^eUDkQf9]R0;G>$=]d=P;7<:`\a]HBpd![M>WibAUCh
%Q"h@=j"5#;/UKA&r=rUF/4ooT/Nl:j-JN<?o(OTfqMmah<S>rII-8O'gFE2'QEWU`SkM%bYN2#+C"a=1Loji9AEU/'jPuYo]R3[O
%5+_-j@T<Z&o=Ciq:R[Q2Rn_]ID?-W"a&^+qKB=IZ<dQ-+9L:=^RO!ip_!q%.s5SV.T)oiH!<iT`qhL!]D[9DnE1QlbVjtXf+l\2@
%2udtD^WX\oHuhnHqSYWdju-m&?,mN&M(Cp^4M.1jGD2#h0.65c5)0IZ/pXjfo[f]d5k'Ln`4PX&F*l3qc2WhG/W(ls]k+fi^F_EN
%hiAO;aO,V*\euG/]J9B>9u>Tk.X4oai=&#NM$rpq_n][K,:&K[>D`H#Obq"q+PIhi7S?5^0VPeT%K0Q6U9q"YnhPK;6ulSf=(WC4
%o!C<`K6UT,P/Xmm)j's[QhM#d2rdIN'X0Okq#I^)j7U+G7u@1X7hJeJHBg_V6i2H7NK,2+]XgnqqC(?c%uMQKD``ih\Rg]J+-tZ^
%qL7<@:n@A]3h>_^'R=bl^[`fDk3r3N7hL'(a^/ImV4HD#@to:H=.ltT0+bTi(_/mtHmi0NZ?EMq$r,t4#Phr[iX0!M&;<-p@\/XQ
%K(JLSauS@f<-\5QS&YA3>L;iFM;PJXmRHUd_8q%K8FeUQkiaG,!p\^@J3]H_<%H56:Vll%>liarcs6\.(!mcWP!=E*%Z&j?l-+1X
%%`nK"`NP&4@"uWm'ao-O17UX*Tc;>hf+VC!f+[M+htctp5b;gp%bJ%lbMbL48LmcL4rZ^dZKKI+G@W^=:N/=!DkM3Q^OC;&+L1h&
%qPQG\f.)XApVZ\&E;dE%)8>rd]kGQ6\6cQ;4<6*54@_&cT7ZgTp"d'igU;=\p2phQ(gurS^"AYBFM*.q*5+I`$Jl<FG6N(i5^*D(
%ecZ'CU=`!?'NY!%1]bR0OG9231C6AO2'Zoh*44a"-_Na/DJq:3P#KW(5o%4q]muFa";-)jWpG-0$sOePTsP][ajsNh5!OB@_)o!$
%5dbmhAj<=S6]d05AA_XDO"VBuraj\)$Tb]?nq'g0Y(Q.'kcTR+3p;L<kMMpb#u6#I'QNH&nG$Pu;:#RQ<H+lYie8W0Pn4j3:s_Os
%KtS0H#VLPJ4pf8I4&%^i[LhBB?\1#?i,)l9BBUC>Q89+_PaC%@Ui/VOcmTm3&`b9,=A^H?l2e%#J69P@K@Md!K*ZDAjJ/f]qJPja
%jVi5KA\6"g]TWshT.6l$&.G2:A]`=F4MAR6Ye$K6VuIH.i$$a3,7a"b30_?kVG],@P:783ZaekJ&&.nk!RS7Vna2m]['*[L$#L3]
%UUPn)g.rK<J,'$:6(aVX!m<P\H%L:J*P)>Fhk6Yh$)P9^2.t./;"p*2Zs]p^0rJm7[E[eTj_*s&]n!&c"N9%G5>.r,"iOrWHs4)K
%iVPo<:GLR!"[ut+D.R\#ntY,'%<rYrBh5/e;,JXA#XfQ)]PW0rR&hsp"\7/)J9!cOK*_rETNCi[d,E;Q3<iHp5"^HK'F&$9Z4q]-
%+F?[kJf!eWW_a-94fG4`P*+tB+QX:3%j%R>K!bdVabEcAmjD:d!\JBkJ-@;BC=^[b%#C+q\%Nm=nH7=p(;Wa&;9VX2H&Ci.fcddn
%f8$((PnJ-)PM-peAtXSY.'O#O\:QuE4%:W+<WM]X+7$eKXR$SC[W8g?(7)1h/]hs1]/l7hO`DtTBa$,\p;7;IODA'$3iUDo_TBm`
%GhfZfrT&YQp0'7X3bA9IrTsf,qRt5^/kZ;F]RN4)T44YB7Id=\;^Q`$0VAp'!.btdOhpm*3fPdf3Q)lb5-AnMi9\e.4::i`LeP0q
%bc`H`&r"kt#^;cX6Po#W>EO(9')+:p!K5=11'TRpD>e+HRPs5\qP[,cVDXc'e<XN)?U"[G:*K\mU;fT"<<4tN1K/l>JKhEAQ,+6?
%$+A**QGUJ=*&MY#KrHV1%)Na<R8Qmd%IKlX.+U_&kph7k_4tX<]%@_*Q$[%<h.@6eD@7IMne=e3<qZZbJorQj3$,E)#:"gjbn&TT
%ZR/KjSEk`S<!KB&#gkPYP*.5,o&=0R6hM1;Xb3.s.%h^+]Ie`2':[<OCl*#p`<oB`S$Jt-&>bslqfuZLQj,Te+Nl[5a`*4rKtq+7
%K:iKo'<@u&3f*=M\TiO&/faQ&ro8o>2\Sq!a(BT!3oH03O(-Q_"6GU"(7G*Vs*;o8XpGAqR'Oj2kf$70@W5ddeD0[;X)0[f7MDWQ
%+e^1%IgR'Y@)\spI?:?KZjm5fUtUg$_-u(aq;6?\g^sospB%`K*jT(CA\SmN!B<B7GuV=,,If6BKK:j48m%ap`s*of2mDZ&2AK5/
%2;-+Z<X[!A"T*QZp46"CJRO)%Qd8N^D4+.R/\;l^(o/9GI3`E+>61WdD?^\q9HVW(+/RUhRnYe\2AKCRGV7]".u_-EI!ZgsaQ]6m
%mZ&k)]&XP3=B)U%YeYqA'W>F&#V<8[\u'Wh0-Uq0Z<>O,6o:W0]e#mA):,GE&Gg'BT#K63\nq.7>PujiD6M*)%C/Qq-AKIn`Z5,H
%dC')dLmJPSJWb4sNrt?>fNE8#@mjJ)Au4Q\-/-:9KpjGV6"![q(1+d/k+.\J*[%J_n7SEdQdVGl0,;VG29]TDD]b2f0MQgM>Hs'3
%W7[K+!S8Sg-!_eJ0;._rlUH#M)?\Pu=F\p$;B0^SpaQNKn>7Q`blK8*VomVqljMP/Be=tqh22h^=uEDf2JO\*KoMD;R7MeI&$iPf
%>2"X@U<ud`.@rhn`r9?oFJCJJT0F>`[A-Ia$$iUnn?.oQj=Nt<c"<]S>?3%75e)c:f96OY!PO::[=+M[HlMB:V!/"0djCPD++0=+
%-"-bkjm9UG>Lb3teQB'+Zr9aVP2q?.leQ7q7ZXY^p*'0(ns/.gdZ@!L9<82!AJaHMB8%6<[Rq0fB!^&nbYVbipnZMN/@+!3,AEQ)
%;?hf3J7\Age`.YC]7:NnfXW_rnZoU\"dVqQ-&.k&E)3]^l#PA$@0>@o&&Klq8jGZZPhFQ3Oc5<'U*X9A32D-rHV5)VPi*p`epYeG
%l?YFg\k>!XlgfbQfk2sV.,XU'S].JZe>\t[;Z!PW5bn6sS/;6a(d]:aOFE5'Q3Y`jGZZ+MgT@`dG1rRfS&NnrR18Q1a5njN_rAI4
%0Lr4-7Veh/XEuClet-G!cP#nl.':M<AODp3e2KB:S;/](Sc5tFmL2P0Ah\d=i\[=`QH@p-S$h^mnYh">9s4WP3Z+[R+2D-e<7smN
%&h4Sig#]M4mk#i0^>;CieZZKB=ci3LIY'guIua4)Yu4S?G*A+%RJ0u(!4&-$.53Ja`So8,Wlr$\\Lsn/c,1D5YRXY*Z79P*F"h0n
%jQrV$\.l&RP\TVI_f;lbLaNc!_sDKa;-e3gTo`GBl_`)-IL*oD2#'(<W<7PW]6&3>rY@lAaV]?/.Fg#?O&?d;l3K!D)l>A.R*V7Z
%\:3Q*H:*&LPsuS6PJVI&PCG,]r"00tbk(9gl/rZm(WE^1m-KT:NEP$=o^"]_fgO2;MT;j*cPtN^I$Ng6g;`-^DIJlE<C;I?eLV[o
%C13fnT%4U_.(]rsbBO<F,AErrSR&I1Al_;OXNW_&j(Ai4HE/>2`Lc`TCD.hr-^fV+:d$khJdUM]5bT/?71A.+JDJ\8*EGEt6g6U=
%D1GhnKN?f=N/"_hYR4XT^oc%64<9jQgJqR3HI#`OWEReMAo:@p@lY4H8aCo/@)+enGlsOYbA+.MiMfuR$P77:mOPUn<WeL^2-f'0
%$GnM<i9#:8>]:Ldf!FLQ9A:Re(uH"Ki)V:TBA'od\\#6["B_?Q'_LH1Tn'ES;I=T>BEPl"(/Q:kd$km.O:WVs'2@FS69):hUIJ@P
%:ggsc"X0V:E@R[dR3K61_bESLc[B08#NDu6P>=ZIgD=!O?Al>273W\6/Y+9p??i@uCk#Q5Lm(t^C&'3#1QP(HHRV'0mHj;N2dARr
%\`(tPk;lf5$.b=V+@9erU3X9P0.XPM&``C[E-_A:\nAa@ApuY]K)A-Bo(d_TZOP7&rf'<\($k]kRebE=@fPgBd=<nWg,T\P:Sio;
%Hbs(MJRkFb3@5pDl6m[FNb2?YC0N_c#.;?k[hU_;I*g%E4,BBrb(ojAi$jDS4.FZ\VmY%qHkt6PCRu@C_s4r3p&XeDW1cUq[.a:q
%Z<-)JU[':jqp?&FCm2PbO6M_IYk^2[`>`@E@8CjG&fBMV@1s[rh"&0.o<)5j`P'9ro+Or:^5Z7f-V1oaMG7?Ra#+h37J'g*71u2/
%b'DI$.>N#pQ*0$2mCMlZ@9r\R]$%$(StsO$]$&_WOVAOafSf)Of(HK$XHtU8+\rb:"#"BBq$'#"?A$2M:-/DB%QGe(N>HI30$]GY
%8[-mlY\H<A+>K$m'Hp"jCd#Bmq`TW(aT[ZfO>:#mikric:NC!ff#*9pO(:As_"ZY*"X3JT]4=;3P^Y&/B_u%kAgA;VU3klW31dmT
%^@h@C=M?L5B1SXW,-C9dS=eQ1?Aj+-8j^g\$f8ASKj3%;^Xmf.EK2VX8]^^Mje\Y\1O#*[+Zd:PE)J<L%ODdap3[=ACmEY<:P]I3
%0?OK(JCscKJ_klB&;d26rYl]f?6.rF1,D[WV_!QR6n!."&bcgK?LYJ?Zj7k`lBBJbC,K$YNc6e7q`+!Llp:>oEPT#2X&LIOQj#cK
%AH=Gsi3Rf_GJFJg8@HUqJRQ'*qaAFMppJa2\--,\.=)i5$bY,j/g]AMRl1b-K[N!lH@uB()'dhP&6's<)d+a%jH)B9O@PrZ@n.*'
%J9G.De`1o*j4MgH,%=jJY0qJp7ZTqQP_X0T!X^FF^$9:Kj&N.'#@hQj1kkJU.<)b6[RXof9N*^(_lnbM]5KPMSA:+e=G%G-T.2$!
%?8f$8ns6aGYTZW/JLCqKEHVX_H'69\$A8>tcakcP^1nee`M_8JMA_tjI99g0i$j?Ac7^[<,WB/cYjo&r8,B5q+(`SK5poR=g=hkq
%aGGa^$9I-^jMaJT:ed@6hAdKFL?Uq?\]7=<XhJL<VT]h&L$BbG=)!#J0.o"!m2E`CRP&NilJY[V-f!5(=-Et9$nUG9QS[JF\K/<a
%e^1?&Ltk7k'^um@$*T=NU/S;Fau(&gHE1:A]:^lt=O+QRF)YeboW(Ahi^+bYKUk%iE'7Ja5SfKiO*VbLJ^5:fQE'&;Sji.^9_+F-
%6sFqI.5:bDoV`Y+$.2;":OJID^1="jF_`4K<#KoCTRM97\<bIc<12Msg9N1aMR5&KRG'rYpT0FMJ-p5_fq^<+oJf;k>n(9hTbKlt
%Kd^@0U+$0hNhE"e6)ZEJC=\BP)1rr'?g1TEj!Il)#+.1q'F@V6'I7b<8I3g2ShpL"lJV!S/E0:fntlHOp[kus7NTk;Rkhi-h"j<*
%1b(lI21E"+7pgE*U!+Al>aK)5?Oe2K%Kd9=H:-FhF-85]de+@fS^=6L3;luF(hd/][3/C[$YZl5j8q,:(E0r6E>@2@f_F.JG^\,I
%O6>6`(4KhMYi:FFE*W+*@u`MX5I&Cd+\44\O$\(#)peL[[r09+aKIVkm^I'r^4)i'&qME\[h\LfF#Dgr3.@CXlhgM%CsuOG1(MPQ
%p#=2:0sa9\[t1MVV&.j"GbhIhPUut5GL_LIp=UL/UOntUK]fXXj-q5T_j6(-3:1r$8[o(pcs;5$ljE*[mjYiR5s[8I<*p"#lDkps
%P<5_H'5VshY.j>hl`RtilKcXF#<+`D=pmi6kBH:(CS7.dZNds@WGLkc**f)M/%)ue].:;$;Yuc88o*^il:O3QZ&Tm4=T2j:W<Y"u
%$I7i'>3rE2mTSt[`P10MZ<;4X/3W:&NaCs(QGYoOY\S3'riX0,3pa#emQ0^D4C/6Im\b/'C)u,qRKk3?8\=s_"deE@9're2mRllL
%e@t2;&t/KeKA!Y77h8cS,/u#Q[+HfeT>,0H],&"oZ+CeKL;upueKE3;TYhI,kV,j1`M:"*"m>JAS.</dVL=NP1i'mo*8[:]HWQ:n
%Z%Dn>B@k)Ofl5<**SiSbMP"oC@98KPi-bNZe!P?[mr%gSQ.k]mm$^0NkH;1ZU'E7c5$?6jm0`.nSBq4S>3p/$I2BNA>NE8ASl"Qe
%pYAj1XUiFMiD\a$JlMA75us>5(>UE!TE!jajPA%lRsB2uG3^'e2k]=M6@cHZ!NF7ZfZOL.&4IV0Q5q!,T7T.5plD2q/BW+ff8Pa%
%6@4b[")GZVpCa5cX[5tW4d7N"1ZZn.0CMakoC5auH$l<9ptFFu@#^"u=pnm50.q]VGG78qWELCMJ<g_b\JU5`OD=kZSpg>gMUU@:
%rLDasW&*/ARr"uP7n"=uZiR!s--lZf7e'#$l007b>@:\A=sT-A-P6TUdi(t(DdYF-I_edAGU\),l41J@L,9J#X4^_Nfs2O0K%tj<
%$FHdHD'Qr3;B+0lg@n@_esfi:-d4oN/#cU7;Q\As</K)8-,p>A0BSX1aeIA'$7@S?:KGJiZlW6ljHX1%SEjatCoUA@[5_sBbEA0\
%#Uh1GDh:@r88EPuihR,83'=$("DP8ANES(p.[:gM=;7/u@(HDh;(5M@l"^n%/^/XB,@PA;Q\e!XQC03K*r)ld=L:]B'Jo'LGa+j6
%b+qaBhi$M2Z@6Y/hY-pZ&cI/.+acd]cUV\u_0G3OAT#"8c#7@[BbVe>PK2kR/XoEJ##R(XP#re#hj[eF^Fto1GP(^3=FU&dpVX<7
%[Y=.-J#f:5GKU2):sUDMlcLPTnLZ%iP!6:'nt+WHrPHm(=8C"r#P(9`"eXM_@0`Re#$qFSs*oCQZ=?Ih>dl)rJ&i'X!ik2Ia&5N,
%J:IcuKf3*@K@58_cp\:/Ba"FKr1%9ZiGid:GBI!4E%#\Q5k_/r&anfDme4*/CXYP=\pY!0%-o@A@p!6?gkA.<RC-pB<SbY-aqQ`%
%`aiq_d)NMm"`Nd*Vg97]"n[,L-:/lAk/HXun93RjN@8eD2dOq@ZEPQg*>]m!?,j113N1QW-l0mTL9N80!BAOfEH)^OlR_7]LAGkQ
%23r>/p!crIO=a/'h+6"p,#@hL\+-rO7]Y`u=OjQ'Yn&k/LuO,%DNnYb@LsLTK!%gK1P.nEaTB%WnQ',^m#1_$Mf^l>S`j08X@7DL
%^8d0`_Ed%n(U^]K4+2sQ])KjV><Z*jZLsP6H1&j5ZX"Z+K4I3im,!ZbUEqFQ@BIh%.`Mm1U`.bQBhmuB#B3.BS(@@J.m]0EN#22(
%%=,YWWIacK;67=aokaA0`GWW<fbUG!B+]9M0)TsA?kKhQ<Ys`&a+WM.<(D&k+^-!lgKrHXQFsQ"aLY`uDG4Ts)Yn%eH*>ZFZMf/X
%iW&LECZ/VF*C@hSi*AH5a5oLeM4KQ[!80<_V*b5[Uc7NLaHFK^9fs[\6G&)0I+a=BF9l9-Hq9#@/!u8n/f\?-@t]4C%T36XLN!QT
%!%Q_j]5Yh(EU=GLq9Z5=-5lqj4()=!+[=W.+WETYm%6j/"TS16?&0RI*.F6FqbL-nqd5(sLaM]gS*n^KKZ!6l@/dnR%_p\^ia7DW
%mh62=dGoFTTfuF8A>Rp``_ADq.-lFm4;>suKG>8MXk%<Q,0d1E/&<i`$9rHP(!NJs-J,,1`$@4]!kkmfpM=",.p=0I;)a7o:&_ps
%8Y@mH2lOi6?,,d<R,0,,i$cL]3NK`GJt9G!Qhhm2d0B&$P72FSATj8]!V06dR"q@1B"*SbadP'/$`TA9$*7q_b9$D@CNgrNi=ZmE
%()?;/r=Y7g)qG%e,b:EK:@9p,aDKc2'!A-S8EN13lqPO+h&#gI+'I0=G$/H][N8;UVQ7hU"M(DWab_aY7Vs.up\;VS11p)SFdgpe
%Vd&er(32:Kb%-H3c"^:*g_*$d-?rRo1ZT8WP`*0HU+sP/aM$G4q%=Ef_2!#dR9\/)bXZBa,h9J_*Ma01VQH?A@9h$TKi38)M8uX7
%*9+%Y.@OUBUL_O$<?fK)j-%GcoleilV08oX*0XODQE&?G=_!CC4(_N_>tF2@=KeW6rHSG88\/H1^r^(qnjHVjN"_<Z@F:-u=hD%]
%)bIlED6B:6jl-plf7&V(4MVBV1d%hnXeS*`LX!uqjc0E-;uL4#.RW*e=Kh._Na@]Wd)i-YqD5(`iMT21T42GuW6UYdTQfPiQeW5?
%2[2FLdIb15;dmTro6ma74sW%fO)Hr(r3=m.\49Ho^2gVmTM<n-c3sI&H@`2PpbVODqc?;K?[8,3pRb0jcdl+GfMf9=5%VCZLl"$A
%gu(*.8Zn6Gq[X$a:u=oDB7SC27012ob68MMBVnG@"G7E[1o,6^)d]DG,tl'+[Nq@VTSI6GFF/u'V!K3^)(dJC$0fjM8YZKLTV0<=
%ol:pdOF[<_70^:6P!6BND>PHgL.&%u@Mm[(62%lB4P\dAl,MKT6Il9dG^'eE%&S0$iVP(@ZlH8(&1R<A+">%MhI[3[4X>TE>2fXH
%DenmL*^dQC5EGsO/2HaH!t7:O@-EZ("+[0P%d6PZ>]Rp)!<sM`E'8A`!1J"oG&dT:\rC`N5[OS=96UkJY>6U=*.UE,5:@"l(HTM?
%%KNWYWSuieNGK(a*kXJJhLBKpNT&fGCSV1??p`hl!@O"JC[l6OGXr;?2]"uCV0R/Dc?k,t%-Mq@)AE*P'?gk/Fe=!NL)Ck\Slc%@
%`f0U<puXfCD`75I6GNA>#pr3eMa\Pk0F6+;0DW#u0A[f[K-_p(TeftI7LF7o.q-QHpe@'7!=:`+P&4ol8Ld\B'"cZ%$Ue3mV:cK?
%\17kDFBr>BT=/:W,!4YM)^8q\5[,5nU8U>hPcS'?oQq:h*e7@X`n"^n&-T%_Z4.7:%NonK;VW?eAPJT!_V9,[03"'DZk8t=8V3j.
%8l:4A78Y$VS.]<A6<TJMZDZ(G,XHK;:TJV3jqmq(>ch%"CH&R7#o`Yrg4f&3kgInq/ULd[DW&r+;Ips+"'f(Per.nXMA45SCVR5i
%1ioAP'?L#-SM<qp-LBpr6]<p.\I3GICD3g]_/O+NeZT=BdA%pR4rSqbr4WZ:FU0Th9[Ke"$><YJ[K"kOZ_^%okeK2S0_6J@)c#A.
%[6,K".1*+!TcX:AhYX3(cGBUe:+kaJ0*PtoPT^+ob8&S8pm_$q:6kKSKgZ(T$/ZeMHW`HH@.DeRYTXh2+Ehat"/j8_[(5hT'-1OW
%VHjP_k>]tKB)NUp0P#`7-;8t><0F#7M1FYt"BoPM,Z9EH&I7PN+"V@h$,kOTDk*OJ.GT-2E>H9-Gcn+]%Qq=(Gd57,d%m.K1W$EQ
%NEHb0Gj<J!Vo%1h20\!,g+[;t7QMsGLlDn%MBf%_Gi<WUcbfr'8@!)2A<Emb$b[s(2_mQ')ETU7NNE*4F,8Fh?jK6F=(,lQ-[,+8
%ZF%-Ws#0b*YbTA!cI1%&:9?X`^Z#'Bmg)<)]Bfdoik(neD?j4h??Aaad#MNdb37rDE1";*3H5k.2c._]&+\^5=B3o]Z&Z+9=B+L[
%f`8B:7Ap:!T.XZVnPk,m/85jf#3/uWk"d'c3WFU-2'l6F9/DC+,)":]B_+$h%O[4^S,M,6QO@p+/bY<T`@:_lIb)6T3$Q?bS&*;N
%$])$d>kpm?&T]Y8FZ+D*M@CF4pg`,\leUJ7d\kRn`3*4L0,u*P]?F!Y_7]L&g@a:;,!oA\`5GN)T>AI$?+_fGKYq@U/l*dtE$<=U
%E7(q%La]JgEetR.':RWcm%qR_CONI$AJ(]hq&F4-k^8<#WX<G*aF@@MmHAP;+ZPb6<[o3D]"`7od9dU99:]fIV9bu+dmV)cjLpLL
%iT@ue[mP(n4CX(a";>$</(_5o9O8if+>+.0aL[6`Y.>0dX]e8,%%36bg4M!<Fsm:gj^+f'\1Z-bj8N5lB>bm>oq4Un38\qW/1im0
%4.@are=d5rMqJ;qFU&G1#OWVJd77^%@a/N*I-AO#MsL47,[k!-7o3`&Ji<)D;UuUcP"%a!i&m-'Y%nP%@rH>"XdWhq!\7FkQfI`R
%OdS+^+d;*KLrqYbXD>Cp'/5:R2PUBD8O(VbAf"cDXm_=299:1q"Q+?QPektM!i,_hD91JP>7D/Xf9#.r<]G#-4^Ni1P0s*Aa;_;!
%k<!NV`\FM+.:mL96P$OMd_Sd8C_?I/6/B-0G-$=ID`i%&%4h?g4C2Bt%q65jNIN5#gWs&*:YY/<i^+Zf[<4M=V/.TK.t`6fp3Pid
%,<U.KDL%k$OV3_`hXGTI?pU@SXNoAeW)!`PD#@SF7md9-"6\CErnt>LpF"fG*AK/h6[iW<6c].:8;*)q4LA1*fs`fb`k^]AZnQ+i
%k/LmU0YWhk8;)JMD=&[1H\V8MC)F9p#T)EJ7+9/Ydsg,+*KG\H0]C$UY-c2>@P#ZP!\An>kVVT?4ts8eP`ZPO?k-jH\u(uE)/\3*
%.=C`C>FTS.ibF948Zmp"`qooE0uWCsb"Ls(I8[mBg(dIUJKa((%k!*%5Y"ZA0t'A\0J4&:#[I^\(;Stt>Di]nQ%q2+Ct<KKVV*&8
%f_,!0T!o46l$I*'*iMCJd]0ccH5HN]N49@pTV:O0O0/eKU)R^MU1##100F[RHYae]2&Y3ENW-M)16hc`k9#n=NmN"r*4+VQrB?^K
%2nj]]X>\G8"M[2fAuR"3`N5=s!Iod4(bqYCg>QU)/G#G,)*/edO2M7rQHol:^UF;uLt@>'0HV(8A;V3JeEc<*X%HSX6Nkc/,&i'O
%>,"l/L0e%0-,tbS?^S,PAYBX@_$p)rLQmi&k7N?LW51dHbcko*o+5e-\&0c0=<4J*H/%j=m.Hn/rJT%B-GSaHK/KBXGms[;ClUOV
%"H",gma:kpSS%2TXOOH96!'5AIPs]&hcl;:DHRo#+mOd`,q!1u_>3eig2UU!C1rT(T"tM]W?H4+#ImOs,pL&G.#Rr>_[^<>lki]'
%)Ebs/JnKZUF4`&uERk"U`?n$?V:SG/?]MrSa^iMM-aI9C,qnh+:NLdX)>Dgf2MFM>DGkj8&n/Tq7Gs(l#Bl6n!0'Ae14ANpM)lK-
%P0Q@g#4mIS&l,4@`.;?>RmtH^N(+%mdHGig+%i<G?*H_U2<pjX(6P*F4Er4DaXd>#=/?A[e#8`iNJ.TJ'\=V,f"e+&NT!E6V\aXq
%[pdSt(h(-TLT6I<`W?g*7*uKg^aKP,AY=hG65g<Q5^6o!Ll"bReUu5'OK)4.=)&n_+X,58D0r$$d2]PB6J8/s/[.\9K8/Wnfn0k;
%T*'(,p7!?\2*]U-cj.I=,*01nh:/Vs."3j)KTX>Ths+[AQT7n9fg`'=h?8**/nNZ8V+F]M=3X]ABnZTdo"%cY1!_Tg(lb/S_Se"^
%H$'Em=A6d>eNuU'<sXW'0!gKcbd#gEer"ZUcriug+:Ih5N8$46+mY)%mk;nslhA'3n$9g$@@hc0H+p$%1Kg:tpF^l,0e>T3#>:n0
%,=h\)7@+'f;[1tiZ+bY:?Xh-\hds$d</Ma;/mD_Ro;'GoEh3N`E,8,64\,qo@utQW<WG[6Rh/X-Vb]qP^6h$k`]/,Z%&&5UY4",J
%9dZ]iA!a<5Rit(EP?%5qV\.E;)3Amr@Xqpe`u\GUCXmVCp/p^kmF<<n<?EBmf,A^`n+k[D3,3*@YPuD)Ui\B66C'lDm_jNUKAWuJ
%@/fQ,hmXEiP!4o^KpiosN+7(F^EE!Ig[j.5b5tIuo#s`;dhSDpWU_+lhP9P.?p1q7G\IY[c[7b:Ec&!m@f;H8c*A]N`'Z(\'<9hl
%dj4q=pb/baf>2%QC+?k8_-t^7[&o(G%9%oq.Rg5mrjQ6$7u-&OaAAC7;J<;Ce]:!F7+reTmgHOtBIP+'U9Z2[o]94i3_!3o!ofn6
%`F-brUgajh7XYNTb<ZXgO^15g:.#j<rDa6H<N^A@T1RFElWn(9Y#lf8MBO6a%H6Doeuuh2:5i@Tqd+7DY*W94L^NH]ljlM'6$snl
%L6G.'.7R8jQ"!GuU1PZYe9V[Kl"d5AGRtT.*,P[';#sSZha@Ve>M?$S$Dsr3hl-r1Sco06<I)j]PH)sXr_TUY<I4R^0.r.8`^sq`
%ZmN_jI_DFJW+GrA.X+D>ku>jW^S*W)O1`=GPbGV)rCB^R0`<RL)1LW"hm65kCE--"!S"$+IdhUt5tt+`@KkDukZLCX.e2HG'`D?O
%]FJ`SXXsf'$]d%GPsdclkhnAd]U<._oS+etEZL4q"YC1%<XE9WI?%S2g#;]Jp5-2q'8H,CUVL(EUqjK,DHgKWZ5'^fBmuK90UHJq
%;hlT2+[_8*O9c_AMf;4"9-YP.>]cGpg#bTmJKTQlO+k+U?bl??)d&P,p=ErBe3s=3RL\Jr<L=&5>U%=DSt>/'LN*h\n;5#/1K3<]
%/eGL9?%e_M"'VpJ0qi,]KL/tD%Hj`)!6Z#5_3I5*C?6'M,@[o^\Nrk[bVWFnO2ARCGlmGQD"cK`3M9lti(Wr626l_H'(n#DXiVe[
%KC%@!3Q4@OZ2_O2S=]39S[Z5658Uq/I>9@="4'jF3t4<G5\gKe.r9CeIU^rGB$lBH+"1`dViJ`QJ5q>87C^/A0+s)\F"u/?)FOL"
%.(%;U:ALYi#MMF6-KmZ;EkucsdO#IG`Q0E[iC6^UXp_?fl8Vc!=VI5h1qQS9^3Vr11SS+7l8VY2!*G#,Y_m2P:Wbqb7^OKfeRn](
%Bu6R56Zc"\DB7A'BdY_\"iVcNXUSM%=fC-:SA*9@SJa`j4Yk/EH>!9un0bRIOJbDp&EaQ?RHCs'O7bl1=hG,5!1Z@Pfoo5[l4dMk
%R2.dMFFRWO#7p(&efJ:p/=PoU;-"7t`iNkq-lSH#>!ZiXaOmsBpAHI:qLn9/IXsAH.>%&m,Cs_QF_eA,eO>9(p\Y2W$r*d_8r)sW
%Y<+nh\9ai.)[C8f4,Qr%_a7H8'H.!#NWG,JEdl"S&&(VU4$X\I;1+S_$O<L0i>#n"ilXbY_?gM!C1mj*B427-Y-lmm#>B5O)jk\`
%K*XQ<4e)'Znf1W%RPhgtMef<3^%irE!sEPJdS^TTPjniGi/NPs8uNM\'Dqn(Q!'_!8P'W1IaF.U6[PLUek!)eN`aLE]$`F*Dk7h_
%H[("TV8[RP]T+jjg?('<VCnHr\9OE#&c4Vu&[6quWh?F7pubO&KkjMM(OO^]/9H@HDoC[)c:PtLj(a1q89NOHk7N01CC:M*E\l$9
%L0FISBP4a]ZehCt&<cQ'F\sX?([4/si0ep6m,15TP.>(AfgQ(L2'Ei9j3&@#mRqS&#GKt")*-[N.Zti]XT=Y$82*jg-PSk1!uXqW
%lgV*D_!>Ar"Cp/0H)*)=j0I]XWM[Hu2mAG2ZY#sR3;\oJ(T#l/!$aT=)jp.*h"uNA7^`Rj/a.!k"J@Oo7Y@k5=0':ZU<.o3l#^o*
%1KjV`g]dUn6W,ad"EoVM3I".A_d-QJJ$pm(X^W7.!_YL\BF'7l!t1(tPH,p2\"R:8d<I6\-7l0[^_jb^kn^*D7HjMcE5D</(u,fk
%ltdALi$[C*B]Y,2MMZ>sAVgF*lpr$b-=aqfOci:;\C?uC[2>1LR8kle[#.<@YitE79)MPS#?O\/'US]["Hg1g<@BZ"/eh,UN/R!r
%fidZTRjI#G&LdA4=&4__=)>)J[!eL03GeRO8D3oLiuq/DL"?XZbH!q]o=P<:#+2:3"DEsKenK$Bob'nFTjEXs9'rX-L&5T+QWZ[\
%42gR'JVu&dm7=/<&%Poifo9\:NIBNON%cCYEAg5qP(M+#:0Kdlom8g#5JEH*ii9ef'2aKkNI7"6S/eBL&=L3ROUp-(nB%go,XlLW
%3-hF8O<Gj!Ei\oO^jUr[[.>>]/o#CKkJ/#^TF6?\1k=.D9CWX&Hfl>fqpBWmR5PaF2)Bhp,50LIU%qj5W.Bj)UimU`<M0=abf3.)
%b[M#3fF\qjkC&a5KT3[53*qOpSY?-e.*_TRW<\Uc=]Q0U\I@N]Y/J`fYU_$`oTLABes,^?\<**=3S4bc;cFgnWWZ8B<B@dnW^aWn
%[RkK@0ZI>%&jUL[F5%NUO3!o?PA>PbdO!YG\D4eh'OV]^Sj`5W8dBghpS%n<`\&N'i87Vs<:hqAS7*$J6Yj\YDD4K%Oa`DWJYmpg
%V8Td(N2["6bHFC`3lZ_K9e"%(k!]C;<f7''"4aT-;BF<LE5dIMb\D[][fV8=LdKLu%0KCV`ILW.=M'm&OD"!s<cnB#kW\]SAhIum
%%@sDTFW?c,J#pm@k=/**:rk%i:Z"Zb*KX_>KFMSsapT.'a5A>oP"(D0k)E87,lRF/rap?c7"obn0g#[)#=G@L8@_YR1587-_L@k$
%)Br?5;&]ef8JGOUb<m!`(Rh#(`P;g=>dj;@-lsaHM=Q&FdG,+JWh8]%P1NX+je8#K@2ZH4n7nH(VUssFWpiD&/S]((V1B$b-*?O`
%!(:F)3lctK8#o=L5(5IBg&?::c4X/9]R:R4dAZ.H+2')0Fm`BPOCnAY"sngEN&$2b'GNB4X2O:6`p9jn]X50g5pT_cf\4g%f<&F!
%lP8qp>;?44:PW96AW8M2jA]6=@Y#<XTI`sG8<@Xb0.4b5Ln@En.sD.3YGN'b+m(5f/86gnLEB&VI@r7fY==0\O0-FZa7>pD%B&35
%br)5=B@dEmg"oSumtobW@tABf_r%=""45IBk/3^MY9.h7*n-`2QD6%JPW&Q<JO;DO_VOC>hH=5&%kM(ar[LQ(<uV0.]6-2H#/ZC`
%N#Mj\QW?Rh>Ku.UY^AES7WrR(']fIUKDgP0[BJ<8'PM3)@kEEoSQ`_u`b"!n'W["R2AENTF6Ll@<=J+R,Q&V_HftXVTs2<DHRG5o
%Ta\0sNl3!aAf7]Vp%p3qAGPm,`T]*d1NV7_6tD@EK5N)AdLI-J1:Af8e6nu0H3@#EBgXP;<shfuB!^p*#=2"+W[>(sVo_Qs/Vtrf
%h9<3#bA(H8-9X7"WhG>S-@fX)@*aj$m=0LqkqIQHqF*V@YiM7311t2bB3>TS+S]U]-8j"(<"Z_IBW9#97]@buIZLl-X&]\=:It"a
%eH1^-m5C76'rrU<&JN5tU`INP.5%G5.t?+^,Ze5EO%%oe7BOufmFS'.HE[Ah-2c7D#Gqno'!oML/_m/4PXWTlY@Weu1DmU.?)S5L
%Bo"=YaFp92TbeVqLrM;(9\m3OVJtS_YY06*pbk@6YC=m*0a9T712(hC@YX\LX9Yd)m(toM/Oh".@*>ELZSIS=eY'3m8?=\QBh;/<
%PO:HQ/R_e!<>Woc)<lnp'$G>nb`'\t>LG5O9?!;uQ/Ef`OpuNtOBc[k<=Zf1c_rB$@9>E%lW4/YGbVb`N%HX'iWf3"mN*8dMMIkP
%0?!V*@8NsY]'6lRlsVKUg"1J<nd%!doS=6"1]?lcQc(8Ak]sGuDlF?Aj-kBb=CVsY9,t[pmbjRHDJ::!Ea>U]&:mGIngIZYMmC8r
%-^qDVT]B9S/bZ!:@M)0!1ofM>]hkcaBVqWYJO:P@!E,d>rI.1/j*=`thJM<,V>=V$"]>atFh8BhA36UsMh9q@ZRs^Z-"ttDmT-\B
%1KCrBCK*<PDLn\/8[;DtIORG"@SBoW0ffH5bI6G>F"N\0a"L1AB/NC&h!mP!<.A/Cf.4T@s!Tf+#H>[IT9Q]VLb26"Vm07s@(@,J
%f_>Y+%ZPe2m4]c"H1::aDQ13-<84S)o4uAPdoSZa(+tHmJ7#aPVgjP"=petSA-'2%Cg4O@!QQ3tG7A[7mAhca`l0@RiXi0@Q3E^&
%N6i(@*=kt#KVco^[V>0-r0c`5Xgb,B_9?/=5.bo<%nG[Abe\QW+6s6C"uWFp4]G@f;N;R@n*BQ@X6Y@d_"##HrR`YNXhp%peI7bK
%>&78tFN0:\]\-+ENCmgh_\0!tS2/Ucioc]8/SP=q6UjblUIDJ!-W$_i5F7dD6QD;u:9+;gl,i"(]L;QG65Q*q"^(0#Xfbc$lp0\S
%#>?'rG;'A`]ee?Vi%m>:`2D>*\'u'o=.dl!Ts;iUjm"\W7WD=<R4sV"K93BMPfkN1m20qqGo8du[>qeKoE\q4em\H]XkgnJ,`Cr(
%NhE69;iiILcrHA/akEMDO4+$NY`Tu#)lVQOi2&1ldi$2YEEHip37f(g'c@fM1-?@&0W<\`m=5Sp/BfdYA\ZVSEr'3>$*fqc=[m%C
%U-a@n\@:B1>+:`'!-s578ZAsZOSrU9c@\)cX\H33BtCLf]<ND":"6`-:>kN[23A?$BuY-G5V!nJSNFe7=@Tm($)>iJc/(U4\i!jh
%P_."ZaVLNuW#?N[\,jB4Fk@;LP&s0Cf#H+j:-V>RM*5[eMh3r8c]arA;npiMQONi'Of@NP+S;o@;QWL8^7/pZd2o#$m5d'W5ZPX&
%$lGaV$oZ1@I$I((&Vj)2pmIFX+JIk[kYH!co>gA_<V4X-,9Wa7l]:]Te%K4MkV0KXRBj(>bAu/aL`#4A&fB5,.Wb4$"p[RuqB0$"
%%RI/Fp,Pgf=/jIA%jObZrV!Z5i`GMM7hKKI>L?fuPaHXkY!GPC=Dkmck27n>R];BVMIB4`dDl+WNkthL\tklZ%B@LkVB-Sk4<R]1
%>0=;r+ptR9gZpKUT\tBq??k]fkNcsFkB@FD*Wt1^]V_r@pGCb\Y'\F*cLh2s4UBDW7UDN!A1[O.[\fmBb@jOC$R)tL`LiS7bS`8W
%.SU9\s63MgUhN\pEf&"?/Z;(DGbRd7G_a\Z6@r/gg.T"C>Ld1bE&puN%!W$.9@\?WlX0-EO1cA@;?!V0gN(OTW9B+::)s>g7Ii/2
%XXl`8kqSf6"isU5engPClQk=J$KFt:9pri2&sCAF;L,K!8e4-d,MXKj'rG:S>_!sOH;h2dDgAiDmMZr[blS#RFX-A:k_qM)2$Irh
%RNTZpDuE]S&_>@8ksA9!_)5qoZ!_@??u4LA\#P=d4goZ7raC6#qj^]jE`9%N@6.<@1-Y\%baTM96_gQED1)FS`)0:C@Nf_d:R.UH
%JH]$OLJpou821!uPs3+N+>1N%l!Y9&H.7lD`4!')Q#6<kXsck'!n&b;FDGHUeR%UdQ26fKN8:C)al@,1'.:7AQk=BrDb;7Gn@M5[
%-%6P5RbTA@"]`%]86<e,g,\:p58WIS6aOq"CeS<mRM?T^#/;"R=lC>naTBtk=[B2jY4JVq+fDIj>6AS?XMW=h,jc@I/MZeBXH8Oe
%WdU4GKdTB4q`ZkfV!!GDd+590:91%WX][B$X..ljc0BS[J&s&jrmqSk>I-p;H?KScTOr3BL(Z^LS(j]MO?.KXGcD=Zc1Xeu[CFYl
%:Y2_2_!3tMadl=8&0n:'Vlelbm;"L:bLV?V:>LA$'4]qJB;XSU']tJpZ.eTNFo;]bG4]KF94N'5F?(\:8!P:7Vjl,THXN5^+RK_g
%c7PO:F\(Y$G%XiW2DLi`ig@)NbX]'@2VF_SkB>tl($,14;kees'*QEhRL\9f"+sh:X@#!=47Zls&I=JX`nsZOi,A%TV7:Z27!jM+
%jAK=J-Z\7><#kgNg\J91KIC>+==&0!E$g1*hZh#Fd_7^5BKq`ML</IR9lm'ZLOGS6l<h.=DVPpnb#S,352o']G]'ADR8D>Da$33?
%`<%Qs@oN;NAcBn'<2T%3*`Daa7oX46R'-;I,NU>[XN@Fp)0:c'G"hiGr6eJ'?[%.2%WJ)Dp`-JYmHF?5Tg]t(gcrHKiNIU"Y:3B-
%KAsK?<hp5T24r*MWs2-[K"iu63OfeQ#^pk1mN34OFW@mB?-kmU"*MlOGb+.ja*/%<*Wt1^]V_r@pGCc?7HuV^c>JgVcac]$SP<HT
%agNAH+!=HhQJ.Qa,+1[tWP]J$"`\7li_E\dNo!j%iBU?q_@(l0\AmEZVUYB#C(dddBgVmO3Z;U"@*MeEKoLKIaFP$rV9L#'aqX?W
%$u]G?6<#i-Hn`$JNFNEr(8^mT"N*"6SmPff?RcpC,\8-\;A+l&:k\%SH7S;'JQE8gA'FZCf>O,'=O[q*`[']"6FIa[aJ5PoKZZ)m
%Z4;Qe(&X#iR[>777.UQN9)5_F&BRIAeMp@/-k@OW2@(WUp]GJu@Mk4RfP''-8e3/hncgpY5stpq2CtJf5Cd4#KGr#OURZF(]H9>,
%RJmQ#Rnl1EDM$6[A1h+,.FTK[2e"_*H%Xa+aC]Xj]rU`G^Wr?dTGc]ZDk`o;OO6.bE'Oi:MKL&mBT`jnQY09;fAb:=Zm,pPK05`R
%'+o#pVOu5BMfHrQMlV_>i/>t'Yi'Lh\0crHL-%5okgoQC7u%T&e\BI.ql\h2EC&c442T9"XW"^cRK]&;&8=*u!>TqHkZL.XeEb#,
%D,YEScb&rqq6.ZK'r\5EMdIk7_H;?)@5'd=e,f7;]oo;GKoP[t.[l;`U;=6E8`-TnPc<*-Fb:#Le&Uu0.#/WdL8ljhBT3!l:((r;
%c2hp+85_UE/&%B4<9m^qi'EL^6MW2PcQf%bCL*&8nd.r+X?u%QU7+#5CSLA@o5-R)h6,"#OQH]u%b[+dPESS20k,9%QPOES0mafU
%L`d'OFg>E+K3_?6=D)Ap*TG9e_g41pC.!NOFs*aGXb<?(&g\\q#Z7a=SMfuHC>&uJ.'lN;hs#3T:.W$cb3DF``tePn9CZ4+)j>;t
%el&f%pD@tODpqPUp)P9e<!\^u$FF,Ama0BG5>uud%B!39p^>01(u2@CKF3R2#['Q$'.kb<`^9;+&+.XsUH4i@J23hF0gk7]rIu;[
%"0-%iUJ?Um]%3fkm?n>n`4qkUCiP(jN>.RWopNn4WadGUkB_0N/mC-f5(\LU*+-+\^5fR&S-<J-=3t7f%SY_g(]b\be:*Knn1a18
%(qbBd9;0HHi!fo3RLEjo65a?XMrB$2+@eo4eTt(aGiQl\a9.B9n_4E]O3TS(N#_TGJZqP?NcJZ&0`lMPfnGBS1#WH/#RAq0bU=D.
%^bYPXrdicqh9ip3(kV1O^$qR.U%H,D*N?DkSudSm'!K^-DbkcVHK5J4l=1HC=_Qfh?Tfi)&Z>uMdDZ$Dfq='t"b9^7T2=f.IfP0Z
%`1)7L:7Qc79bnRn=^gPr+tNgj4t;F1s"k<uCk>MmbPR,_[8dGtAO$f9*[V:EU`<$J(VMJrD\EmQ2^#7%\CsD+cQbok7,n.n"48tX
%*/H^n(lYK:P7c1IXkQP$(=FMU&3Hle8&PG2&Qa]@(-toG\afD1QsO=D6)XWtOUF4m/%^l`7"8C2Dhj7!6j6Q.iH?9CJPB?kl<S)c
%$#dipQA]cR7;8+(^8+"AeS%JXMb>gDcmI%PTLk:tRo*XE5tS&QA:U@oYIY3OUeIl'Eo!B:Z%nesl?Z"D8TcaLWO#*JaORe6F\qGB
%;!&U">1Nf-R#upn`AVRCP:Yc>_W^`;6_,!2>4Y!00r3VZ.@;o%1S2rL*FCCtof$\a'O54"-.:ZY+tLFB1[+flBGTf5#@8?Eq_iaQ
%.g!?(ErNJUGK94H;-CJ63p8pBVHMaPX#.!4--BjhB_(6):%8Phd=eSVN%7N%KkE*>[l!/L$E?5/;2QKiXSNpF<QjGXg0h:P63e,$
%<L:Fn/=_q^q/oUjEF('K%6BoO5qu6jKm'<\-L>K;SM(@<AR`"7E#OlHOl)$[-'5B3B,#_bhu4FSTX+3:A??X?f]=&"DZJGU;OkBq
%]!O%goL;i3GDQ+Wa6j6Ncm\'&L'0r9%'YPC'*Y27f#XVRKbC@4A?m]#<+-lk)tY':Lb<=4\e;NG2/>!&_1f?lJ7?[,dE1gN0Ott(
%W[<i:PO/"\0l-G<*u>$^Sf$g:N$mRlVVGJt,0Nlt$*DEYB;uC8#EYY^28(>f40\`DM;[boL5K=O6To*,[-ujbog%#F+7D_Jg94ks
%%bZ4&LXcM'Y^2i\%?=:Qo'4&`Ci7`fCDAc$',>I;Hh*bAeWYi.eF,h*mBP[YLZYb6l9Lc$TN/u`TNaS3imEA(>Fi#s>YeL+!@fC`
%O.oYlO$W.ohUgsDJR?rAf.\M+=)B9V-4.@+gt#CU-/t:sH!7gmP5aIkr%UeMj$k8_U]_^''sX03%7bESZH"qu=Jr=\OCn.66j94o
%'Fg21SM:B'jlurD@VJ@Y><e@Hdrej6.[Q*n"&"%r@gtOO:^;j\>N@sleE`9,*Vgn54NL"$J(K<hE7`8o"4?;L7rd<=J`[m,FaEI9
%*0<ngrF;-u!&"`!)cCVh9&hMp_VB7qJt2/slDmmVIWer)5CPk?%u<R<Df.r!Q4i$b'Zib:le8jFHjlm3cF3>akRgRR`9P"kIMHnW
%Jo5.W0M>'4cm%nrQt93K>@pW7;jht@180`=0A#Z-d9)I=To/r8Ao=5pAP83X*a_?]!C(-PMZ^9Lo%=C.den2WQV`QoV"fc2/i+4L
%?<'6Xk!k-?L`m\;)K+'GRaIPrGl45AJ)kmK^3lIGoX&.9pQDpYjSgZqN5`Qdit#@W\TP]+,bD136Dh*'5c;WV]9I[>!Qr*ibMmG)
%`o93nCP7?Rb`e,7It,/,lMuT!c(c$J:c&V>_qb`RTUOTY8_;^R+MC-^3u9m?][XC(5X]UNp2YS3jpc'u5*4Vc>8#a*p@do2,ilj>
%U)K3(q&SZR^QC)Do9pcT!4,G9T&55Ao@r1`^C0]0m18RZm=?8KHc4dtSVAXL5CPCq)BY\p;8r_a69pB\K[\S%6YYrel&N@($3<HT
%T9@BTH1l9ZR*4d<?#,5_pJC;'nU,#9ls]*=k<#+6,9Dg@-bAJfTK_66M-Lf-TCG/ZbNo`q4q)R\`m5n+ke,hX=Nk\=[5Hff"4$hs
%h9o=A_=+&`.aWBii,52&#ejCbTk-/*0ktN$L6/NnR37,>2X1`b<Flk&#(\\2GgD4$8Vu>?F<Mi!DJ00[H4dE`7GaP.[RB.fCD0:_
%:7"he-VUG4`ZmUD5cVr''k)!eo:d.nh=ZbM0*%`o+-C=#@+mOL"BIl-_[^YND/TsC`;.92_HI:]/1iuR%Eag%LXSc`r#k["Rm8!6
%0j:?F2/8?ec;hJ0mL_hh6[FQ1e3\fTP1hi#V5@B_[>NU^/3^HeCT)E-Kk31!hL"A=0*U0gHiO$TWKF-l>iM<,!L?Ol=o_-:*:s;!
%S%Y$9/ofE2o`_Q]49c&$::RK9M7M4.7(D<]-3ac5k'4Lhc9n[&f%RrQh+ikI4(9$XC::[]Hh7e.gKp/E]fZ7`?Za0)^NYPa\$VCf
%rBq<?S]@<`&ai=kPm.""IX;(&d=F")EM!F0+RbKb_uRl#c[E%5*6O)GgX=nYpgiF1fX>lVV_,YAm`EHf4Lk!-r*n]a=8jB_hkESK
%ROI$`W91m!n]cA644cBo?j-dY7*?N!bqRAi*T/=S3EeL(*dQW,D!^S-M<9DA%4TZ6etC_$`F>ct"e\DE",p%"CPls"(Una%DXUut
%G':*^.?IN`0NWcUNpm%Z5(mD</Sf`iaJ)rrbM0<G/8A,@AP8W%`E,r$5LR%j;>tqRKRPBBOdOZhD"\V1157K%B!@uF=MqXMc+iI>
%`h43C>4_fICb<VsU3NERI.)0,?D-aAK72Y:@nh`.Np30C%@+KM;*^lq40Y>4OX(l!+L<m=g2*\64:?W%]hAH\;0;Q08?i=^lo=^m
%X#1u#$Z,kD7I+.6PnQgVVR148!GD$pf>MM(f]AQ,BYKV+,SJs#N"=k#B3BX;^+u1'+SkK5d^#3TA=p(O4ZY?TL7c`<e`[U&NJ7>m
%Fm[AkfbO5e.$!TaRO.cp*Yg_g<`?@t=1Ajj"5+dIkMt.-@hJ"Q].;)V?cA3\qB2d^+7eS;Kbk.'q>arP#gB6kdem.5.G6$i$*J/b
%q!a)i-1JuX(htrWVRGO#-jGglTdd4#"s.!s.G"PU%rD3-mlrVWEh0giRGPuuU"?96i44!bJ.1Hs6+P3Qk\O+N:t>6j@Ps\ZH$3E,
%T$2ihVhFoo2p7:nbZbi1:%`O;e;+Om+D3=_%E(979k5,oXk!;;p8@TZp=_aM'E2\aYsU%`.M^W5XK6QrCE1<E2l3QWHgeu>!/4UY
%8hhHs-E25PeCCA];?T*a[q_R%!Qf$0M;?H2)YM@oSj7rl+KL0QaKM<^ap3f%BrDdT^*u,iV&O9hnG3s&i,(1b_m<Z1A-(=pCMB)B
%hpKGIrf$-iYc[9ePo55+:WQ*N8sZ<4`_]r3M2ZOHMp/1JhMc>ehD-ouW\b-/H=?KNMR/.1niC4'd'-WOUmB5daO"I\$8h=B]J<YC
%%!#ko&o.`H4p"u:#DD.u'@75rWX[^PL<.gc598D[(:lQ;,*Uh!W..;a;R?-Q@\iLg=GO;rBQXfWZD1>[ON2M<NqS_BAU;AHdN56.
%Q.lI`rhS3\Abk$-Q,-Xp20Ln-Xe4>GfhQ&7q$i]a<1@fejFE76;puf<kLTI@*kb<(Ou:>)8ePZO\7cJ&fC##@B)hSm::eL<XkbtH
%G@M.^.6m.tZfZ]%cAKh+Z2Qu</Y>N5qEp(rYZC%h`Is%91PVf2]RGq.TI=XqapHUWSk8a&eh4^>;tmRbN1>KD+^<Q]'!]n<-o0_R
%\ftjb%T.FL&Uc4-D-]Bgj:6bqA6C%6Qnk"%fu[3l\V#HT3mpik^Z0-c//W)&c`BbrD1?n#cJ"nH\X??]kk?9Si'ocP=e:f&2N-<-
%PW>3sdK[DNLu[2X2'CD>&BYZT(MQ/0/@O+C0n9QN5''Lp!8RPUbS_K.[D>SaJK2Cg:9m*fm606C%2Wp=TF1`WQbm=+6W\MUHpj\:
%'9o:.FP)eWFoaQtG&nG(8I%iu7e*oT]hqfs0g]ekP7[=tr6h@L"_-^U3loi5,9W$p*=/ZB=6GkY#3cP7#KT*X0Obt<Q%W,1U.0RK
%o$%LlUE,uG,-CaGh`eor7-uY]Ap-dr6\$KX.VDQ$%l)e^=EDedT@PIJ\;OH.OUt,W0ZLt5OpNkHafsP;qq4$?B$Q]IQ*Z2+bl-Um
%0tKMm=MpQJ>e_*/%&^"DU,)Lp^h[_oJ:TCKZ>uYC8%).WR>3f/1$=!`jGeVQ<HU/Z(?,C4a_p$C=_sbj%B[#80MsW_nAZg]Q"Eqe
%`D@U^Ha)<^Iia`$5NF_-Hn)s2eJ9aF[7hmB?76qar;\#@:D'7Ab+g:n\'utK*-\g[N2kd6+#5bb7=Vq_DAJ#+ht"uXO>PG^C/r!T
%AAqt_!X;FmUf9%L"O@kL%g6u&Z%WABP8HX6(`3Uc2>O"b,ApWjYlNP*M3T@aoA$<OQSPIP1!?Rr"TlL,Cr1$cFu[@=WN`_qq<hCG
%&-_nK-%Vc==Z.!+)Gp%jSl2/3'umlLrk(LGiikWqkEP`qW7oE)mL_L*e/(&5Y0eS5OgR$n*NLE`R0H1d_$GJQeT3,ope&D8MCL!4
%ZcMK2BQr'2d1qpJ"3jZh'6VP$6MLVgFmS[,*4^pCD6X!`.VK%/jY3"$'0DFeUlV1\6J"b9%ND8`Xm8eXW@$?q=o?[$3[rp]1JTF&
%kVg3tcS/NJ21F3)1Dr@@mtYHp#$J:!!)DY2IanK;g/o8F`MOlFEO<;bRiJkU6Cb`;"UElQ33C4SIpCnR=-(>@+O#-gb<X.?99U#I
%%,:tABMhT:H.k1&^0(R!9J`%GmMiP0UQ$%u<:aE/E$%Dt;lMcj?4[iX,n(&b!YRnqk2t]+<*C=XY@q]'kbr(>P->Y5[tGE):%k8=
%f$$.B=NKrM)C?n:>VDbmMj5mXMmG9Em-p11YjXH')CSj]97_743+G4ii'lK->(jOUe1Vo`KHnXH.;%emh7s)s#FBaJhDj^1l6HAd
%KUIl&AiCL,Tssc>k3KL#k2XM>53b1^c\Euh[o0G;Kbi3!E>25IM4/<O9L,[_8r,>q:"&T)q,kb%[lbHcbG&keJ#GbJgnl7[K!fL9
%Lo!@B#.n9$g;LFuE<5?)23Xe>X/FS:6c)8hIftRL9E)2&(YsE/0PXa/7"Q5-C%4Q65J,0YWgjp):j_e)I7rr33Y_>Ffd6#TXTu.\
%O(Id8<YA9PH,PK'KFR9V-&6Ui\0`o2bJAV$bSa4Z#,_`e(mR30h3*]"I5le5ksSP-7_.6p6P'gAb<cA;n0.%l6soE">n&NpfjZmN
%(ta7*GC`=lYVZhG"hT"'U"1./-Y0%hc[;uA!p!8Nq[OV0CAQtSK1edYcV@A$d.A,cOVgT#[eMms.PHI6\rP14.G?AB@]])&XE-J`
%*;en7XZo++&GK1F6L=!?BILhPeSIM^4\0j_0iZJ8_T#lP@BHm06pVQti0O3rAFa.^*pV5kKT`jibV:&jZS'p>I%Y-eeP4t!IAr5N
%'M[>VlEYu7C7&'*%;[I1Fs`PRQc`8IJM=>%P5[CNg=.\J+!P&pKa.HlE#&rNcJt\4(W>5q]'Gg<F#Y;3m)+79'f,I2*C]8;:jd.\
%X(9YHp'5-GOlNtnEJr2O`8h:2Tbf:)<UTN`?EujYT\%F.mJ2MBo#I6!l*m#b%UfjuME3ksCLlnq\kQH8C8S/+m\h(aiVX(p(u/e0
%.]Qq'Qcj.Ajo0C-T5@pXpE=s(9TNu-kD[fSMONdH`Wph6pcs8I'De@3UhqGK'-@S1kDZU*?P@l,d"fp@6c=!\c[8TDQ#^Gm7eM^<
%s'1c'0,-J*%dg3$%Ae_NK"o(mK9mH9C:gd6&%]*Yki8<HoG[AlJn*<VYPm,(nd6!oB_a@)_?a`;D=<VaQe.>I9n$1tH`Mip*lPBl
%J"+gR;X[#W=24@`6PTM`f4]<+K8&lSh67/=@%tq9'm!3ba?IbQ"#?\lOB'Gs8MmEgJX%mo,_RYGU9#;)'tV+Ue]>n0>NU24%?+R3
%C1O$@ilK]dO(*uY.INtOD0`,cdQg/CGd,X0g5&N\Z-ZZ&b?Xa/"iTkS'D+7D>I:;u#*hKr(:C*bi6NIlk+Z#6B:g2P3jM58B#-!Z
%R/mIpni<gd(=?miZ\bt*!$KF!GIg!id)Yt$LK=u&]0ii6+I[Q0"Y(:dg03#ePu=S2i0`SqSj7jA\]GU;Vj]/F^\_L-FIq]^IX3G*
%:=n3MA18d%*T]@ME.hG7fXleEQpu0:Sg7c&]/Rhl`9*,(8]9II,0M`S[uCGf\6;n`^YN$p@QcidlF0Jo]qUbWBXW;RR3lUi3Ru'B
%.U5:MqVWXEQJagV36#Y@WL=B6A8JP9Xj6Z$`Qu<VrnTUks6Y<;s6Xb)rkH5Hm[nt.LJONXn2LCCGCTAas71s&rQh*bs+eAgX2"PP
%hu3*>0>ID]^W1'cqu=)'l/hC5nG@_5huE2$hnT*Ls7hBL$Nq"-#QEk(rq8STLVNhhrs(fk:m:~>
%AI9_PrivateDataEnd
